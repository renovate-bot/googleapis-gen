// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/devtools/remoteworkers/v1test2/command.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.DevTools.RemoteWorkers.V1Test2 {

  /// <summary>Holder for reflection information generated from google/devtools/remoteworkers/v1test2/command.proto</summary>
  public static partial class CommandReflection {

    #region Descriptor
    /// <summary>File descriptor for google/devtools/remoteworkers/v1test2/command.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CommandReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjNnb29nbGUvZGV2dG9vbHMvcmVtb3Rld29ya2Vycy92MXRlc3QyL2NvbW1h",
            "bmQucHJvdG8SJWdvb2dsZS5kZXZ0b29scy5yZW1vdGV3b3JrZXJzLnYxdGVz",
            "dDIaGWdvb2dsZS9wcm90b2J1Zi9hbnkucHJvdG8aHmdvb2dsZS9wcm90b2J1",
            "Zi9kdXJhdGlvbi5wcm90bxoXZ29vZ2xlL3JwYy9zdGF0dXMucHJvdG8i0QYK",
            "C0NvbW1hbmRUYXNrEkkKBmlucHV0cxgBIAEoCzI5Lmdvb2dsZS5kZXZ0b29s",
            "cy5yZW1vdGV3b3JrZXJzLnYxdGVzdDIuQ29tbWFuZFRhc2suSW5wdXRzElQK",
            "EGV4cGVjdGVkX291dHB1dHMYBCABKAsyOi5nb29nbGUuZGV2dG9vbHMucmVt",
            "b3Rld29ya2Vycy52MXRlc3QyLkNvbW1hbmRUYXNrLk91dHB1dHMSTQoIdGlt",
            "ZW91dHMYBSABKAsyOy5nb29nbGUuZGV2dG9vbHMucmVtb3Rld29ya2Vycy52",
            "MXRlc3QyLkNvbW1hbmRUYXNrLlRpbWVvdXRzGtkCCgZJbnB1dHMSEQoJYXJn",
            "dW1lbnRzGAEgAygJEjwKBWZpbGVzGAIgAygLMi0uZ29vZ2xlLmRldnRvb2xz",
            "LnJlbW90ZXdvcmtlcnMudjF0ZXN0Mi5EaWdlc3QSQQoMaW5saW5lX2Jsb2Jz",
            "GAQgAygLMisuZ29vZ2xlLmRldnRvb2xzLnJlbW90ZXdvcmtlcnMudjF0ZXN0",
            "Mi5CbG9iEmwKFWVudmlyb25tZW50X3ZhcmlhYmxlcxgDIAMoCzJNLmdvb2ds",
            "ZS5kZXZ0b29scy5yZW1vdGV3b3JrZXJzLnYxdGVzdDIuQ29tbWFuZFRhc2su",
            "SW5wdXRzLkVudmlyb25tZW50VmFyaWFibGUSGQoRd29ya2luZ19kaXJlY3Rv",
            "cnkYBSABKAkaMgoTRW52aXJvbm1lbnRWYXJpYWJsZRIMCgRuYW1lGAEgASgJ",
            "Eg0KBXZhbHVlGAIgASgJGmUKB091dHB1dHMSDQoFZmlsZXMYASADKAkSEwoL",
            "ZGlyZWN0b3JpZXMYAiADKAkSGgoSc3Rkb3V0X2Rlc3RpbmF0aW9uGAMgASgJ",
            "EhoKEnN0ZGVycl9kZXN0aW5hdGlvbhgEIAEoCRqOAQoIVGltZW91dHMSLAoJ",
            "ZXhlY3V0aW9uGAEgASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uEicK",
            "BGlkbGUYAiABKAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb24SKwoIc2h1",
            "dGRvd24YAyABKAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb24iYwoOQ29t",
            "bWFuZE91dHB1dHMSEQoJZXhpdF9jb2RlGAEgASgFEj4KB291dHB1dHMYAiAB",
            "KAsyLS5nb29nbGUuZGV2dG9vbHMucmVtb3Rld29ya2Vycy52MXRlc3QyLkRp",
            "Z2VzdCJrCg9Db21tYW5kT3ZlcmhlYWQSKwoIZHVyYXRpb24YASABKAsyGS5n",
            "b29nbGUucHJvdG9idWYuRHVyYXRpb24SKwoIb3ZlcmhlYWQYAiABKAsyGS5n",
            "b29nbGUucHJvdG9idWYuRHVyYXRpb24ikAIKDUNvbW1hbmRSZXN1bHQSIgoG",
            "c3RhdHVzGAEgASgLMhIuZ29vZ2xlLnJwYy5TdGF0dXMSEQoJZXhpdF9jb2Rl",
            "GAIgASgFEj4KB291dHB1dHMYAyABKAsyLS5nb29nbGUuZGV2dG9vbHMucmVt",
            "b3Rld29ya2Vycy52MXRlc3QyLkRpZ2VzdBIvCghkdXJhdGlvbhgEIAEoCzIZ",
            "Lmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbkICGAESLwoIb3ZlcmhlYWQYBSAB",
            "KAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb25CAhgBEiYKCG1ldGFkYXRh",
            "GAYgAygLMhQuZ29vZ2xlLnByb3RvYnVmLkFueSKEAQoMRmlsZU1ldGFkYXRh",
            "EgwKBHBhdGgYASABKAkSPQoGZGlnZXN0GAIgASgLMi0uZ29vZ2xlLmRldnRv",
            "b2xzLnJlbW90ZXdvcmtlcnMudjF0ZXN0Mi5EaWdlc3QSEAoIY29udGVudHMY",
            "AyABKAwSFQoNaXNfZXhlY3V0YWJsZRgEIAEoCCJgChFEaXJlY3RvcnlNZXRh",
            "ZGF0YRIMCgRwYXRoGAEgASgJEj0KBmRpZ2VzdBgCIAEoCzItLmdvb2dsZS5k",
            "ZXZ0b29scy5yZW1vdGV3b3JrZXJzLnYxdGVzdDIuRGlnZXN0IioKBkRpZ2Vz",
            "dBIMCgRoYXNoGAEgASgJEhIKCnNpemVfYnl0ZXMYAiABKAMiVwoEQmxvYhI9",
            "CgZkaWdlc3QYASABKAsyLS5nb29nbGUuZGV2dG9vbHMucmVtb3Rld29ya2Vy",
            "cy52MXRlc3QyLkRpZ2VzdBIQCghjb250ZW50cxgCIAEoDCKeAQoJRGlyZWN0",
            "b3J5EkIKBWZpbGVzGAEgAygLMjMuZ29vZ2xlLmRldnRvb2xzLnJlbW90ZXdv",
            "cmtlcnMudjF0ZXN0Mi5GaWxlTWV0YWRhdGESTQoLZGlyZWN0b3JpZXMYAiAD",
            "KAsyOC5nb29nbGUuZGV2dG9vbHMucmVtb3Rld29ya2Vycy52MXRlc3QyLkRp",
            "cmVjdG9yeU1ldGFkYXRhQuoBCiljb20uZ29vZ2xlLmRldnRvb2xzLnJlbW90",
            "ZXdvcmtlcnMudjF0ZXN0MkIVUmVtb3RlV29ya2Vyc0NvbW1hbmRzUAFaUmdv",
            "b2dsZS5nb2xhbmcub3JnL2dlbnByb3RvL2dvb2dsZWFwaXMvZGV2dG9vbHMv",
            "cmVtb3Rld29ya2Vycy92MXRlc3QyO3JlbW90ZXdvcmtlcnOiAgJSV6oCJUdv",
            "b2dsZS5EZXZUb29scy5SZW1vdGVXb3JrZXJzLlYxVGVzdDLKAiJHb29nbGVc",
            "Q2xvdWRcUmVtb3Rld29ya2Vyc1xWMXRlc3QyYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.AnyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Rpc.StatusReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.DevTools.RemoteWorkers.V1Test2.CommandTask), global::Google.DevTools.RemoteWorkers.V1Test2.CommandTask.Parser, new[]{ "Inputs", "ExpectedOutputs", "Timeouts" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.DevTools.RemoteWorkers.V1Test2.CommandTask.Types.Inputs), global::Google.DevTools.RemoteWorkers.V1Test2.CommandTask.Types.Inputs.Parser, new[]{ "Arguments", "Files", "InlineBlobs", "EnvironmentVariables", "WorkingDirectory" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.DevTools.RemoteWorkers.V1Test2.CommandTask.Types.Inputs.Types.EnvironmentVariable), global::Google.DevTools.RemoteWorkers.V1Test2.CommandTask.Types.Inputs.Types.EnvironmentVariable.Parser, new[]{ "Name", "Value" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.DevTools.RemoteWorkers.V1Test2.CommandTask.Types.Outputs), global::Google.DevTools.RemoteWorkers.V1Test2.CommandTask.Types.Outputs.Parser, new[]{ "Files", "Directories", "StdoutDestination", "StderrDestination" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.DevTools.RemoteWorkers.V1Test2.CommandTask.Types.Timeouts), global::Google.DevTools.RemoteWorkers.V1Test2.CommandTask.Types.Timeouts.Parser, new[]{ "Execution", "Idle", "Shutdown" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.DevTools.RemoteWorkers.V1Test2.CommandOutputs), global::Google.DevTools.RemoteWorkers.V1Test2.CommandOutputs.Parser, new[]{ "ExitCode", "Outputs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.DevTools.RemoteWorkers.V1Test2.CommandOverhead), global::Google.DevTools.RemoteWorkers.V1Test2.CommandOverhead.Parser, new[]{ "Duration", "Overhead" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.DevTools.RemoteWorkers.V1Test2.CommandResult), global::Google.DevTools.RemoteWorkers.V1Test2.CommandResult.Parser, new[]{ "Status", "ExitCode", "Outputs", "Duration", "Overhead", "Metadata" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.DevTools.RemoteWorkers.V1Test2.FileMetadata), global::Google.DevTools.RemoteWorkers.V1Test2.FileMetadata.Parser, new[]{ "Path", "Digest", "Contents", "IsExecutable" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.DevTools.RemoteWorkers.V1Test2.DirectoryMetadata), global::Google.DevTools.RemoteWorkers.V1Test2.DirectoryMetadata.Parser, new[]{ "Path", "Digest" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.DevTools.RemoteWorkers.V1Test2.Digest), global::Google.DevTools.RemoteWorkers.V1Test2.Digest.Parser, new[]{ "Hash", "SizeBytes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.DevTools.RemoteWorkers.V1Test2.Blob), global::Google.DevTools.RemoteWorkers.V1Test2.Blob.Parser, new[]{ "Digest", "Contents" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.DevTools.RemoteWorkers.V1Test2.Directory), global::Google.DevTools.RemoteWorkers.V1Test2.Directory.Parser, new[]{ "Files", "Directories" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Describes a shell-style task to execute, suitable for providing as the Bots
  /// interface's `Lease.payload` field.
  /// </summary>
  public sealed partial class CommandTask : pb::IMessage<CommandTask>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CommandTask> _parser = new pb::MessageParser<CommandTask>(() => new CommandTask());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommandTask> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.DevTools.RemoteWorkers.V1Test2.CommandReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandTask() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandTask(CommandTask other) : this() {
      inputs_ = other.inputs_ != null ? other.inputs_.Clone() : null;
      expectedOutputs_ = other.expectedOutputs_ != null ? other.expectedOutputs_.Clone() : null;
      timeouts_ = other.timeouts_ != null ? other.timeouts_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandTask Clone() {
      return new CommandTask(this);
    }

    /// <summary>Field number for the "inputs" field.</summary>
    public const int InputsFieldNumber = 1;
    private global::Google.DevTools.RemoteWorkers.V1Test2.CommandTask.Types.Inputs inputs_;
    /// <summary>
    /// The inputs to the task.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.DevTools.RemoteWorkers.V1Test2.CommandTask.Types.Inputs Inputs {
      get { return inputs_; }
      set {
        inputs_ = value;
      }
    }

    /// <summary>Field number for the "expected_outputs" field.</summary>
    public const int ExpectedOutputsFieldNumber = 4;
    private global::Google.DevTools.RemoteWorkers.V1Test2.CommandTask.Types.Outputs expectedOutputs_;
    /// <summary>
    /// The expected outputs from the task.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.DevTools.RemoteWorkers.V1Test2.CommandTask.Types.Outputs ExpectedOutputs {
      get { return expectedOutputs_; }
      set {
        expectedOutputs_ = value;
      }
    }

    /// <summary>Field number for the "timeouts" field.</summary>
    public const int TimeoutsFieldNumber = 5;
    private global::Google.DevTools.RemoteWorkers.V1Test2.CommandTask.Types.Timeouts timeouts_;
    /// <summary>
    /// The timeouts of this task.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.DevTools.RemoteWorkers.V1Test2.CommandTask.Types.Timeouts Timeouts {
      get { return timeouts_; }
      set {
        timeouts_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommandTask);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommandTask other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Inputs, other.Inputs)) return false;
      if (!object.Equals(ExpectedOutputs, other.ExpectedOutputs)) return false;
      if (!object.Equals(Timeouts, other.Timeouts)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (inputs_ != null) hash ^= Inputs.GetHashCode();
      if (expectedOutputs_ != null) hash ^= ExpectedOutputs.GetHashCode();
      if (timeouts_ != null) hash ^= Timeouts.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (inputs_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Inputs);
      }
      if (expectedOutputs_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ExpectedOutputs);
      }
      if (timeouts_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Timeouts);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (inputs_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Inputs);
      }
      if (expectedOutputs_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ExpectedOutputs);
      }
      if (timeouts_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Timeouts);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (inputs_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Inputs);
      }
      if (expectedOutputs_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExpectedOutputs);
      }
      if (timeouts_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timeouts);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommandTask other) {
      if (other == null) {
        return;
      }
      if (other.inputs_ != null) {
        if (inputs_ == null) {
          Inputs = new global::Google.DevTools.RemoteWorkers.V1Test2.CommandTask.Types.Inputs();
        }
        Inputs.MergeFrom(other.Inputs);
      }
      if (other.expectedOutputs_ != null) {
        if (expectedOutputs_ == null) {
          ExpectedOutputs = new global::Google.DevTools.RemoteWorkers.V1Test2.CommandTask.Types.Outputs();
        }
        ExpectedOutputs.MergeFrom(other.ExpectedOutputs);
      }
      if (other.timeouts_ != null) {
        if (timeouts_ == null) {
          Timeouts = new global::Google.DevTools.RemoteWorkers.V1Test2.CommandTask.Types.Timeouts();
        }
        Timeouts.MergeFrom(other.Timeouts);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (inputs_ == null) {
              Inputs = new global::Google.DevTools.RemoteWorkers.V1Test2.CommandTask.Types.Inputs();
            }
            input.ReadMessage(Inputs);
            break;
          }
          case 34: {
            if (expectedOutputs_ == null) {
              ExpectedOutputs = new global::Google.DevTools.RemoteWorkers.V1Test2.CommandTask.Types.Outputs();
            }
            input.ReadMessage(ExpectedOutputs);
            break;
          }
          case 42: {
            if (timeouts_ == null) {
              Timeouts = new global::Google.DevTools.RemoteWorkers.V1Test2.CommandTask.Types.Timeouts();
            }
            input.ReadMessage(Timeouts);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (inputs_ == null) {
              Inputs = new global::Google.DevTools.RemoteWorkers.V1Test2.CommandTask.Types.Inputs();
            }
            input.ReadMessage(Inputs);
            break;
          }
          case 34: {
            if (expectedOutputs_ == null) {
              ExpectedOutputs = new global::Google.DevTools.RemoteWorkers.V1Test2.CommandTask.Types.Outputs();
            }
            input.ReadMessage(ExpectedOutputs);
            break;
          }
          case 42: {
            if (timeouts_ == null) {
              Timeouts = new global::Google.DevTools.RemoteWorkers.V1Test2.CommandTask.Types.Timeouts();
            }
            input.ReadMessage(Timeouts);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CommandTask message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Describes the inputs to a shell-style task.
      /// </summary>
      public sealed partial class Inputs : pb::IMessage<Inputs>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Inputs> _parser = new pb::MessageParser<Inputs>(() => new Inputs());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Inputs> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.DevTools.RemoteWorkers.V1Test2.CommandTask.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Inputs() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Inputs(Inputs other) : this() {
          arguments_ = other.arguments_.Clone();
          files_ = other.files_.Clone();
          inlineBlobs_ = other.inlineBlobs_.Clone();
          environmentVariables_ = other.environmentVariables_.Clone();
          workingDirectory_ = other.workingDirectory_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Inputs Clone() {
          return new Inputs(this);
        }

        /// <summary>Field number for the "arguments" field.</summary>
        public const int ArgumentsFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _repeated_arguments_codec
            = pb::FieldCodec.ForString(10);
        private readonly pbc::RepeatedField<string> arguments_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// The command itself to run (e.g., argv).
        ///
        /// This field should be passed directly to the underlying operating system,
        /// and so it must be sensible to that operating system. For example, on
        /// Windows, the first argument might be "C:\Windows\System32\ping.exe" -
        /// that is, using drive letters and backslashes. A command for a *nix
        /// system, on the other hand, would use forward slashes.
        ///
        /// All other fields in the RWAPI must consistently use forward slashes,
        /// since those fields may be interpretted by both the service and the bot.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> Arguments {
          get { return arguments_; }
        }

        /// <summary>Field number for the "files" field.</summary>
        public const int FilesFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Google.DevTools.RemoteWorkers.V1Test2.Digest> _repeated_files_codec
            = pb::FieldCodec.ForMessage(18, global::Google.DevTools.RemoteWorkers.V1Test2.Digest.Parser);
        private readonly pbc::RepeatedField<global::Google.DevTools.RemoteWorkers.V1Test2.Digest> files_ = new pbc::RepeatedField<global::Google.DevTools.RemoteWorkers.V1Test2.Digest>();
        /// <summary>
        /// The input filesystem to be set up prior to the task beginning. The
        /// contents should be a repeated set of FileMetadata messages though other
        /// formats are allowed if better for the implementation (eg, a LUCI-style
        /// .isolated file).
        ///
        /// This field is repeated since implementations might want to cache the
        /// metadata, in which case it may be useful to break up portions of the
        /// filesystem that change frequently (eg, specific input files) from those
        /// that don't (eg, standard header files).
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.DevTools.RemoteWorkers.V1Test2.Digest> Files {
          get { return files_; }
        }

        /// <summary>Field number for the "inline_blobs" field.</summary>
        public const int InlineBlobsFieldNumber = 4;
        private static readonly pb::FieldCodec<global::Google.DevTools.RemoteWorkers.V1Test2.Blob> _repeated_inlineBlobs_codec
            = pb::FieldCodec.ForMessage(34, global::Google.DevTools.RemoteWorkers.V1Test2.Blob.Parser);
        private readonly pbc::RepeatedField<global::Google.DevTools.RemoteWorkers.V1Test2.Blob> inlineBlobs_ = new pbc::RepeatedField<global::Google.DevTools.RemoteWorkers.V1Test2.Blob>();
        /// <summary>
        /// Inline contents for blobs expected to be needed by the bot to execute the
        /// task. For example, contents of entries in `files` or blobs that are
        /// indirectly referenced by an entry there.
        ///
        /// The bot should check against this list before downloading required task
        /// inputs to reduce the number of communications between itself and the
        /// remote CAS server.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.DevTools.RemoteWorkers.V1Test2.Blob> InlineBlobs {
          get { return inlineBlobs_; }
        }

        /// <summary>Field number for the "environment_variables" field.</summary>
        public const int EnvironmentVariablesFieldNumber = 3;
        private static readonly pb::FieldCodec<global::Google.DevTools.RemoteWorkers.V1Test2.CommandTask.Types.Inputs.Types.EnvironmentVariable> _repeated_environmentVariables_codec
            = pb::FieldCodec.ForMessage(26, global::Google.DevTools.RemoteWorkers.V1Test2.CommandTask.Types.Inputs.Types.EnvironmentVariable.Parser);
        private readonly pbc::RepeatedField<global::Google.DevTools.RemoteWorkers.V1Test2.CommandTask.Types.Inputs.Types.EnvironmentVariable> environmentVariables_ = new pbc::RepeatedField<global::Google.DevTools.RemoteWorkers.V1Test2.CommandTask.Types.Inputs.Types.EnvironmentVariable>();
        /// <summary>
        /// All environment variables required by the task.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.DevTools.RemoteWorkers.V1Test2.CommandTask.Types.Inputs.Types.EnvironmentVariable> EnvironmentVariables {
          get { return environmentVariables_; }
        }

        /// <summary>Field number for the "working_directory" field.</summary>
        public const int WorkingDirectoryFieldNumber = 5;
        private string workingDirectory_ = "";
        /// <summary>
        /// Directory from which a command is executed. It is a relative directory
        /// with respect to the bot's working directory (i.e., "./"). If it is
        /// non-empty, then it must exist under "./". Otherwise, "./" will be used.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string WorkingDirectory {
          get { return workingDirectory_; }
          set {
            workingDirectory_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Inputs);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Inputs other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!arguments_.Equals(other.arguments_)) return false;
          if(!files_.Equals(other.files_)) return false;
          if(!inlineBlobs_.Equals(other.inlineBlobs_)) return false;
          if(!environmentVariables_.Equals(other.environmentVariables_)) return false;
          if (WorkingDirectory != other.WorkingDirectory) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= arguments_.GetHashCode();
          hash ^= files_.GetHashCode();
          hash ^= inlineBlobs_.GetHashCode();
          hash ^= environmentVariables_.GetHashCode();
          if (WorkingDirectory.Length != 0) hash ^= WorkingDirectory.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          arguments_.WriteTo(output, _repeated_arguments_codec);
          files_.WriteTo(output, _repeated_files_codec);
          environmentVariables_.WriteTo(output, _repeated_environmentVariables_codec);
          inlineBlobs_.WriteTo(output, _repeated_inlineBlobs_codec);
          if (WorkingDirectory.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(WorkingDirectory);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          arguments_.WriteTo(ref output, _repeated_arguments_codec);
          files_.WriteTo(ref output, _repeated_files_codec);
          environmentVariables_.WriteTo(ref output, _repeated_environmentVariables_codec);
          inlineBlobs_.WriteTo(ref output, _repeated_inlineBlobs_codec);
          if (WorkingDirectory.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(WorkingDirectory);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += arguments_.CalculateSize(_repeated_arguments_codec);
          size += files_.CalculateSize(_repeated_files_codec);
          size += inlineBlobs_.CalculateSize(_repeated_inlineBlobs_codec);
          size += environmentVariables_.CalculateSize(_repeated_environmentVariables_codec);
          if (WorkingDirectory.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(WorkingDirectory);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Inputs other) {
          if (other == null) {
            return;
          }
          arguments_.Add(other.arguments_);
          files_.Add(other.files_);
          inlineBlobs_.Add(other.inlineBlobs_);
          environmentVariables_.Add(other.environmentVariables_);
          if (other.WorkingDirectory.Length != 0) {
            WorkingDirectory = other.WorkingDirectory;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                arguments_.AddEntriesFrom(input, _repeated_arguments_codec);
                break;
              }
              case 18: {
                files_.AddEntriesFrom(input, _repeated_files_codec);
                break;
              }
              case 26: {
                environmentVariables_.AddEntriesFrom(input, _repeated_environmentVariables_codec);
                break;
              }
              case 34: {
                inlineBlobs_.AddEntriesFrom(input, _repeated_inlineBlobs_codec);
                break;
              }
              case 42: {
                WorkingDirectory = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                arguments_.AddEntriesFrom(ref input, _repeated_arguments_codec);
                break;
              }
              case 18: {
                files_.AddEntriesFrom(ref input, _repeated_files_codec);
                break;
              }
              case 26: {
                environmentVariables_.AddEntriesFrom(ref input, _repeated_environmentVariables_codec);
                break;
              }
              case 34: {
                inlineBlobs_.AddEntriesFrom(ref input, _repeated_inlineBlobs_codec);
                break;
              }
              case 42: {
                WorkingDirectory = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Inputs message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// An environment variable required by this task.
          /// </summary>
          public sealed partial class EnvironmentVariable : pb::IMessage<EnvironmentVariable>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<EnvironmentVariable> _parser = new pb::MessageParser<EnvironmentVariable>(() => new EnvironmentVariable());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<EnvironmentVariable> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.DevTools.RemoteWorkers.V1Test2.CommandTask.Types.Inputs.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public EnvironmentVariable() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public EnvironmentVariable(EnvironmentVariable other) : this() {
              name_ = other.name_;
              value_ = other.value_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public EnvironmentVariable Clone() {
              return new EnvironmentVariable(this);
            }

            /// <summary>Field number for the "name" field.</summary>
            public const int NameFieldNumber = 1;
            private string name_ = "";
            /// <summary>
            /// The envvar name.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Name {
              get { return name_; }
              set {
                name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "value" field.</summary>
            public const int ValueFieldNumber = 2;
            private string value_ = "";
            /// <summary>
            /// The envvar value.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Value {
              get { return value_; }
              set {
                value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as EnvironmentVariable);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(EnvironmentVariable other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Name != other.Name) return false;
              if (Value != other.Value) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Name.Length != 0) hash ^= Name.GetHashCode();
              if (Value.Length != 0) hash ^= Value.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Name.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Name);
              }
              if (Value.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(Value);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Name.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Name);
              }
              if (Value.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(Value);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Name.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
              }
              if (Value.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(EnvironmentVariable other) {
              if (other == null) {
                return;
              }
              if (other.Name.Length != 0) {
                Name = other.Name;
              }
              if (other.Value.Length != 0) {
                Value = other.Value;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Name = input.ReadString();
                    break;
                  }
                  case 18: {
                    Value = input.ReadString();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    Name = input.ReadString();
                    break;
                  }
                  case 18: {
                    Value = input.ReadString();
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

      /// <summary>
      /// Describes the expected outputs of the command.
      /// </summary>
      public sealed partial class Outputs : pb::IMessage<Outputs>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Outputs> _parser = new pb::MessageParser<Outputs>(() => new Outputs());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Outputs> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.DevTools.RemoteWorkers.V1Test2.CommandTask.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Outputs() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Outputs(Outputs other) : this() {
          files_ = other.files_.Clone();
          directories_ = other.directories_.Clone();
          stdoutDestination_ = other.stdoutDestination_;
          stderrDestination_ = other.stderrDestination_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Outputs Clone() {
          return new Outputs(this);
        }

        /// <summary>Field number for the "files" field.</summary>
        public const int FilesFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _repeated_files_codec
            = pb::FieldCodec.ForString(10);
        private readonly pbc::RepeatedField<string> files_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// A list of expected files, relative to the execution root. All paths
        /// MUST be delimited by forward slashes.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> Files {
          get { return files_; }
        }

        /// <summary>Field number for the "directories" field.</summary>
        public const int DirectoriesFieldNumber = 2;
        private static readonly pb::FieldCodec<string> _repeated_directories_codec
            = pb::FieldCodec.ForString(18);
        private readonly pbc::RepeatedField<string> directories_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// A list of expected directories, relative to the execution root. All paths
        /// MUST be delimited by forward slashes.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> Directories {
          get { return directories_; }
        }

        /// <summary>Field number for the "stdout_destination" field.</summary>
        public const int StdoutDestinationFieldNumber = 3;
        private string stdoutDestination_ = "";
        /// <summary>
        /// The destination to which any stdout should be sent. The method by which
        /// the bot should send the stream contents to that destination is not
        /// defined in this API. As examples, the destination could be a file
        /// referenced in the `files` field in this message, or it could be a URI
        /// that must be written via the ByteStream API.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string StdoutDestination {
          get { return stdoutDestination_; }
          set {
            stdoutDestination_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "stderr_destination" field.</summary>
        public const int StderrDestinationFieldNumber = 4;
        private string stderrDestination_ = "";
        /// <summary>
        /// The destination to which any stderr should be sent. The method by which
        /// the bot should send the stream contents to that destination is not
        /// defined in this API. As examples, the destination could be a file
        /// referenced in the `files` field in this message, or it could be a URI
        /// that must be written via the ByteStream API.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string StderrDestination {
          get { return stderrDestination_; }
          set {
            stderrDestination_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Outputs);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Outputs other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!files_.Equals(other.files_)) return false;
          if(!directories_.Equals(other.directories_)) return false;
          if (StdoutDestination != other.StdoutDestination) return false;
          if (StderrDestination != other.StderrDestination) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= files_.GetHashCode();
          hash ^= directories_.GetHashCode();
          if (StdoutDestination.Length != 0) hash ^= StdoutDestination.GetHashCode();
          if (StderrDestination.Length != 0) hash ^= StderrDestination.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          files_.WriteTo(output, _repeated_files_codec);
          directories_.WriteTo(output, _repeated_directories_codec);
          if (StdoutDestination.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(StdoutDestination);
          }
          if (StderrDestination.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(StderrDestination);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          files_.WriteTo(ref output, _repeated_files_codec);
          directories_.WriteTo(ref output, _repeated_directories_codec);
          if (StdoutDestination.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(StdoutDestination);
          }
          if (StderrDestination.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(StderrDestination);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += files_.CalculateSize(_repeated_files_codec);
          size += directories_.CalculateSize(_repeated_directories_codec);
          if (StdoutDestination.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(StdoutDestination);
          }
          if (StderrDestination.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(StderrDestination);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Outputs other) {
          if (other == null) {
            return;
          }
          files_.Add(other.files_);
          directories_.Add(other.directories_);
          if (other.StdoutDestination.Length != 0) {
            StdoutDestination = other.StdoutDestination;
          }
          if (other.StderrDestination.Length != 0) {
            StderrDestination = other.StderrDestination;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                files_.AddEntriesFrom(input, _repeated_files_codec);
                break;
              }
              case 18: {
                directories_.AddEntriesFrom(input, _repeated_directories_codec);
                break;
              }
              case 26: {
                StdoutDestination = input.ReadString();
                break;
              }
              case 34: {
                StderrDestination = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                files_.AddEntriesFrom(ref input, _repeated_files_codec);
                break;
              }
              case 18: {
                directories_.AddEntriesFrom(ref input, _repeated_directories_codec);
                break;
              }
              case 26: {
                StdoutDestination = input.ReadString();
                break;
              }
              case 34: {
                StderrDestination = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Describes the timeouts associated with this task.
      /// </summary>
      public sealed partial class Timeouts : pb::IMessage<Timeouts>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Timeouts> _parser = new pb::MessageParser<Timeouts>(() => new Timeouts());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Timeouts> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.DevTools.RemoteWorkers.V1Test2.CommandTask.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Timeouts() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Timeouts(Timeouts other) : this() {
          execution_ = other.execution_ != null ? other.execution_.Clone() : null;
          idle_ = other.idle_ != null ? other.idle_.Clone() : null;
          shutdown_ = other.shutdown_ != null ? other.shutdown_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Timeouts Clone() {
          return new Timeouts(this);
        }

        /// <summary>Field number for the "execution" field.</summary>
        public const int ExecutionFieldNumber = 1;
        private global::Google.Protobuf.WellKnownTypes.Duration execution_;
        /// <summary>
        /// This specifies the maximum time that the task can run, excluding the
        /// time required to download inputs or upload outputs. That is, the worker
        /// will terminate the task if it runs longer than this.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Duration Execution {
          get { return execution_; }
          set {
            execution_ = value;
          }
        }

        /// <summary>Field number for the "idle" field.</summary>
        public const int IdleFieldNumber = 2;
        private global::Google.Protobuf.WellKnownTypes.Duration idle_;
        /// <summary>
        /// This specifies the maximum amount of time the task can be idle - that is,
        /// go without generating some output in either stdout or stderr. If the
        /// process is silent for more than the specified time, the worker will
        /// terminate the task.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Duration Idle {
          get { return idle_; }
          set {
            idle_ = value;
          }
        }

        /// <summary>Field number for the "shutdown" field.</summary>
        public const int ShutdownFieldNumber = 3;
        private global::Google.Protobuf.WellKnownTypes.Duration shutdown_;
        /// <summary>
        /// If the execution or IO timeouts are exceeded, the worker will try to
        /// gracefully terminate the task and return any existing logs. However,
        /// tasks may be hard-frozen in which case this process will fail. This
        /// timeout specifies how long to wait for a terminated task to shut down
        /// gracefully (e.g. via SIGTERM) before we bring down the hammer (e.g.
        /// SIGKILL on *nix, CTRL_BREAK_EVENT on Windows).
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Duration Shutdown {
          get { return shutdown_; }
          set {
            shutdown_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Timeouts);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Timeouts other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Execution, other.Execution)) return false;
          if (!object.Equals(Idle, other.Idle)) return false;
          if (!object.Equals(Shutdown, other.Shutdown)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (execution_ != null) hash ^= Execution.GetHashCode();
          if (idle_ != null) hash ^= Idle.GetHashCode();
          if (shutdown_ != null) hash ^= Shutdown.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (execution_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Execution);
          }
          if (idle_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Idle);
          }
          if (shutdown_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Shutdown);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (execution_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Execution);
          }
          if (idle_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Idle);
          }
          if (shutdown_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Shutdown);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (execution_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Execution);
          }
          if (idle_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Idle);
          }
          if (shutdown_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Shutdown);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Timeouts other) {
          if (other == null) {
            return;
          }
          if (other.execution_ != null) {
            if (execution_ == null) {
              Execution = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            Execution.MergeFrom(other.Execution);
          }
          if (other.idle_ != null) {
            if (idle_ == null) {
              Idle = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            Idle.MergeFrom(other.Idle);
          }
          if (other.shutdown_ != null) {
            if (shutdown_ == null) {
              Shutdown = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            Shutdown.MergeFrom(other.Shutdown);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (execution_ == null) {
                  Execution = new global::Google.Protobuf.WellKnownTypes.Duration();
                }
                input.ReadMessage(Execution);
                break;
              }
              case 18: {
                if (idle_ == null) {
                  Idle = new global::Google.Protobuf.WellKnownTypes.Duration();
                }
                input.ReadMessage(Idle);
                break;
              }
              case 26: {
                if (shutdown_ == null) {
                  Shutdown = new global::Google.Protobuf.WellKnownTypes.Duration();
                }
                input.ReadMessage(Shutdown);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (execution_ == null) {
                  Execution = new global::Google.Protobuf.WellKnownTypes.Duration();
                }
                input.ReadMessage(Execution);
                break;
              }
              case 18: {
                if (idle_ == null) {
                  Idle = new global::Google.Protobuf.WellKnownTypes.Duration();
                }
                input.ReadMessage(Idle);
                break;
              }
              case 26: {
                if (shutdown_ == null) {
                  Shutdown = new global::Google.Protobuf.WellKnownTypes.Duration();
                }
                input.ReadMessage(Shutdown);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// DEPRECATED - use CommandResult instead.
  /// Describes the actual outputs from the task.
  /// </summary>
  public sealed partial class CommandOutputs : pb::IMessage<CommandOutputs>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CommandOutputs> _parser = new pb::MessageParser<CommandOutputs>(() => new CommandOutputs());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommandOutputs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.DevTools.RemoteWorkers.V1Test2.CommandReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandOutputs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandOutputs(CommandOutputs other) : this() {
      exitCode_ = other.exitCode_;
      outputs_ = other.outputs_ != null ? other.outputs_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandOutputs Clone() {
      return new CommandOutputs(this);
    }

    /// <summary>Field number for the "exit_code" field.</summary>
    public const int ExitCodeFieldNumber = 1;
    private int exitCode_;
    /// <summary>
    /// exit_code is only fully reliable if the status' code is OK. If the task
    /// exceeded its deadline or was cancelled, the process may still produce an
    /// exit code as it is cancelled, and this will be populated, but a successful
    /// (zero) is unlikely to be correct unless the status code is OK.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ExitCode {
      get { return exitCode_; }
      set {
        exitCode_ = value;
      }
    }

    /// <summary>Field number for the "outputs" field.</summary>
    public const int OutputsFieldNumber = 2;
    private global::Google.DevTools.RemoteWorkers.V1Test2.Digest outputs_;
    /// <summary>
    /// The output files. The blob referenced by the digest should contain
    /// one of the following (implementation-dependent):
    ///    * A marshalled DirectoryMetadata of the returned filesystem
    ///    * A LUCI-style .isolated file
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.DevTools.RemoteWorkers.V1Test2.Digest Outputs {
      get { return outputs_; }
      set {
        outputs_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommandOutputs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommandOutputs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ExitCode != other.ExitCode) return false;
      if (!object.Equals(Outputs, other.Outputs)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ExitCode != 0) hash ^= ExitCode.GetHashCode();
      if (outputs_ != null) hash ^= Outputs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ExitCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ExitCode);
      }
      if (outputs_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Outputs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ExitCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ExitCode);
      }
      if (outputs_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Outputs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ExitCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExitCode);
      }
      if (outputs_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Outputs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommandOutputs other) {
      if (other == null) {
        return;
      }
      if (other.ExitCode != 0) {
        ExitCode = other.ExitCode;
      }
      if (other.outputs_ != null) {
        if (outputs_ == null) {
          Outputs = new global::Google.DevTools.RemoteWorkers.V1Test2.Digest();
        }
        Outputs.MergeFrom(other.Outputs);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ExitCode = input.ReadInt32();
            break;
          }
          case 18: {
            if (outputs_ == null) {
              Outputs = new global::Google.DevTools.RemoteWorkers.V1Test2.Digest();
            }
            input.ReadMessage(Outputs);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ExitCode = input.ReadInt32();
            break;
          }
          case 18: {
            if (outputs_ == null) {
              Outputs = new global::Google.DevTools.RemoteWorkers.V1Test2.Digest();
            }
            input.ReadMessage(Outputs);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// DEPRECATED - use CommandResult instead.
  /// Can be used as part of CompleteRequest.metadata, or are part of a more
  /// sophisticated message.
  /// </summary>
  public sealed partial class CommandOverhead : pb::IMessage<CommandOverhead>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CommandOverhead> _parser = new pb::MessageParser<CommandOverhead>(() => new CommandOverhead());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommandOverhead> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.DevTools.RemoteWorkers.V1Test2.CommandReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandOverhead() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandOverhead(CommandOverhead other) : this() {
      duration_ = other.duration_ != null ? other.duration_.Clone() : null;
      overhead_ = other.overhead_ != null ? other.overhead_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandOverhead Clone() {
      return new CommandOverhead(this);
    }

    /// <summary>Field number for the "duration" field.</summary>
    public const int DurationFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Duration duration_;
    /// <summary>
    /// The elapsed time between calling Accept and Complete. The server will also
    /// have its own idea of what this should be, but this excludes the overhead of
    /// the RPCs and the bot response time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration Duration {
      get { return duration_; }
      set {
        duration_ = value;
      }
    }

    /// <summary>Field number for the "overhead" field.</summary>
    public const int OverheadFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Duration overhead_;
    /// <summary>
    /// The amount of time *not* spent executing the command (ie
    /// uploading/downloading files).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration Overhead {
      get { return overhead_; }
      set {
        overhead_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommandOverhead);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommandOverhead other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Duration, other.Duration)) return false;
      if (!object.Equals(Overhead, other.Overhead)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (duration_ != null) hash ^= Duration.GetHashCode();
      if (overhead_ != null) hash ^= Overhead.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (duration_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Duration);
      }
      if (overhead_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Overhead);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (duration_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Duration);
      }
      if (overhead_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Overhead);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (duration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Duration);
      }
      if (overhead_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Overhead);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommandOverhead other) {
      if (other == null) {
        return;
      }
      if (other.duration_ != null) {
        if (duration_ == null) {
          Duration = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        Duration.MergeFrom(other.Duration);
      }
      if (other.overhead_ != null) {
        if (overhead_ == null) {
          Overhead = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        Overhead.MergeFrom(other.Overhead);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (duration_ == null) {
              Duration = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(Duration);
            break;
          }
          case 18: {
            if (overhead_ == null) {
              Overhead = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(Overhead);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (duration_ == null) {
              Duration = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(Duration);
            break;
          }
          case 18: {
            if (overhead_ == null) {
              Overhead = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(Overhead);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// All information about the execution of a command, suitable for providing as
  /// the Bots interface's `Lease.result` field.
  /// </summary>
  public sealed partial class CommandResult : pb::IMessage<CommandResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CommandResult> _parser = new pb::MessageParser<CommandResult>(() => new CommandResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommandResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.DevTools.RemoteWorkers.V1Test2.CommandReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandResult(CommandResult other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      exitCode_ = other.exitCode_;
      outputs_ = other.outputs_ != null ? other.outputs_.Clone() : null;
      duration_ = other.duration_ != null ? other.duration_.Clone() : null;
      overhead_ = other.overhead_ != null ? other.overhead_.Clone() : null;
      metadata_ = other.metadata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandResult Clone() {
      return new CommandResult(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Google.Rpc.Status status_;
    /// <summary>
    /// An overall status for the command. For example, if the command timed out,
    /// this might have a code of DEADLINE_EXCEEDED; if it was killed by the OS for
    /// memory exhaustion, it might have a code of RESOURCE_EXHAUSTED.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Rpc.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "exit_code" field.</summary>
    public const int ExitCodeFieldNumber = 2;
    private int exitCode_;
    /// <summary>
    /// The exit code of the process. An exit code of "0" should only be trusted if
    /// `status` has a code of OK (otherwise it may simply be unset).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ExitCode {
      get { return exitCode_; }
      set {
        exitCode_ = value;
      }
    }

    /// <summary>Field number for the "outputs" field.</summary>
    public const int OutputsFieldNumber = 3;
    private global::Google.DevTools.RemoteWorkers.V1Test2.Digest outputs_;
    /// <summary>
    /// The output files. The blob referenced by the digest should contain
    /// one of the following (implementation-dependent):
    ///    * A marshalled DirectoryMetadata of the returned filesystem
    ///    * A LUCI-style .isolated file
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.DevTools.RemoteWorkers.V1Test2.Digest Outputs {
      get { return outputs_; }
      set {
        outputs_ = value;
      }
    }

    /// <summary>Field number for the "duration" field.</summary>
    public const int DurationFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Duration duration_;
    /// <summary>
    /// The elapsed time between calling Accept and Complete. The server will also
    /// have its own idea of what this should be, but this excludes the overhead of
    /// the RPCs and the bot response time.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration Duration {
      get { return duration_; }
      set {
        duration_ = value;
      }
    }

    /// <summary>Field number for the "overhead" field.</summary>
    public const int OverheadFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Duration overhead_;
    /// <summary>
    /// The amount of time *not* spent executing the command (ie
    /// uploading/downloading files).
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration Overhead {
      get { return overhead_; }
      set {
        overhead_ = value;
      }
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Google.Protobuf.WellKnownTypes.Any> _repeated_metadata_codec
        = pb::FieldCodec.ForMessage(50, global::Google.Protobuf.WellKnownTypes.Any.Parser);
    private readonly pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> metadata_ = new pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any>();
    /// <summary>
    /// Implementation-dependent metadata about the task. Both servers and bots
    /// may define messages which can be encoded here; bots are free to provide
    /// metadata in multiple formats, and servers are free to choose one or more
    /// of the values to process and ignore others. In particular, it is *not*
    /// considered an error for the bot to provide the server with a field that it
    /// doesn't know about.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> Metadata {
      get { return metadata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommandResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommandResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if (ExitCode != other.ExitCode) return false;
      if (!object.Equals(Outputs, other.Outputs)) return false;
      if (!object.Equals(Duration, other.Duration)) return false;
      if (!object.Equals(Overhead, other.Overhead)) return false;
      if(!metadata_.Equals(other.metadata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (ExitCode != 0) hash ^= ExitCode.GetHashCode();
      if (outputs_ != null) hash ^= Outputs.GetHashCode();
      if (duration_ != null) hash ^= Duration.GetHashCode();
      if (overhead_ != null) hash ^= Overhead.GetHashCode();
      hash ^= metadata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (ExitCode != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ExitCode);
      }
      if (outputs_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Outputs);
      }
      if (duration_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Duration);
      }
      if (overhead_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Overhead);
      }
      metadata_.WriteTo(output, _repeated_metadata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (ExitCode != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ExitCode);
      }
      if (outputs_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Outputs);
      }
      if (duration_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Duration);
      }
      if (overhead_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Overhead);
      }
      metadata_.WriteTo(ref output, _repeated_metadata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (ExitCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExitCode);
      }
      if (outputs_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Outputs);
      }
      if (duration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Duration);
      }
      if (overhead_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Overhead);
      }
      size += metadata_.CalculateSize(_repeated_metadata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommandResult other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Google.Rpc.Status();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.ExitCode != 0) {
        ExitCode = other.ExitCode;
      }
      if (other.outputs_ != null) {
        if (outputs_ == null) {
          Outputs = new global::Google.DevTools.RemoteWorkers.V1Test2.Digest();
        }
        Outputs.MergeFrom(other.Outputs);
      }
      if (other.duration_ != null) {
        if (duration_ == null) {
          Duration = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        Duration.MergeFrom(other.Duration);
      }
      if (other.overhead_ != null) {
        if (overhead_ == null) {
          Overhead = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        Overhead.MergeFrom(other.Overhead);
      }
      metadata_.Add(other.metadata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Google.Rpc.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 16: {
            ExitCode = input.ReadInt32();
            break;
          }
          case 26: {
            if (outputs_ == null) {
              Outputs = new global::Google.DevTools.RemoteWorkers.V1Test2.Digest();
            }
            input.ReadMessage(Outputs);
            break;
          }
          case 34: {
            if (duration_ == null) {
              Duration = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(Duration);
            break;
          }
          case 42: {
            if (overhead_ == null) {
              Overhead = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(Overhead);
            break;
          }
          case 50: {
            metadata_.AddEntriesFrom(input, _repeated_metadata_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Google.Rpc.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 16: {
            ExitCode = input.ReadInt32();
            break;
          }
          case 26: {
            if (outputs_ == null) {
              Outputs = new global::Google.DevTools.RemoteWorkers.V1Test2.Digest();
            }
            input.ReadMessage(Outputs);
            break;
          }
          case 34: {
            if (duration_ == null) {
              Duration = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(Duration);
            break;
          }
          case 42: {
            if (overhead_ == null) {
              Overhead = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(Overhead);
            break;
          }
          case 50: {
            metadata_.AddEntriesFrom(ref input, _repeated_metadata_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The metadata for a file. Similar to the equivalent message in the Remote
  /// Execution API.
  /// </summary>
  public sealed partial class FileMetadata : pb::IMessage<FileMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FileMetadata> _parser = new pb::MessageParser<FileMetadata>(() => new FileMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FileMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.DevTools.RemoteWorkers.V1Test2.CommandReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileMetadata(FileMetadata other) : this() {
      path_ = other.path_;
      digest_ = other.digest_ != null ? other.digest_.Clone() : null;
      contents_ = other.contents_;
      isExecutable_ = other.isExecutable_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileMetadata Clone() {
      return new FileMetadata(this);
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 1;
    private string path_ = "";
    /// <summary>
    /// The path of this file. If this message is part of the
    /// CommandOutputs.outputs fields, the path is relative to the execution root
    /// and must correspond to an entry in CommandTask.outputs.files. If this
    /// message is part of a Directory message, then the path is relative to the
    /// root of that directory. All paths MUST be delimited by forward slashes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "digest" field.</summary>
    public const int DigestFieldNumber = 2;
    private global::Google.DevTools.RemoteWorkers.V1Test2.Digest digest_;
    /// <summary>
    /// A pointer to the contents of the file. The method by which a client
    /// retrieves the contents from a CAS system is not defined here.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.DevTools.RemoteWorkers.V1Test2.Digest Digest {
      get { return digest_; }
      set {
        digest_ = value;
      }
    }

    /// <summary>Field number for the "contents" field.</summary>
    public const int ContentsFieldNumber = 3;
    private pb::ByteString contents_ = pb::ByteString.Empty;
    /// <summary>
    /// If the file is small enough, its contents may also or alternatively be
    /// listed here.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Contents {
      get { return contents_; }
      set {
        contents_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_executable" field.</summary>
    public const int IsExecutableFieldNumber = 4;
    private bool isExecutable_;
    /// <summary>
    /// Properties of the file
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsExecutable {
      get { return isExecutable_; }
      set {
        isExecutable_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FileMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FileMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Path != other.Path) return false;
      if (!object.Equals(Digest, other.Digest)) return false;
      if (Contents != other.Contents) return false;
      if (IsExecutable != other.IsExecutable) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (digest_ != null) hash ^= Digest.GetHashCode();
      if (Contents.Length != 0) hash ^= Contents.GetHashCode();
      if (IsExecutable != false) hash ^= IsExecutable.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Path.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Path);
      }
      if (digest_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Digest);
      }
      if (Contents.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Contents);
      }
      if (IsExecutable != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsExecutable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Path.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Path);
      }
      if (digest_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Digest);
      }
      if (Contents.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Contents);
      }
      if (IsExecutable != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsExecutable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (digest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Digest);
      }
      if (Contents.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Contents);
      }
      if (IsExecutable != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FileMetadata other) {
      if (other == null) {
        return;
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      if (other.digest_ != null) {
        if (digest_ == null) {
          Digest = new global::Google.DevTools.RemoteWorkers.V1Test2.Digest();
        }
        Digest.MergeFrom(other.Digest);
      }
      if (other.Contents.Length != 0) {
        Contents = other.Contents;
      }
      if (other.IsExecutable != false) {
        IsExecutable = other.IsExecutable;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Path = input.ReadString();
            break;
          }
          case 18: {
            if (digest_ == null) {
              Digest = new global::Google.DevTools.RemoteWorkers.V1Test2.Digest();
            }
            input.ReadMessage(Digest);
            break;
          }
          case 26: {
            Contents = input.ReadBytes();
            break;
          }
          case 32: {
            IsExecutable = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Path = input.ReadString();
            break;
          }
          case 18: {
            if (digest_ == null) {
              Digest = new global::Google.DevTools.RemoteWorkers.V1Test2.Digest();
            }
            input.ReadMessage(Digest);
            break;
          }
          case 26: {
            Contents = input.ReadBytes();
            break;
          }
          case 32: {
            IsExecutable = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The metadata for a directory. Similar to the equivalent message in the Remote
  /// Execution API.
  /// </summary>
  public sealed partial class DirectoryMetadata : pb::IMessage<DirectoryMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DirectoryMetadata> _parser = new pb::MessageParser<DirectoryMetadata>(() => new DirectoryMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DirectoryMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.DevTools.RemoteWorkers.V1Test2.CommandReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DirectoryMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DirectoryMetadata(DirectoryMetadata other) : this() {
      path_ = other.path_;
      digest_ = other.digest_ != null ? other.digest_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DirectoryMetadata Clone() {
      return new DirectoryMetadata(this);
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 1;
    private string path_ = "";
    /// <summary>
    /// The path of the directory, as in
    /// [FileMetadata.path][google.devtools.remoteworkers.v1test2.FileMetadata.path].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "digest" field.</summary>
    public const int DigestFieldNumber = 2;
    private global::Google.DevTools.RemoteWorkers.V1Test2.Digest digest_;
    /// <summary>
    /// A pointer to the contents of the directory, in the form of a marshalled
    /// Directory message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.DevTools.RemoteWorkers.V1Test2.Digest Digest {
      get { return digest_; }
      set {
        digest_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DirectoryMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DirectoryMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Path != other.Path) return false;
      if (!object.Equals(Digest, other.Digest)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (digest_ != null) hash ^= Digest.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Path.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Path);
      }
      if (digest_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Digest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Path.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Path);
      }
      if (digest_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Digest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (digest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Digest);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DirectoryMetadata other) {
      if (other == null) {
        return;
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      if (other.digest_ != null) {
        if (digest_ == null) {
          Digest = new global::Google.DevTools.RemoteWorkers.V1Test2.Digest();
        }
        Digest.MergeFrom(other.Digest);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Path = input.ReadString();
            break;
          }
          case 18: {
            if (digest_ == null) {
              Digest = new global::Google.DevTools.RemoteWorkers.V1Test2.Digest();
            }
            input.ReadMessage(Digest);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Path = input.ReadString();
            break;
          }
          case 18: {
            if (digest_ == null) {
              Digest = new global::Google.DevTools.RemoteWorkers.V1Test2.Digest();
            }
            input.ReadMessage(Digest);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The CommandTask and CommandResult messages assume the existence of a service
  /// that can serve blobs of content, identified by a hash and size known as a
  /// "digest." The method by which these blobs may be retrieved is not specified
  /// here, but a model implementation is in the Remote Execution API's
  /// "ContentAddressibleStorage" interface.
  ///
  /// In the context of the RWAPI, a Digest will virtually always refer to the
  /// contents of a file or a directory. The latter is represented by the
  /// byte-encoded Directory message.
  /// </summary>
  public sealed partial class Digest : pb::IMessage<Digest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Digest> _parser = new pb::MessageParser<Digest>(() => new Digest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Digest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.DevTools.RemoteWorkers.V1Test2.CommandReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Digest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Digest(Digest other) : this() {
      hash_ = other.hash_;
      sizeBytes_ = other.sizeBytes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Digest Clone() {
      return new Digest(this);
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int HashFieldNumber = 1;
    private string hash_ = "";
    /// <summary>
    /// A string-encoded hash (eg "1a2b3c", not the byte array [0x1a, 0x2b, 0x3c])
    /// using an implementation-defined hash algorithm (eg SHA-256).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Hash {
      get { return hash_; }
      set {
        hash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "size_bytes" field.</summary>
    public const int SizeBytesFieldNumber = 2;
    private long sizeBytes_;
    /// <summary>
    /// The size of the contents. While this is not strictly required as part of an
    /// identifier (after all, any given hash will have exactly one canonical
    /// size), it's useful in almost all cases when one might want to send or
    /// retrieve blobs of content and is included here for this reason.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SizeBytes {
      get { return sizeBytes_; }
      set {
        sizeBytes_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Digest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Digest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Hash != other.Hash) return false;
      if (SizeBytes != other.SizeBytes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Hash.Length != 0) hash ^= Hash.GetHashCode();
      if (SizeBytes != 0L) hash ^= SizeBytes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Hash.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Hash);
      }
      if (SizeBytes != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(SizeBytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Hash.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Hash);
      }
      if (SizeBytes != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(SizeBytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Hash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Hash);
      }
      if (SizeBytes != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SizeBytes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Digest other) {
      if (other == null) {
        return;
      }
      if (other.Hash.Length != 0) {
        Hash = other.Hash;
      }
      if (other.SizeBytes != 0L) {
        SizeBytes = other.SizeBytes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Hash = input.ReadString();
            break;
          }
          case 16: {
            SizeBytes = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Hash = input.ReadString();
            break;
          }
          case 16: {
            SizeBytes = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Describes a blob of binary content with its digest.
  /// </summary>
  public sealed partial class Blob : pb::IMessage<Blob>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Blob> _parser = new pb::MessageParser<Blob>(() => new Blob());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Blob> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.DevTools.RemoteWorkers.V1Test2.CommandReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Blob() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Blob(Blob other) : this() {
      digest_ = other.digest_ != null ? other.digest_.Clone() : null;
      contents_ = other.contents_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Blob Clone() {
      return new Blob(this);
    }

    /// <summary>Field number for the "digest" field.</summary>
    public const int DigestFieldNumber = 1;
    private global::Google.DevTools.RemoteWorkers.V1Test2.Digest digest_;
    /// <summary>
    /// The digest of the blob. This should be verified by the receiver.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.DevTools.RemoteWorkers.V1Test2.Digest Digest {
      get { return digest_; }
      set {
        digest_ = value;
      }
    }

    /// <summary>Field number for the "contents" field.</summary>
    public const int ContentsFieldNumber = 2;
    private pb::ByteString contents_ = pb::ByteString.Empty;
    /// <summary>
    /// The contents of the blob.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Contents {
      get { return contents_; }
      set {
        contents_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Blob);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Blob other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Digest, other.Digest)) return false;
      if (Contents != other.Contents) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (digest_ != null) hash ^= Digest.GetHashCode();
      if (Contents.Length != 0) hash ^= Contents.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (digest_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Digest);
      }
      if (Contents.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Contents);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (digest_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Digest);
      }
      if (Contents.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Contents);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (digest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Digest);
      }
      if (Contents.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Contents);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Blob other) {
      if (other == null) {
        return;
      }
      if (other.digest_ != null) {
        if (digest_ == null) {
          Digest = new global::Google.DevTools.RemoteWorkers.V1Test2.Digest();
        }
        Digest.MergeFrom(other.Digest);
      }
      if (other.Contents.Length != 0) {
        Contents = other.Contents;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (digest_ == null) {
              Digest = new global::Google.DevTools.RemoteWorkers.V1Test2.Digest();
            }
            input.ReadMessage(Digest);
            break;
          }
          case 18: {
            Contents = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (digest_ == null) {
              Digest = new global::Google.DevTools.RemoteWorkers.V1Test2.Digest();
            }
            input.ReadMessage(Digest);
            break;
          }
          case 18: {
            Contents = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The contents of a directory. Similar to the equivalent message in the Remote
  /// Execution API.
  /// </summary>
  public sealed partial class Directory : pb::IMessage<Directory>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Directory> _parser = new pb::MessageParser<Directory>(() => new Directory());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Directory> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.DevTools.RemoteWorkers.V1Test2.CommandReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Directory() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Directory(Directory other) : this() {
      files_ = other.files_.Clone();
      directories_ = other.directories_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Directory Clone() {
      return new Directory(this);
    }

    /// <summary>Field number for the "files" field.</summary>
    public const int FilesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.DevTools.RemoteWorkers.V1Test2.FileMetadata> _repeated_files_codec
        = pb::FieldCodec.ForMessage(10, global::Google.DevTools.RemoteWorkers.V1Test2.FileMetadata.Parser);
    private readonly pbc::RepeatedField<global::Google.DevTools.RemoteWorkers.V1Test2.FileMetadata> files_ = new pbc::RepeatedField<global::Google.DevTools.RemoteWorkers.V1Test2.FileMetadata>();
    /// <summary>
    /// The files in this directory
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.DevTools.RemoteWorkers.V1Test2.FileMetadata> Files {
      get { return files_; }
    }

    /// <summary>Field number for the "directories" field.</summary>
    public const int DirectoriesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.DevTools.RemoteWorkers.V1Test2.DirectoryMetadata> _repeated_directories_codec
        = pb::FieldCodec.ForMessage(18, global::Google.DevTools.RemoteWorkers.V1Test2.DirectoryMetadata.Parser);
    private readonly pbc::RepeatedField<global::Google.DevTools.RemoteWorkers.V1Test2.DirectoryMetadata> directories_ = new pbc::RepeatedField<global::Google.DevTools.RemoteWorkers.V1Test2.DirectoryMetadata>();
    /// <summary>
    /// Any subdirectories
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.DevTools.RemoteWorkers.V1Test2.DirectoryMetadata> Directories {
      get { return directories_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Directory);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Directory other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!files_.Equals(other.files_)) return false;
      if(!directories_.Equals(other.directories_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= files_.GetHashCode();
      hash ^= directories_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      files_.WriteTo(output, _repeated_files_codec);
      directories_.WriteTo(output, _repeated_directories_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      files_.WriteTo(ref output, _repeated_files_codec);
      directories_.WriteTo(ref output, _repeated_directories_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += files_.CalculateSize(_repeated_files_codec);
      size += directories_.CalculateSize(_repeated_directories_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Directory other) {
      if (other == null) {
        return;
      }
      files_.Add(other.files_);
      directories_.Add(other.directories_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            files_.AddEntriesFrom(input, _repeated_files_codec);
            break;
          }
          case 18: {
            directories_.AddEntriesFrom(input, _repeated_directories_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            files_.AddEntriesFrom(ref input, _repeated_files_codec);
            break;
          }
          case 18: {
            directories_.AddEntriesFrom(ref input, _repeated_directories_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
