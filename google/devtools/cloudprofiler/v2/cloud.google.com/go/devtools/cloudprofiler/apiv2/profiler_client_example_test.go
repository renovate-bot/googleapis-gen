// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go_gapic. DO NOT EDIT.

package cloudprofiler_test

import (
	"context"

	cloudprofiler "cloud.google.com/go/devtools/cloudprofiler/apiv2"
	cloudprofilerpb "google.golang.org/genproto/googleapis/devtools/cloudprofiler/v2"
)

func ExampleNewProfilerClient() {
	ctx := context.Background()
	c, err := cloudprofiler.NewProfilerClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Use client.
	_ = c
}

func ExampleProfilerClient_CreateProfile() {
	ctx := context.Background()
	c, err := cloudprofiler.NewProfilerClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	req := &cloudprofilerpb.CreateProfileRequest{
		// TODO: Fill request struct fields.
		// See https://pkg.go.dev/google.golang.org/genproto/googleapis/devtools/cloudprofiler/v2#CreateProfileRequest.
	}
	resp, err := c.CreateProfile(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleProfilerClient_CreateOfflineProfile() {
	ctx := context.Background()
	c, err := cloudprofiler.NewProfilerClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	req := &cloudprofilerpb.CreateOfflineProfileRequest{
		// TODO: Fill request struct fields.
		// See https://pkg.go.dev/google.golang.org/genproto/googleapis/devtools/cloudprofiler/v2#CreateOfflineProfileRequest.
	}
	resp, err := c.CreateOfflineProfile(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleProfilerClient_UpdateProfile() {
	ctx := context.Background()
	c, err := cloudprofiler.NewProfilerClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	req := &cloudprofilerpb.UpdateProfileRequest{
		// TODO: Fill request struct fields.
		// See https://pkg.go.dev/google.golang.org/genproto/googleapis/devtools/cloudprofiler/v2#UpdateProfileRequest.
	}
	resp, err := c.UpdateProfile(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}
