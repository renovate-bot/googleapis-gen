# frozen_string_literal: true

# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Auto-generated by gapic-generator-ruby. DO NOT EDIT!


module Google
  module Devtools
    module Build
      module V1
        # An event representing some state change that occurred in the build. This
        # message does not include field for uniquely identifying an event.
        # @!attribute [rw] event_time
        #   @return [::Google::Protobuf::Timestamp]
        #     The timestamp of this event.
        # @!attribute [rw] invocation_attempt_started
        #   @return [::Google::Devtools::Build::V1::BuildEvent::InvocationAttemptStarted]
        #     An invocation attempt has started.
        # @!attribute [rw] invocation_attempt_finished
        #   @return [::Google::Devtools::Build::V1::BuildEvent::InvocationAttemptFinished]
        #     An invocation attempt has finished.
        # @!attribute [rw] build_enqueued
        #   @return [::Google::Devtools::Build::V1::BuildEvent::BuildEnqueued]
        #     The build is enqueued.
        # @!attribute [rw] build_finished
        #   @return [::Google::Devtools::Build::V1::BuildEvent::BuildFinished]
        #     The build has finished. Set when the build is terminated.
        # @!attribute [rw] console_output
        #   @return [::Google::Devtools::Build::V1::BuildEvent::ConsoleOutput]
        #     An event containing printed text.
        # @!attribute [rw] component_stream_finished
        #   @return [::Google::Devtools::Build::V1::BuildEvent::BuildComponentStreamFinished]
        #     Indicates the end of a build event stream (with the same StreamId) from
        #     a build component executing the requested build task.
        #     *** This field does not indicate the WatchBuild RPC is finished. ***
        # @!attribute [rw] bazel_event
        #   @return [::Google::Protobuf::Any]
        #     Structured build event generated by Bazel about its execution progress.
        # @!attribute [rw] build_execution_event
        #   @return [::Google::Protobuf::Any]
        #     An event that contains supplemental tool-specific information about
        #     build execution.
        # @!attribute [rw] source_fetch_event
        #   @return [::Google::Protobuf::Any]
        #     An event that contains supplemental tool-specific information about
        #     source fetching.
        class BuildEvent
          include ::Google::Protobuf::MessageExts
          extend ::Google::Protobuf::MessageExts::ClassMethods

          # Notification that the build system has attempted to run the build tool.
          # @!attribute [rw] attempt_number
          #   @return [::Integer]
          #     The number of the invocation attempt, starting at 1 and increasing by 1
          #     for each new attempt. Can be used to determine if there is a later
          #     invocation attempt replacing the current one a client is processing.
          # @!attribute [rw] details
          #   @return [::Google::Protobuf::Any]
          #     Arbitrary details about the invocation attempt.
          class InvocationAttemptStarted
            include ::Google::Protobuf::MessageExts
            extend ::Google::Protobuf::MessageExts::ClassMethods
          end

          # Notification that an invocation attempt has finished.
          # @!attribute [rw] invocation_status
          #   @return [::Google::Devtools::Build::V1::BuildStatus]
          #     Final status of the invocation.
          # @!attribute [rw] details
          #   @return [::Google::Protobuf::Any]
          #     Arbitrary details about the invocation attempt.
          class InvocationAttemptFinished
            include ::Google::Protobuf::MessageExts
            extend ::Google::Protobuf::MessageExts::ClassMethods
          end

          # Notification that the build request is enqueued.
          # @!attribute [rw] details
          #   @return [::Google::Protobuf::Any]
          #     Additional details about the Build.
          class BuildEnqueued
            include ::Google::Protobuf::MessageExts
            extend ::Google::Protobuf::MessageExts::ClassMethods
          end

          # Notification that the build request has finished, and no further
          # invocations will occur.  Note that this applies to the entire Build.
          # Individual invocations trigger InvocationFinished when they finish.
          # @!attribute [rw] status
          #   @return [::Google::Devtools::Build::V1::BuildStatus]
          #     Final status of the build.
          # @!attribute [rw] details
          #   @return [::Google::Protobuf::Any]
          #     Additional details about the Build.
          class BuildFinished
            include ::Google::Protobuf::MessageExts
            extend ::Google::Protobuf::MessageExts::ClassMethods
          end

          # Textual output written to standard output or standard error.
          # @!attribute [rw] type
          #   @return [::Google::Devtools::Build::V1::ConsoleOutputStream]
          #     The output stream type.
          # @!attribute [rw] text_output
          #   @return [::String]
          #     Regular UTF-8 output; normal text.
          # @!attribute [rw] binary_output
          #   @return [::String]
          #     Used if the output is not UTF-8 text (for example, a binary proto).
          class ConsoleOutput
            include ::Google::Protobuf::MessageExts
            extend ::Google::Protobuf::MessageExts::ClassMethods
          end

          # Notification of the end of a build event stream published by a build
          # component other than CONTROLLER (See StreamId.BuildComponents).
          # @!attribute [rw] type
          #   @return [::Google::Devtools::Build::V1::BuildEvent::BuildComponentStreamFinished::FinishType]
          #     How the event stream finished.
          class BuildComponentStreamFinished
            include ::Google::Protobuf::MessageExts
            extend ::Google::Protobuf::MessageExts::ClassMethods

            # How did the event stream finish.
            module FinishType
              # Unknown or unspecified; callers should never set this value.
              FINISH_TYPE_UNSPECIFIED = 0

              # Set by the event publisher to indicate a build event stream is
              # finished.
              FINISHED = 1

              # Set by the WatchBuild RPC server when the publisher of a build event
              # stream stops publishing events without publishing a
              # BuildComponentStreamFinished event whose type equals FINISHED.
              EXPIRED = 2
            end
          end
        end

        # Unique identifier for a build event stream.
        # @!attribute [rw] build_id
        #   @return [::String]
        #     The id of a Build message.
        # @!attribute [rw] invocation_id
        #   @return [::String]
        #     The unique invocation ID within this build.
        #     It should be the same as \\{invocation} (below) during the migration.
        # @!attribute [rw] component
        #   @return [::Google::Devtools::Build::V1::StreamId::BuildComponent]
        #     The component that emitted this event.
        class StreamId
          include ::Google::Protobuf::MessageExts
          extend ::Google::Protobuf::MessageExts::ClassMethods

          # Which build component generates this event stream. Each build component
          # may generate one event stream.
          module BuildComponent
            # Unknown or unspecified; callers should never set this value.
            UNKNOWN_COMPONENT = 0

            # A component that coordinates builds.
            CONTROLLER = 1

            # A component that runs executables needed to complete a build.
            WORKER = 2

            # A component that builds something.
            TOOL = 3
          end
        end

        # The type of console output stream.
        module ConsoleOutputStream
          # Unspecified or unknown.
          UNKNOWN = 0

          # Normal output stream.
          STDOUT = 1

          # Error output stream.
          STDERR = 2
        end
      end
    end
  end
end
