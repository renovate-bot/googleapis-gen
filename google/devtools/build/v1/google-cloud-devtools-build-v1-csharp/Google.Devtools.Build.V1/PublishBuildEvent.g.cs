// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/devtools/build/v1/publish_build_event.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Devtools.Build.V1 {

  /// <summary>Holder for reflection information generated from google/devtools/build/v1/publish_build_event.proto</summary>
  public static partial class PublishBuildEventReflection {

    #region Descriptor
    /// <summary>File descriptor for google/devtools/build/v1/publish_build_event.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PublishBuildEventReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjJnb29nbGUvZGV2dG9vbHMvYnVpbGQvdjEvcHVibGlzaF9idWlsZF9ldmVu",
            "dC5wcm90bxIYZ29vZ2xlLmRldnRvb2xzLmJ1aWxkLnYxGhxnb29nbGUvYXBp",
            "L2Fubm90YXRpb25zLnByb3RvGhdnb29nbGUvYXBpL2NsaWVudC5wcm90bxof",
            "Z29vZ2xlL2FwaS9maWVsZF9iZWhhdmlvci5wcm90bxorZ29vZ2xlL2RldnRv",
            "b2xzL2J1aWxkL3YxL2J1aWxkX2V2ZW50cy5wcm90bxoeZ29vZ2xlL3Byb3Rv",
            "YnVmL2R1cmF0aW9uLnByb3RvGhtnb29nbGUvcHJvdG9idWYvZW1wdHkucHJv",
            "dG8i4QIKHFB1Ymxpc2hMaWZlY3ljbGVFdmVudFJlcXVlc3QSWgoNc2Vydmlj",
            "ZV9sZXZlbBgBIAEoDjJDLmdvb2dsZS5kZXZ0b29scy5idWlsZC52MS5QdWJs",
            "aXNoTGlmZWN5Y2xlRXZlbnRSZXF1ZXN0LlNlcnZpY2VMZXZlbBJFCgtidWls",
            "ZF9ldmVudBgCIAEoCzIrLmdvb2dsZS5kZXZ0b29scy5idWlsZC52MS5PcmRl",
            "cmVkQnVpbGRFdmVudEID4EECEjEKDnN0cmVhbV90aW1lb3V0GAMgASgLMhku",
            "Z29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uEh0KFW5vdGlmaWNhdGlvbl9rZXl3",
            "b3JkcxgEIAMoCRIXCgpwcm9qZWN0X2lkGAYgASgJQgPgQQIiMwoMU2Vydmlj",
            "ZUxldmVsEhIKDk5PTklOVEVSQUNUSVZFEAASDwoLSU5URVJBQ1RJVkUQASJ1",
            "CiNQdWJsaXNoQnVpbGRUb29sRXZlbnRTdHJlYW1SZXNwb25zZRI1CglzdHJl",
            "YW1faWQYASABKAsyIi5nb29nbGUuZGV2dG9vbHMuYnVpbGQudjEuU3RyZWFt",
            "SWQSFwoPc2VxdWVuY2VfbnVtYmVyGAIgASgDIpgBChFPcmRlcmVkQnVpbGRF",
            "dmVudBI1CglzdHJlYW1faWQYASABKAsyIi5nb29nbGUuZGV2dG9vbHMuYnVp",
            "bGQudjEuU3RyZWFtSWQSFwoPc2VxdWVuY2VfbnVtYmVyGAIgASgDEjMKBWV2",
            "ZW50GAMgASgLMiQuZ29vZ2xlLmRldnRvb2xzLmJ1aWxkLnYxLkJ1aWxkRXZl",
            "bnQiqwEKIlB1Ymxpc2hCdWlsZFRvb2xFdmVudFN0cmVhbVJlcXVlc3QSTQoT",
            "b3JkZXJlZF9idWlsZF9ldmVudBgEIAEoCzIrLmdvb2dsZS5kZXZ0b29scy5i",
            "dWlsZC52MS5PcmRlcmVkQnVpbGRFdmVudEID4EECEh0KFW5vdGlmaWNhdGlv",
            "bl9rZXl3b3JkcxgFIAMoCRIXCgpwcm9qZWN0X2lkGAYgASgJQgPgQQIy3gQK",
            "EVB1Ymxpc2hCdWlsZEV2ZW50EskBChVQdWJsaXNoTGlmZWN5Y2xlRXZlbnQS",
            "Ni5nb29nbGUuZGV2dG9vbHMuYnVpbGQudjEuUHVibGlzaExpZmVjeWNsZUV2",
            "ZW50UmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSJggtPkkwJaIjMv",
            "djEvcHJvamVjdHMve3Byb2plY3RfaWQ9Kn0vbGlmZWN5Y2xlRXZlbnRzOnB1",
            "Ymxpc2g6ASpaICIbL3YxL2xpZmVjeWNsZUV2ZW50czpwdWJsaXNoOgEqEqYC",
            "ChtQdWJsaXNoQnVpbGRUb29sRXZlbnRTdHJlYW0SPC5nb29nbGUuZGV2dG9v",
            "bHMuYnVpbGQudjEuUHVibGlzaEJ1aWxkVG9vbEV2ZW50U3RyZWFtUmVxdWVz",
            "dBo9Lmdvb2dsZS5kZXZ0b29scy5idWlsZC52MS5QdWJsaXNoQnVpbGRUb29s",
            "RXZlbnRTdHJlYW1SZXNwb25zZSKFAYLT5JMCSCIqL3YxL3Byb2plY3RzL3tw",
            "cm9qZWN0X2lkPSp9L2V2ZW50czpwdWJsaXNoOgEqWhciEi92MS9ldmVudHM6",
            "cHVibGlzaDoBKtpBNG9yZGVyZWRfYnVpbGRfZXZlbnQsbm90aWZpY2F0aW9u",
            "X2tleXdvcmRzLHByb2plY3RfaWQoATABGlTKQSBidWlsZGV2ZW50c2Vydmlj",
            "ZS5nb29nbGVhcGlzLmNvbdJBLmh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29t",
            "L2F1dGgvY2xvdWQtcGxhdGZvcm1CiAEKHGNvbS5nb29nbGUuZGV2dG9vbHMu",
            "YnVpbGQudjFCDEJhY2tlbmRQcm90b1ABWj1nb29nbGUuZ29sYW5nLm9yZy9n",
            "ZW5wcm90by9nb29nbGVhcGlzL2RldnRvb2xzL2J1aWxkL3YxO2J1aWxk+AEB",
            "ygIVR29vZ2xlXENsb3VkXEJ1aWxkXFYxYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Api.ClientReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Devtools.Build.V1.BuildEventsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Build.V1.PublishLifecycleEventRequest), global::Google.Devtools.Build.V1.PublishLifecycleEventRequest.Parser, new[]{ "ServiceLevel", "BuildEvent", "StreamTimeout", "NotificationKeywords", "ProjectId" }, null, new[]{ typeof(global::Google.Devtools.Build.V1.PublishLifecycleEventRequest.Types.ServiceLevel) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Build.V1.PublishBuildToolEventStreamResponse), global::Google.Devtools.Build.V1.PublishBuildToolEventStreamResponse.Parser, new[]{ "StreamId", "SequenceNumber" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Build.V1.OrderedBuildEvent), global::Google.Devtools.Build.V1.OrderedBuildEvent.Parser, new[]{ "StreamId", "SequenceNumber", "Event" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Build.V1.PublishBuildToolEventStreamRequest), global::Google.Devtools.Build.V1.PublishBuildToolEventStreamRequest.Parser, new[]{ "OrderedBuildEvent", "NotificationKeywords", "ProjectId" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Publishes 'lifecycle events' that update the high-level state of a build:
  /// - BuildEnqueued: When a build is scheduled.
  /// - InvocationAttemptStarted: When work for a build starts; there can be
  ///     multiple invocations for a build (e.g. retries).
  /// - InvocationAttemptCompleted: When work for a build finishes.
  /// - BuildFinished: When a build is finished.
  /// </summary>
  public sealed partial class PublishLifecycleEventRequest : pb::IMessage<PublishLifecycleEventRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PublishLifecycleEventRequest> _parser = new pb::MessageParser<PublishLifecycleEventRequest>(() => new PublishLifecycleEventRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PublishLifecycleEventRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Build.V1.PublishBuildEventReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublishLifecycleEventRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublishLifecycleEventRequest(PublishLifecycleEventRequest other) : this() {
      serviceLevel_ = other.serviceLevel_;
      buildEvent_ = other.buildEvent_ != null ? other.buildEvent_.Clone() : null;
      streamTimeout_ = other.streamTimeout_ != null ? other.streamTimeout_.Clone() : null;
      notificationKeywords_ = other.notificationKeywords_.Clone();
      projectId_ = other.projectId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublishLifecycleEventRequest Clone() {
      return new PublishLifecycleEventRequest(this);
    }

    /// <summary>Field number for the "service_level" field.</summary>
    public const int ServiceLevelFieldNumber = 1;
    private global::Google.Devtools.Build.V1.PublishLifecycleEventRequest.Types.ServiceLevel serviceLevel_ = global::Google.Devtools.Build.V1.PublishLifecycleEventRequest.Types.ServiceLevel.Noninteractive;
    /// <summary>
    /// The interactivity of this build.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Build.V1.PublishLifecycleEventRequest.Types.ServiceLevel ServiceLevel {
      get { return serviceLevel_; }
      set {
        serviceLevel_ = value;
      }
    }

    /// <summary>Field number for the "build_event" field.</summary>
    public const int BuildEventFieldNumber = 2;
    private global::Google.Devtools.Build.V1.OrderedBuildEvent buildEvent_;
    /// <summary>
    /// Required. The lifecycle build event. If this is a build tool event, the RPC
    /// will fail with INVALID_REQUEST.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Build.V1.OrderedBuildEvent BuildEvent {
      get { return buildEvent_; }
      set {
        buildEvent_ = value;
      }
    }

    /// <summary>Field number for the "stream_timeout" field.</summary>
    public const int StreamTimeoutFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Duration streamTimeout_;
    /// <summary>
    /// If the next event for this build or invocation (depending on the event
    /// type) hasn't been published after this duration from when {build_event}
    /// is written to BES, consider this stream expired. If this field is not set,
    /// BES backend will use its own default value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration StreamTimeout {
      get { return streamTimeout_; }
      set {
        streamTimeout_ = value;
      }
    }

    /// <summary>Field number for the "notification_keywords" field.</summary>
    public const int NotificationKeywordsFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_notificationKeywords_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> notificationKeywords_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Additional information about a build request. These are define by the event
    /// publishers, and the Build Event Service does not validate or interpret
    /// them. They are used while notifying internal systems of new builds and
    /// invocations if the OrderedBuildEvent.event type is
    /// BuildEnqueued/InvocationAttemptStarted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> NotificationKeywords {
      get { return notificationKeywords_; }
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 6;
    private string projectId_ = "";
    /// <summary>
    /// Required. The project this build is associated with.
    /// This should match the project used for the initial call to
    /// PublishLifecycleEvent (containing a BuildEnqueued message).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PublishLifecycleEventRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PublishLifecycleEventRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServiceLevel != other.ServiceLevel) return false;
      if (!object.Equals(BuildEvent, other.BuildEvent)) return false;
      if (!object.Equals(StreamTimeout, other.StreamTimeout)) return false;
      if(!notificationKeywords_.Equals(other.notificationKeywords_)) return false;
      if (ProjectId != other.ProjectId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ServiceLevel != global::Google.Devtools.Build.V1.PublishLifecycleEventRequest.Types.ServiceLevel.Noninteractive) hash ^= ServiceLevel.GetHashCode();
      if (buildEvent_ != null) hash ^= BuildEvent.GetHashCode();
      if (streamTimeout_ != null) hash ^= StreamTimeout.GetHashCode();
      hash ^= notificationKeywords_.GetHashCode();
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ServiceLevel != global::Google.Devtools.Build.V1.PublishLifecycleEventRequest.Types.ServiceLevel.Noninteractive) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ServiceLevel);
      }
      if (buildEvent_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BuildEvent);
      }
      if (streamTimeout_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(StreamTimeout);
      }
      notificationKeywords_.WriteTo(output, _repeated_notificationKeywords_codec);
      if (ProjectId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ProjectId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ServiceLevel != global::Google.Devtools.Build.V1.PublishLifecycleEventRequest.Types.ServiceLevel.Noninteractive) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ServiceLevel);
      }
      if (buildEvent_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BuildEvent);
      }
      if (streamTimeout_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(StreamTimeout);
      }
      notificationKeywords_.WriteTo(ref output, _repeated_notificationKeywords_codec);
      if (ProjectId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ProjectId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ServiceLevel != global::Google.Devtools.Build.V1.PublishLifecycleEventRequest.Types.ServiceLevel.Noninteractive) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ServiceLevel);
      }
      if (buildEvent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BuildEvent);
      }
      if (streamTimeout_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StreamTimeout);
      }
      size += notificationKeywords_.CalculateSize(_repeated_notificationKeywords_codec);
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PublishLifecycleEventRequest other) {
      if (other == null) {
        return;
      }
      if (other.ServiceLevel != global::Google.Devtools.Build.V1.PublishLifecycleEventRequest.Types.ServiceLevel.Noninteractive) {
        ServiceLevel = other.ServiceLevel;
      }
      if (other.buildEvent_ != null) {
        if (buildEvent_ == null) {
          BuildEvent = new global::Google.Devtools.Build.V1.OrderedBuildEvent();
        }
        BuildEvent.MergeFrom(other.BuildEvent);
      }
      if (other.streamTimeout_ != null) {
        if (streamTimeout_ == null) {
          StreamTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        StreamTimeout.MergeFrom(other.StreamTimeout);
      }
      notificationKeywords_.Add(other.notificationKeywords_);
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ServiceLevel = (global::Google.Devtools.Build.V1.PublishLifecycleEventRequest.Types.ServiceLevel) input.ReadEnum();
            break;
          }
          case 18: {
            if (buildEvent_ == null) {
              BuildEvent = new global::Google.Devtools.Build.V1.OrderedBuildEvent();
            }
            input.ReadMessage(BuildEvent);
            break;
          }
          case 26: {
            if (streamTimeout_ == null) {
              StreamTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(StreamTimeout);
            break;
          }
          case 34: {
            notificationKeywords_.AddEntriesFrom(input, _repeated_notificationKeywords_codec);
            break;
          }
          case 50: {
            ProjectId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ServiceLevel = (global::Google.Devtools.Build.V1.PublishLifecycleEventRequest.Types.ServiceLevel) input.ReadEnum();
            break;
          }
          case 18: {
            if (buildEvent_ == null) {
              BuildEvent = new global::Google.Devtools.Build.V1.OrderedBuildEvent();
            }
            input.ReadMessage(BuildEvent);
            break;
          }
          case 26: {
            if (streamTimeout_ == null) {
              StreamTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(StreamTimeout);
            break;
          }
          case 34: {
            notificationKeywords_.AddEntriesFrom(ref input, _repeated_notificationKeywords_codec);
            break;
          }
          case 50: {
            ProjectId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the PublishLifecycleEventRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// The service level of the build request. Backends only uses this value when
      /// the BuildEnqueued event is published to determine what level of service
      /// this build should receive.
      /// </summary>
      public enum ServiceLevel {
        /// <summary>
        /// Non-interactive builds can tolerate longer event latencies. This is the
        /// default ServiceLevel if callers do not specify one.
        /// </summary>
        [pbr::OriginalName("NONINTERACTIVE")] Noninteractive = 0,
        /// <summary>
        /// The events of an interactive build should be delivered with low latency.
        /// </summary>
        [pbr::OriginalName("INTERACTIVE")] Interactive = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// States which event has been committed. Any failure to commit will cause
  /// RPC errors, hence not recorded by this proto.
  /// </summary>
  public sealed partial class PublishBuildToolEventStreamResponse : pb::IMessage<PublishBuildToolEventStreamResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PublishBuildToolEventStreamResponse> _parser = new pb::MessageParser<PublishBuildToolEventStreamResponse>(() => new PublishBuildToolEventStreamResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PublishBuildToolEventStreamResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Build.V1.PublishBuildEventReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublishBuildToolEventStreamResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublishBuildToolEventStreamResponse(PublishBuildToolEventStreamResponse other) : this() {
      streamId_ = other.streamId_ != null ? other.streamId_.Clone() : null;
      sequenceNumber_ = other.sequenceNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublishBuildToolEventStreamResponse Clone() {
      return new PublishBuildToolEventStreamResponse(this);
    }

    /// <summary>Field number for the "stream_id" field.</summary>
    public const int StreamIdFieldNumber = 1;
    private global::Google.Devtools.Build.V1.StreamId streamId_;
    /// <summary>
    /// The stream that contains this event.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Build.V1.StreamId StreamId {
      get { return streamId_; }
      set {
        streamId_ = value;
      }
    }

    /// <summary>Field number for the "sequence_number" field.</summary>
    public const int SequenceNumberFieldNumber = 2;
    private long sequenceNumber_;
    /// <summary>
    /// The sequence number of this event that has been committed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SequenceNumber {
      get { return sequenceNumber_; }
      set {
        sequenceNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PublishBuildToolEventStreamResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PublishBuildToolEventStreamResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StreamId, other.StreamId)) return false;
      if (SequenceNumber != other.SequenceNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (streamId_ != null) hash ^= StreamId.GetHashCode();
      if (SequenceNumber != 0L) hash ^= SequenceNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (streamId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StreamId);
      }
      if (SequenceNumber != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(SequenceNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (streamId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StreamId);
      }
      if (SequenceNumber != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(SequenceNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (streamId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StreamId);
      }
      if (SequenceNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SequenceNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PublishBuildToolEventStreamResponse other) {
      if (other == null) {
        return;
      }
      if (other.streamId_ != null) {
        if (streamId_ == null) {
          StreamId = new global::Google.Devtools.Build.V1.StreamId();
        }
        StreamId.MergeFrom(other.StreamId);
      }
      if (other.SequenceNumber != 0L) {
        SequenceNumber = other.SequenceNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (streamId_ == null) {
              StreamId = new global::Google.Devtools.Build.V1.StreamId();
            }
            input.ReadMessage(StreamId);
            break;
          }
          case 16: {
            SequenceNumber = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (streamId_ == null) {
              StreamId = new global::Google.Devtools.Build.V1.StreamId();
            }
            input.ReadMessage(StreamId);
            break;
          }
          case 16: {
            SequenceNumber = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Build event with contextual information about the stream it belongs to and
  /// its position in that stream.
  /// </summary>
  public sealed partial class OrderedBuildEvent : pb::IMessage<OrderedBuildEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OrderedBuildEvent> _parser = new pb::MessageParser<OrderedBuildEvent>(() => new OrderedBuildEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OrderedBuildEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Build.V1.PublishBuildEventReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderedBuildEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderedBuildEvent(OrderedBuildEvent other) : this() {
      streamId_ = other.streamId_ != null ? other.streamId_.Clone() : null;
      sequenceNumber_ = other.sequenceNumber_;
      event_ = other.event_ != null ? other.event_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderedBuildEvent Clone() {
      return new OrderedBuildEvent(this);
    }

    /// <summary>Field number for the "stream_id" field.</summary>
    public const int StreamIdFieldNumber = 1;
    private global::Google.Devtools.Build.V1.StreamId streamId_;
    /// <summary>
    /// Which build event stream this event belongs to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Build.V1.StreamId StreamId {
      get { return streamId_; }
      set {
        streamId_ = value;
      }
    }

    /// <summary>Field number for the "sequence_number" field.</summary>
    public const int SequenceNumberFieldNumber = 2;
    private long sequenceNumber_;
    /// <summary>
    /// The position of this event in the stream. The sequence numbers for a build
    /// event stream should be a sequence of consecutive natural numbers starting
    /// from one. (1, 2, 3, ...)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SequenceNumber {
      get { return sequenceNumber_; }
      set {
        sequenceNumber_ = value;
      }
    }

    /// <summary>Field number for the "event" field.</summary>
    public const int EventFieldNumber = 3;
    private global::Google.Devtools.Build.V1.BuildEvent event_;
    /// <summary>
    /// The actual event.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Build.V1.BuildEvent Event {
      get { return event_; }
      set {
        event_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OrderedBuildEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OrderedBuildEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StreamId, other.StreamId)) return false;
      if (SequenceNumber != other.SequenceNumber) return false;
      if (!object.Equals(Event, other.Event)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (streamId_ != null) hash ^= StreamId.GetHashCode();
      if (SequenceNumber != 0L) hash ^= SequenceNumber.GetHashCode();
      if (event_ != null) hash ^= Event.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (streamId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StreamId);
      }
      if (SequenceNumber != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(SequenceNumber);
      }
      if (event_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Event);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (streamId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StreamId);
      }
      if (SequenceNumber != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(SequenceNumber);
      }
      if (event_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Event);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (streamId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StreamId);
      }
      if (SequenceNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SequenceNumber);
      }
      if (event_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Event);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OrderedBuildEvent other) {
      if (other == null) {
        return;
      }
      if (other.streamId_ != null) {
        if (streamId_ == null) {
          StreamId = new global::Google.Devtools.Build.V1.StreamId();
        }
        StreamId.MergeFrom(other.StreamId);
      }
      if (other.SequenceNumber != 0L) {
        SequenceNumber = other.SequenceNumber;
      }
      if (other.event_ != null) {
        if (event_ == null) {
          Event = new global::Google.Devtools.Build.V1.BuildEvent();
        }
        Event.MergeFrom(other.Event);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (streamId_ == null) {
              StreamId = new global::Google.Devtools.Build.V1.StreamId();
            }
            input.ReadMessage(StreamId);
            break;
          }
          case 16: {
            SequenceNumber = input.ReadInt64();
            break;
          }
          case 26: {
            if (event_ == null) {
              Event = new global::Google.Devtools.Build.V1.BuildEvent();
            }
            input.ReadMessage(Event);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (streamId_ == null) {
              StreamId = new global::Google.Devtools.Build.V1.StreamId();
            }
            input.ReadMessage(StreamId);
            break;
          }
          case 16: {
            SequenceNumber = input.ReadInt64();
            break;
          }
          case 26: {
            if (event_ == null) {
              Event = new global::Google.Devtools.Build.V1.BuildEvent();
            }
            input.ReadMessage(Event);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Streaming request message for PublishBuildToolEventStream.
  /// </summary>
  public sealed partial class PublishBuildToolEventStreamRequest : pb::IMessage<PublishBuildToolEventStreamRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PublishBuildToolEventStreamRequest> _parser = new pb::MessageParser<PublishBuildToolEventStreamRequest>(() => new PublishBuildToolEventStreamRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PublishBuildToolEventStreamRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Build.V1.PublishBuildEventReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublishBuildToolEventStreamRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublishBuildToolEventStreamRequest(PublishBuildToolEventStreamRequest other) : this() {
      orderedBuildEvent_ = other.orderedBuildEvent_ != null ? other.orderedBuildEvent_.Clone() : null;
      notificationKeywords_ = other.notificationKeywords_.Clone();
      projectId_ = other.projectId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublishBuildToolEventStreamRequest Clone() {
      return new PublishBuildToolEventStreamRequest(this);
    }

    /// <summary>Field number for the "ordered_build_event" field.</summary>
    public const int OrderedBuildEventFieldNumber = 4;
    private global::Google.Devtools.Build.V1.OrderedBuildEvent orderedBuildEvent_;
    /// <summary>
    /// Required. The build event with position info.
    /// New publishing clients should use this field rather than the 3 above.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Build.V1.OrderedBuildEvent OrderedBuildEvent {
      get { return orderedBuildEvent_; }
      set {
        orderedBuildEvent_ = value;
      }
    }

    /// <summary>Field number for the "notification_keywords" field.</summary>
    public const int NotificationKeywordsFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_notificationKeywords_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> notificationKeywords_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The keywords to be attached to the notification which notifies the start
    /// of a new build event stream. BES only reads this field when sequence_number
    /// or ordered_build_event.sequence_number is 1 in this message. If this field
    /// is empty, BES will not publish notification messages for this stream.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> NotificationKeywords {
      get { return notificationKeywords_; }
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 6;
    private string projectId_ = "";
    /// <summary>
    /// Required. The project this build is associated with.
    /// This should match the project used for the initial call to
    /// PublishLifecycleEvent (containing a BuildEnqueued message).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PublishBuildToolEventStreamRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PublishBuildToolEventStreamRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(OrderedBuildEvent, other.OrderedBuildEvent)) return false;
      if(!notificationKeywords_.Equals(other.notificationKeywords_)) return false;
      if (ProjectId != other.ProjectId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (orderedBuildEvent_ != null) hash ^= OrderedBuildEvent.GetHashCode();
      hash ^= notificationKeywords_.GetHashCode();
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (orderedBuildEvent_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(OrderedBuildEvent);
      }
      notificationKeywords_.WriteTo(output, _repeated_notificationKeywords_codec);
      if (ProjectId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ProjectId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (orderedBuildEvent_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(OrderedBuildEvent);
      }
      notificationKeywords_.WriteTo(ref output, _repeated_notificationKeywords_codec);
      if (ProjectId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ProjectId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (orderedBuildEvent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OrderedBuildEvent);
      }
      size += notificationKeywords_.CalculateSize(_repeated_notificationKeywords_codec);
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PublishBuildToolEventStreamRequest other) {
      if (other == null) {
        return;
      }
      if (other.orderedBuildEvent_ != null) {
        if (orderedBuildEvent_ == null) {
          OrderedBuildEvent = new global::Google.Devtools.Build.V1.OrderedBuildEvent();
        }
        OrderedBuildEvent.MergeFrom(other.OrderedBuildEvent);
      }
      notificationKeywords_.Add(other.notificationKeywords_);
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 34: {
            if (orderedBuildEvent_ == null) {
              OrderedBuildEvent = new global::Google.Devtools.Build.V1.OrderedBuildEvent();
            }
            input.ReadMessage(OrderedBuildEvent);
            break;
          }
          case 42: {
            notificationKeywords_.AddEntriesFrom(input, _repeated_notificationKeywords_codec);
            break;
          }
          case 50: {
            ProjectId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 34: {
            if (orderedBuildEvent_ == null) {
              OrderedBuildEvent = new global::Google.Devtools.Build.V1.OrderedBuildEvent();
            }
            input.ReadMessage(OrderedBuildEvent);
            break;
          }
          case 42: {
            notificationKeywords_.AddEntriesFrom(ref input, _repeated_notificationKeywords_codec);
            break;
          }
          case 50: {
            ProjectId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
