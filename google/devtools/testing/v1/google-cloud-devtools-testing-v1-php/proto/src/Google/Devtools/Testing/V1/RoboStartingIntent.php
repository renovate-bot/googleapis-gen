<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/devtools/testing/v1/test_execution.proto

namespace Google\Devtools\Testing\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Message for specifying the start activities to crawl.
 *
 * Generated from protobuf message <code>google.devtools.testing.v1.RoboStartingIntent</code>
 */
class RoboStartingIntent extends \Google\Protobuf\Internal\Message
{
    /**
     * Timeout in seconds for each intent.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration timeout = 3;</code>
     */
    protected $timeout = null;
    protected $starting_intent;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Devtools\Testing\V1\LauncherActivityIntent $launcher_activity
     *           An intent that starts the main launcher activity.
     *     @type \Google\Devtools\Testing\V1\StartActivityIntent $start_activity
     *           An intent that starts an activity with specific details.
     *     @type \Google\Protobuf\Duration $timeout
     *           Timeout in seconds for each intent.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Devtools\Testing\V1\TestExecution::initOnce();
        parent::__construct($data);
    }

    /**
     * An intent that starts the main launcher activity.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.LauncherActivityIntent launcher_activity = 1;</code>
     * @return \Google\Devtools\Testing\V1\LauncherActivityIntent|null
     */
    public function getLauncherActivity()
    {
        return $this->readOneof(1);
    }

    public function hasLauncherActivity()
    {
        return $this->hasOneof(1);
    }

    /**
     * An intent that starts the main launcher activity.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.LauncherActivityIntent launcher_activity = 1;</code>
     * @param \Google\Devtools\Testing\V1\LauncherActivityIntent $var
     * @return $this
     */
    public function setLauncherActivity($var)
    {
        GPBUtil::checkMessage($var, \Google\Devtools\Testing\V1\LauncherActivityIntent::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * An intent that starts an activity with specific details.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.StartActivityIntent start_activity = 2;</code>
     * @return \Google\Devtools\Testing\V1\StartActivityIntent|null
     */
    public function getStartActivity()
    {
        return $this->readOneof(2);
    }

    public function hasStartActivity()
    {
        return $this->hasOneof(2);
    }

    /**
     * An intent that starts an activity with specific details.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.StartActivityIntent start_activity = 2;</code>
     * @param \Google\Devtools\Testing\V1\StartActivityIntent $var
     * @return $this
     */
    public function setStartActivity($var)
    {
        GPBUtil::checkMessage($var, \Google\Devtools\Testing\V1\StartActivityIntent::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Timeout in seconds for each intent.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration timeout = 3;</code>
     * @return \Google\Protobuf\Duration|null
     */
    public function getTimeout()
    {
        return $this->timeout;
    }

    public function hasTimeout()
    {
        return isset($this->timeout);
    }

    public function clearTimeout()
    {
        unset($this->timeout);
    }

    /**
     * Timeout in seconds for each intent.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration timeout = 3;</code>
     * @param \Google\Protobuf\Duration $var
     * @return $this
     */
    public function setTimeout($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Duration::class);
        $this->timeout = $var;

        return $this;
    }

    /**
     * @return string
     */
    public function getStartingIntent()
    {
        return $this->whichOneof("starting_intent");
    }

}

