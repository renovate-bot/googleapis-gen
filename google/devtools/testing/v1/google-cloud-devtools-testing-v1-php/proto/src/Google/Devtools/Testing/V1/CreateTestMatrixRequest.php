<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/devtools/testing/v1/test_execution.proto

namespace Google\Devtools\Testing\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Request to submit a matrix of tests for execution.
 *
 * Generated from protobuf message <code>google.devtools.testing.v1.CreateTestMatrixRequest</code>
 */
class CreateTestMatrixRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * The GCE project under which this job will run.
     *
     * Generated from protobuf field <code>string project_id = 1;</code>
     */
    protected $project_id = '';
    /**
     * The matrix of tests that the user wants to run.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.TestMatrix test_matrix = 2;</code>
     */
    protected $test_matrix = null;
    /**
     * A string id used to detect duplicated requests.
     * Ids are automatically scoped to a project, so
     * users should ensure the ID is unique per-project.
     * A UUID is recommended.
     * Optional, but strongly recommended.
     *
     * Generated from protobuf field <code>string request_id = 3;</code>
     */
    protected $request_id = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $project_id
     *           The GCE project under which this job will run.
     *     @type \Google\Devtools\Testing\V1\TestMatrix $test_matrix
     *           The matrix of tests that the user wants to run.
     *     @type string $request_id
     *           A string id used to detect duplicated requests.
     *           Ids are automatically scoped to a project, so
     *           users should ensure the ID is unique per-project.
     *           A UUID is recommended.
     *           Optional, but strongly recommended.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Devtools\Testing\V1\TestExecution::initOnce();
        parent::__construct($data);
    }

    /**
     * The GCE project under which this job will run.
     *
     * Generated from protobuf field <code>string project_id = 1;</code>
     * @return string
     */
    public function getProjectId()
    {
        return $this->project_id;
    }

    /**
     * The GCE project under which this job will run.
     *
     * Generated from protobuf field <code>string project_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setProjectId($var)
    {
        GPBUtil::checkString($var, True);
        $this->project_id = $var;

        return $this;
    }

    /**
     * The matrix of tests that the user wants to run.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.TestMatrix test_matrix = 2;</code>
     * @return \Google\Devtools\Testing\V1\TestMatrix|null
     */
    public function getTestMatrix()
    {
        return $this->test_matrix;
    }

    public function hasTestMatrix()
    {
        return isset($this->test_matrix);
    }

    public function clearTestMatrix()
    {
        unset($this->test_matrix);
    }

    /**
     * The matrix of tests that the user wants to run.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.TestMatrix test_matrix = 2;</code>
     * @param \Google\Devtools\Testing\V1\TestMatrix $var
     * @return $this
     */
    public function setTestMatrix($var)
    {
        GPBUtil::checkMessage($var, \Google\Devtools\Testing\V1\TestMatrix::class);
        $this->test_matrix = $var;

        return $this;
    }

    /**
     * A string id used to detect duplicated requests.
     * Ids are automatically scoped to a project, so
     * users should ensure the ID is unique per-project.
     * A UUID is recommended.
     * Optional, but strongly recommended.
     *
     * Generated from protobuf field <code>string request_id = 3;</code>
     * @return string
     */
    public function getRequestId()
    {
        return $this->request_id;
    }

    /**
     * A string id used to detect duplicated requests.
     * Ids are automatically scoped to a project, so
     * users should ensure the ID is unique per-project.
     * A UUID is recommended.
     * Optional, but strongly recommended.
     *
     * Generated from protobuf field <code>string request_id = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setRequestId($var)
    {
        GPBUtil::checkString($var, True);
        $this->request_id = $var;

        return $this;
    }

}

