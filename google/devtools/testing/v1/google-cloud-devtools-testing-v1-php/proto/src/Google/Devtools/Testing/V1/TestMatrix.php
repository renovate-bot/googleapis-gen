<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/devtools/testing/v1/test_execution.proto

namespace Google\Devtools\Testing\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * TestMatrix captures all details about a test. It contains the environment
 * configuration, test specification, test executions and overall state and
 * outcome.
 *
 * Generated from protobuf message <code>google.devtools.testing.v1.TestMatrix</code>
 */
class TestMatrix extends \Google\Protobuf\Internal\Message
{
    /**
     * Output only. Unique id set by the service.
     *
     * Generated from protobuf field <code>string test_matrix_id = 1;</code>
     */
    protected $test_matrix_id = '';
    /**
     * The cloud project that owns the test matrix.
     *
     * Generated from protobuf field <code>string project_id = 7;</code>
     */
    protected $project_id = '';
    /**
     * Information about the client which invoked the test.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.ClientInfo client_info = 10;</code>
     */
    protected $client_info = null;
    /**
     * Required. How to run the test.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.TestSpecification test_specification = 3;</code>
     */
    protected $test_specification = null;
    /**
     * Required. The devices the tests are being executed on.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.EnvironmentMatrix environment_matrix = 4;</code>
     */
    protected $environment_matrix = null;
    /**
     * Output only. The list of test executions that the service creates for
     * this matrix.
     *
     * Generated from protobuf field <code>repeated .google.devtools.testing.v1.TestExecution test_executions = 5;</code>
     */
    private $test_executions;
    /**
     * Required. Where the results for the matrix are written.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.ResultStorage result_storage = 6;</code>
     */
    protected $result_storage = null;
    /**
     * Output only. Indicates the current progress of the test matrix.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.TestState state = 8;</code>
     */
    protected $state = 0;
    /**
     * Output only. The time this test matrix was initially created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp timestamp = 9;</code>
     */
    protected $timestamp = null;
    /**
     * Output only. Describes why the matrix is considered invalid.
     * Only useful for matrices in the INVALID state.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.InvalidMatrixDetails invalid_matrix_details = 11;</code>
     */
    protected $invalid_matrix_details = 0;
    /**
     * The number of times a TestExecution should be re-attempted if one or more
     * of its test cases fail for any reason.
     * The maximum number of reruns allowed is 10.
     * Default is 0, which implies no reruns.
     *
     * Generated from protobuf field <code>int32 flaky_test_attempts = 13;</code>
     */
    protected $flaky_test_attempts = 0;
    /**
     * Output Only. The overall outcome of the test.
     * Only set when the test matrix state is FINISHED.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.OutcomeSummary outcome_summary = 14;</code>
     */
    protected $outcome_summary = 0;
    /**
     * If true, only a single attempt at most will be made to run each
     * execution/shard in the matrix. Flaky test attempts are not affected.
     * Normally, 2 or more attempts are made if a potential infrastructure issue
     * is detected.
     * This feature is for latency sensitive workloads. The incidence of
     * execution failures may be significantly greater for fail-fast matrices
     * and support is more limited because of that expectation.
     *
     * Generated from protobuf field <code>bool fail_fast = 17;</code>
     */
    protected $fail_fast = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $test_matrix_id
     *           Output only. Unique id set by the service.
     *     @type string $project_id
     *           The cloud project that owns the test matrix.
     *     @type \Google\Devtools\Testing\V1\ClientInfo $client_info
     *           Information about the client which invoked the test.
     *     @type \Google\Devtools\Testing\V1\TestSpecification $test_specification
     *           Required. How to run the test.
     *     @type \Google\Devtools\Testing\V1\EnvironmentMatrix $environment_matrix
     *           Required. The devices the tests are being executed on.
     *     @type \Google\Devtools\Testing\V1\TestExecution[]|\Google\Protobuf\Internal\RepeatedField $test_executions
     *           Output only. The list of test executions that the service creates for
     *           this matrix.
     *     @type \Google\Devtools\Testing\V1\ResultStorage $result_storage
     *           Required. Where the results for the matrix are written.
     *     @type int $state
     *           Output only. Indicates the current progress of the test matrix.
     *     @type \Google\Protobuf\Timestamp $timestamp
     *           Output only. The time this test matrix was initially created.
     *     @type int $invalid_matrix_details
     *           Output only. Describes why the matrix is considered invalid.
     *           Only useful for matrices in the INVALID state.
     *     @type int $flaky_test_attempts
     *           The number of times a TestExecution should be re-attempted if one or more
     *           of its test cases fail for any reason.
     *           The maximum number of reruns allowed is 10.
     *           Default is 0, which implies no reruns.
     *     @type int $outcome_summary
     *           Output Only. The overall outcome of the test.
     *           Only set when the test matrix state is FINISHED.
     *     @type bool $fail_fast
     *           If true, only a single attempt at most will be made to run each
     *           execution/shard in the matrix. Flaky test attempts are not affected.
     *           Normally, 2 or more attempts are made if a potential infrastructure issue
     *           is detected.
     *           This feature is for latency sensitive workloads. The incidence of
     *           execution failures may be significantly greater for fail-fast matrices
     *           and support is more limited because of that expectation.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Devtools\Testing\V1\TestExecution::initOnce();
        parent::__construct($data);
    }

    /**
     * Output only. Unique id set by the service.
     *
     * Generated from protobuf field <code>string test_matrix_id = 1;</code>
     * @return string
     */
    public function getTestMatrixId()
    {
        return $this->test_matrix_id;
    }

    /**
     * Output only. Unique id set by the service.
     *
     * Generated from protobuf field <code>string test_matrix_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setTestMatrixId($var)
    {
        GPBUtil::checkString($var, True);
        $this->test_matrix_id = $var;

        return $this;
    }

    /**
     * The cloud project that owns the test matrix.
     *
     * Generated from protobuf field <code>string project_id = 7;</code>
     * @return string
     */
    public function getProjectId()
    {
        return $this->project_id;
    }

    /**
     * The cloud project that owns the test matrix.
     *
     * Generated from protobuf field <code>string project_id = 7;</code>
     * @param string $var
     * @return $this
     */
    public function setProjectId($var)
    {
        GPBUtil::checkString($var, True);
        $this->project_id = $var;

        return $this;
    }

    /**
     * Information about the client which invoked the test.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.ClientInfo client_info = 10;</code>
     * @return \Google\Devtools\Testing\V1\ClientInfo|null
     */
    public function getClientInfo()
    {
        return $this->client_info;
    }

    public function hasClientInfo()
    {
        return isset($this->client_info);
    }

    public function clearClientInfo()
    {
        unset($this->client_info);
    }

    /**
     * Information about the client which invoked the test.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.ClientInfo client_info = 10;</code>
     * @param \Google\Devtools\Testing\V1\ClientInfo $var
     * @return $this
     */
    public function setClientInfo($var)
    {
        GPBUtil::checkMessage($var, \Google\Devtools\Testing\V1\ClientInfo::class);
        $this->client_info = $var;

        return $this;
    }

    /**
     * Required. How to run the test.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.TestSpecification test_specification = 3;</code>
     * @return \Google\Devtools\Testing\V1\TestSpecification|null
     */
    public function getTestSpecification()
    {
        return $this->test_specification;
    }

    public function hasTestSpecification()
    {
        return isset($this->test_specification);
    }

    public function clearTestSpecification()
    {
        unset($this->test_specification);
    }

    /**
     * Required. How to run the test.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.TestSpecification test_specification = 3;</code>
     * @param \Google\Devtools\Testing\V1\TestSpecification $var
     * @return $this
     */
    public function setTestSpecification($var)
    {
        GPBUtil::checkMessage($var, \Google\Devtools\Testing\V1\TestSpecification::class);
        $this->test_specification = $var;

        return $this;
    }

    /**
     * Required. The devices the tests are being executed on.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.EnvironmentMatrix environment_matrix = 4;</code>
     * @return \Google\Devtools\Testing\V1\EnvironmentMatrix|null
     */
    public function getEnvironmentMatrix()
    {
        return $this->environment_matrix;
    }

    public function hasEnvironmentMatrix()
    {
        return isset($this->environment_matrix);
    }

    public function clearEnvironmentMatrix()
    {
        unset($this->environment_matrix);
    }

    /**
     * Required. The devices the tests are being executed on.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.EnvironmentMatrix environment_matrix = 4;</code>
     * @param \Google\Devtools\Testing\V1\EnvironmentMatrix $var
     * @return $this
     */
    public function setEnvironmentMatrix($var)
    {
        GPBUtil::checkMessage($var, \Google\Devtools\Testing\V1\EnvironmentMatrix::class);
        $this->environment_matrix = $var;

        return $this;
    }

    /**
     * Output only. The list of test executions that the service creates for
     * this matrix.
     *
     * Generated from protobuf field <code>repeated .google.devtools.testing.v1.TestExecution test_executions = 5;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getTestExecutions()
    {
        return $this->test_executions;
    }

    /**
     * Output only. The list of test executions that the service creates for
     * this matrix.
     *
     * Generated from protobuf field <code>repeated .google.devtools.testing.v1.TestExecution test_executions = 5;</code>
     * @param \Google\Devtools\Testing\V1\TestExecution[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setTestExecutions($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Devtools\Testing\V1\TestExecution::class);
        $this->test_executions = $arr;

        return $this;
    }

    /**
     * Required. Where the results for the matrix are written.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.ResultStorage result_storage = 6;</code>
     * @return \Google\Devtools\Testing\V1\ResultStorage|null
     */
    public function getResultStorage()
    {
        return $this->result_storage;
    }

    public function hasResultStorage()
    {
        return isset($this->result_storage);
    }

    public function clearResultStorage()
    {
        unset($this->result_storage);
    }

    /**
     * Required. Where the results for the matrix are written.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.ResultStorage result_storage = 6;</code>
     * @param \Google\Devtools\Testing\V1\ResultStorage $var
     * @return $this
     */
    public function setResultStorage($var)
    {
        GPBUtil::checkMessage($var, \Google\Devtools\Testing\V1\ResultStorage::class);
        $this->result_storage = $var;

        return $this;
    }

    /**
     * Output only. Indicates the current progress of the test matrix.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.TestState state = 8;</code>
     * @return int
     */
    public function getState()
    {
        return $this->state;
    }

    /**
     * Output only. Indicates the current progress of the test matrix.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.TestState state = 8;</code>
     * @param int $var
     * @return $this
     */
    public function setState($var)
    {
        GPBUtil::checkEnum($var, \Google\Devtools\Testing\V1\TestState::class);
        $this->state = $var;

        return $this;
    }

    /**
     * Output only. The time this test matrix was initially created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp timestamp = 9;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getTimestamp()
    {
        return $this->timestamp;
    }

    public function hasTimestamp()
    {
        return isset($this->timestamp);
    }

    public function clearTimestamp()
    {
        unset($this->timestamp);
    }

    /**
     * Output only. The time this test matrix was initially created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp timestamp = 9;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setTimestamp($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->timestamp = $var;

        return $this;
    }

    /**
     * Output only. Describes why the matrix is considered invalid.
     * Only useful for matrices in the INVALID state.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.InvalidMatrixDetails invalid_matrix_details = 11;</code>
     * @return int
     */
    public function getInvalidMatrixDetails()
    {
        return $this->invalid_matrix_details;
    }

    /**
     * Output only. Describes why the matrix is considered invalid.
     * Only useful for matrices in the INVALID state.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.InvalidMatrixDetails invalid_matrix_details = 11;</code>
     * @param int $var
     * @return $this
     */
    public function setInvalidMatrixDetails($var)
    {
        GPBUtil::checkEnum($var, \Google\Devtools\Testing\V1\InvalidMatrixDetails::class);
        $this->invalid_matrix_details = $var;

        return $this;
    }

    /**
     * The number of times a TestExecution should be re-attempted if one or more
     * of its test cases fail for any reason.
     * The maximum number of reruns allowed is 10.
     * Default is 0, which implies no reruns.
     *
     * Generated from protobuf field <code>int32 flaky_test_attempts = 13;</code>
     * @return int
     */
    public function getFlakyTestAttempts()
    {
        return $this->flaky_test_attempts;
    }

    /**
     * The number of times a TestExecution should be re-attempted if one or more
     * of its test cases fail for any reason.
     * The maximum number of reruns allowed is 10.
     * Default is 0, which implies no reruns.
     *
     * Generated from protobuf field <code>int32 flaky_test_attempts = 13;</code>
     * @param int $var
     * @return $this
     */
    public function setFlakyTestAttempts($var)
    {
        GPBUtil::checkInt32($var);
        $this->flaky_test_attempts = $var;

        return $this;
    }

    /**
     * Output Only. The overall outcome of the test.
     * Only set when the test matrix state is FINISHED.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.OutcomeSummary outcome_summary = 14;</code>
     * @return int
     */
    public function getOutcomeSummary()
    {
        return $this->outcome_summary;
    }

    /**
     * Output Only. The overall outcome of the test.
     * Only set when the test matrix state is FINISHED.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.OutcomeSummary outcome_summary = 14;</code>
     * @param int $var
     * @return $this
     */
    public function setOutcomeSummary($var)
    {
        GPBUtil::checkEnum($var, \Google\Devtools\Testing\V1\OutcomeSummary::class);
        $this->outcome_summary = $var;

        return $this;
    }

    /**
     * If true, only a single attempt at most will be made to run each
     * execution/shard in the matrix. Flaky test attempts are not affected.
     * Normally, 2 or more attempts are made if a potential infrastructure issue
     * is detected.
     * This feature is for latency sensitive workloads. The incidence of
     * execution failures may be significantly greater for fail-fast matrices
     * and support is more limited because of that expectation.
     *
     * Generated from protobuf field <code>bool fail_fast = 17;</code>
     * @return bool
     */
    public function getFailFast()
    {
        return $this->fail_fast;
    }

    /**
     * If true, only a single attempt at most will be made to run each
     * execution/shard in the matrix. Flaky test attempts are not affected.
     * Normally, 2 or more attempts are made if a potential infrastructure issue
     * is detected.
     * This feature is for latency sensitive workloads. The incidence of
     * execution failures may be significantly greater for fail-fast matrices
     * and support is more limited because of that expectation.
     *
     * Generated from protobuf field <code>bool fail_fast = 17;</code>
     * @param bool $var
     * @return $this
     */
    public function setFailFast($var)
    {
        GPBUtil::checkBool($var);
        $this->fail_fast = $var;

        return $this;
    }

}

