<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/devtools/testing/v1/test_execution.proto

namespace Google\Devtools\Testing\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A description of how to set up the Android device prior to running the test.
 *
 * Generated from protobuf message <code>google.devtools.testing.v1.TestSetup</code>
 */
class TestSetup extends \Google\Protobuf\Internal\Message
{
    /**
     * List of files to push to the device before starting the test.
     *
     * Generated from protobuf field <code>repeated .google.devtools.testing.v1.DeviceFile files_to_push = 1;</code>
     */
    private $files_to_push;
    /**
     * List of directories on the device to upload to GCS at the end of the test;
     * they must be absolute paths under /sdcard, /storage or /data/local/tmp.
     * Path names are restricted to characters a-z A-Z 0-9 _ - . + and /
     * Note: The paths /sdcard and /data will be made available and treated as
     * implicit path substitutions. E.g. if /sdcard on a particular device does
     * not map to external storage, the system will replace it with the external
     * storage path prefix for that device.
     *
     * Generated from protobuf field <code>repeated string directories_to_pull = 2;</code>
     */
    private $directories_to_pull;
    /**
     * APKs to install in addition to those being directly tested.
     * Currently capped at 100.
     *
     * Generated from protobuf field <code>repeated .google.devtools.testing.v1.Apk additional_apks = 3;</code>
     */
    private $additional_apks;
    /**
     * The device will be logged in on this account for the duration of the test.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.Account account = 4;</code>
     */
    protected $account = null;
    /**
     * The network traffic profile used for running the test.
     * Available network profiles can be queried by using the
     * NETWORK_CONFIGURATION environment type when calling
     * TestEnvironmentDiscoveryService.GetTestEnvironmentCatalog.
     *
     * Generated from protobuf field <code>string network_profile = 5;</code>
     */
    protected $network_profile = '';
    /**
     * Environment variables to set for the test (only applicable for
     * instrumentation tests).
     *
     * Generated from protobuf field <code>repeated .google.devtools.testing.v1.EnvironmentVariable environment_variables = 6;</code>
     */
    private $environment_variables;
    /**
     * Systrace configuration for the run.
     * If set a systrace will be taken, starting on test start and lasting for the
     * configured duration. The systrace file thus obtained is put in the results
     * bucket together with the other artifacts from the run.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.SystraceSetup systrace = 9;</code>
     */
    protected $systrace = null;
    /**
     * Whether to prevent all runtime permissions to be granted at app install
     *
     * Generated from protobuf field <code>bool dont_autogrant_permissions = 23;</code>
     */
    protected $dont_autogrant_permissions = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Devtools\Testing\V1\DeviceFile[]|\Google\Protobuf\Internal\RepeatedField $files_to_push
     *           List of files to push to the device before starting the test.
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $directories_to_pull
     *           List of directories on the device to upload to GCS at the end of the test;
     *           they must be absolute paths under /sdcard, /storage or /data/local/tmp.
     *           Path names are restricted to characters a-z A-Z 0-9 _ - . + and /
     *           Note: The paths /sdcard and /data will be made available and treated as
     *           implicit path substitutions. E.g. if /sdcard on a particular device does
     *           not map to external storage, the system will replace it with the external
     *           storage path prefix for that device.
     *     @type \Google\Devtools\Testing\V1\Apk[]|\Google\Protobuf\Internal\RepeatedField $additional_apks
     *           APKs to install in addition to those being directly tested.
     *           Currently capped at 100.
     *     @type \Google\Devtools\Testing\V1\Account $account
     *           The device will be logged in on this account for the duration of the test.
     *     @type string $network_profile
     *           The network traffic profile used for running the test.
     *           Available network profiles can be queried by using the
     *           NETWORK_CONFIGURATION environment type when calling
     *           TestEnvironmentDiscoveryService.GetTestEnvironmentCatalog.
     *     @type \Google\Devtools\Testing\V1\EnvironmentVariable[]|\Google\Protobuf\Internal\RepeatedField $environment_variables
     *           Environment variables to set for the test (only applicable for
     *           instrumentation tests).
     *     @type \Google\Devtools\Testing\V1\SystraceSetup $systrace
     *           Systrace configuration for the run.
     *           If set a systrace will be taken, starting on test start and lasting for the
     *           configured duration. The systrace file thus obtained is put in the results
     *           bucket together with the other artifacts from the run.
     *     @type bool $dont_autogrant_permissions
     *           Whether to prevent all runtime permissions to be granted at app install
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Devtools\Testing\V1\TestExecution::initOnce();
        parent::__construct($data);
    }

    /**
     * List of files to push to the device before starting the test.
     *
     * Generated from protobuf field <code>repeated .google.devtools.testing.v1.DeviceFile files_to_push = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getFilesToPush()
    {
        return $this->files_to_push;
    }

    /**
     * List of files to push to the device before starting the test.
     *
     * Generated from protobuf field <code>repeated .google.devtools.testing.v1.DeviceFile files_to_push = 1;</code>
     * @param \Google\Devtools\Testing\V1\DeviceFile[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setFilesToPush($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Devtools\Testing\V1\DeviceFile::class);
        $this->files_to_push = $arr;

        return $this;
    }

    /**
     * List of directories on the device to upload to GCS at the end of the test;
     * they must be absolute paths under /sdcard, /storage or /data/local/tmp.
     * Path names are restricted to characters a-z A-Z 0-9 _ - . + and /
     * Note: The paths /sdcard and /data will be made available and treated as
     * implicit path substitutions. E.g. if /sdcard on a particular device does
     * not map to external storage, the system will replace it with the external
     * storage path prefix for that device.
     *
     * Generated from protobuf field <code>repeated string directories_to_pull = 2;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getDirectoriesToPull()
    {
        return $this->directories_to_pull;
    }

    /**
     * List of directories on the device to upload to GCS at the end of the test;
     * they must be absolute paths under /sdcard, /storage or /data/local/tmp.
     * Path names are restricted to characters a-z A-Z 0-9 _ - . + and /
     * Note: The paths /sdcard and /data will be made available and treated as
     * implicit path substitutions. E.g. if /sdcard on a particular device does
     * not map to external storage, the system will replace it with the external
     * storage path prefix for that device.
     *
     * Generated from protobuf field <code>repeated string directories_to_pull = 2;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setDirectoriesToPull($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->directories_to_pull = $arr;

        return $this;
    }

    /**
     * APKs to install in addition to those being directly tested.
     * Currently capped at 100.
     *
     * Generated from protobuf field <code>repeated .google.devtools.testing.v1.Apk additional_apks = 3;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getAdditionalApks()
    {
        return $this->additional_apks;
    }

    /**
     * APKs to install in addition to those being directly tested.
     * Currently capped at 100.
     *
     * Generated from protobuf field <code>repeated .google.devtools.testing.v1.Apk additional_apks = 3;</code>
     * @param \Google\Devtools\Testing\V1\Apk[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setAdditionalApks($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Devtools\Testing\V1\Apk::class);
        $this->additional_apks = $arr;

        return $this;
    }

    /**
     * The device will be logged in on this account for the duration of the test.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.Account account = 4;</code>
     * @return \Google\Devtools\Testing\V1\Account|null
     */
    public function getAccount()
    {
        return $this->account;
    }

    public function hasAccount()
    {
        return isset($this->account);
    }

    public function clearAccount()
    {
        unset($this->account);
    }

    /**
     * The device will be logged in on this account for the duration of the test.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.Account account = 4;</code>
     * @param \Google\Devtools\Testing\V1\Account $var
     * @return $this
     */
    public function setAccount($var)
    {
        GPBUtil::checkMessage($var, \Google\Devtools\Testing\V1\Account::class);
        $this->account = $var;

        return $this;
    }

    /**
     * The network traffic profile used for running the test.
     * Available network profiles can be queried by using the
     * NETWORK_CONFIGURATION environment type when calling
     * TestEnvironmentDiscoveryService.GetTestEnvironmentCatalog.
     *
     * Generated from protobuf field <code>string network_profile = 5;</code>
     * @return string
     */
    public function getNetworkProfile()
    {
        return $this->network_profile;
    }

    /**
     * The network traffic profile used for running the test.
     * Available network profiles can be queried by using the
     * NETWORK_CONFIGURATION environment type when calling
     * TestEnvironmentDiscoveryService.GetTestEnvironmentCatalog.
     *
     * Generated from protobuf field <code>string network_profile = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setNetworkProfile($var)
    {
        GPBUtil::checkString($var, True);
        $this->network_profile = $var;

        return $this;
    }

    /**
     * Environment variables to set for the test (only applicable for
     * instrumentation tests).
     *
     * Generated from protobuf field <code>repeated .google.devtools.testing.v1.EnvironmentVariable environment_variables = 6;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getEnvironmentVariables()
    {
        return $this->environment_variables;
    }

    /**
     * Environment variables to set for the test (only applicable for
     * instrumentation tests).
     *
     * Generated from protobuf field <code>repeated .google.devtools.testing.v1.EnvironmentVariable environment_variables = 6;</code>
     * @param \Google\Devtools\Testing\V1\EnvironmentVariable[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setEnvironmentVariables($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Devtools\Testing\V1\EnvironmentVariable::class);
        $this->environment_variables = $arr;

        return $this;
    }

    /**
     * Systrace configuration for the run.
     * If set a systrace will be taken, starting on test start and lasting for the
     * configured duration. The systrace file thus obtained is put in the results
     * bucket together with the other artifacts from the run.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.SystraceSetup systrace = 9;</code>
     * @return \Google\Devtools\Testing\V1\SystraceSetup|null
     */
    public function getSystrace()
    {
        return $this->systrace;
    }

    public function hasSystrace()
    {
        return isset($this->systrace);
    }

    public function clearSystrace()
    {
        unset($this->systrace);
    }

    /**
     * Systrace configuration for the run.
     * If set a systrace will be taken, starting on test start and lasting for the
     * configured duration. The systrace file thus obtained is put in the results
     * bucket together with the other artifacts from the run.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.SystraceSetup systrace = 9;</code>
     * @param \Google\Devtools\Testing\V1\SystraceSetup $var
     * @return $this
     */
    public function setSystrace($var)
    {
        GPBUtil::checkMessage($var, \Google\Devtools\Testing\V1\SystraceSetup::class);
        $this->systrace = $var;

        return $this;
    }

    /**
     * Whether to prevent all runtime permissions to be granted at app install
     *
     * Generated from protobuf field <code>bool dont_autogrant_permissions = 23;</code>
     * @return bool
     */
    public function getDontAutograntPermissions()
    {
        return $this->dont_autogrant_permissions;
    }

    /**
     * Whether to prevent all runtime permissions to be granted at app install
     *
     * Generated from protobuf field <code>bool dont_autogrant_permissions = 23;</code>
     * @param bool $var
     * @return $this
     */
    public function setDontAutograntPermissions($var)
    {
        GPBUtil::checkBool($var);
        $this->dont_autogrant_permissions = $var;

        return $this;
    }

}

