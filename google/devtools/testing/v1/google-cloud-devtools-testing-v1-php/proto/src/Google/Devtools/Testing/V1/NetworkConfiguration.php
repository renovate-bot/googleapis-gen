<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/devtools/testing/v1/test_environment_discovery.proto

namespace Google\Devtools\Testing\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>google.devtools.testing.v1.NetworkConfiguration</code>
 */
class NetworkConfiguration extends \Google\Protobuf\Internal\Message
{
    /**
     * The unique opaque id for this network traffic configuration.
     *
     * Generated from protobuf field <code>string id = 1;</code>
     */
    protected $id = '';
    /**
     * The emulation rule applying to the upload traffic.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.TrafficRule up_rule = 2;</code>
     */
    protected $up_rule = null;
    /**
     * The emulation rule applying to the download traffic.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.TrafficRule down_rule = 3;</code>
     */
    protected $down_rule = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *           The unique opaque id for this network traffic configuration.
     *     @type \Google\Devtools\Testing\V1\TrafficRule $up_rule
     *           The emulation rule applying to the upload traffic.
     *     @type \Google\Devtools\Testing\V1\TrafficRule $down_rule
     *           The emulation rule applying to the download traffic.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Devtools\Testing\V1\TestEnvironmentDiscovery::initOnce();
        parent::__construct($data);
    }

    /**
     * The unique opaque id for this network traffic configuration.
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * The unique opaque id for this network traffic configuration.
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * The emulation rule applying to the upload traffic.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.TrafficRule up_rule = 2;</code>
     * @return \Google\Devtools\Testing\V1\TrafficRule|null
     */
    public function getUpRule()
    {
        return $this->up_rule;
    }

    public function hasUpRule()
    {
        return isset($this->up_rule);
    }

    public function clearUpRule()
    {
        unset($this->up_rule);
    }

    /**
     * The emulation rule applying to the upload traffic.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.TrafficRule up_rule = 2;</code>
     * @param \Google\Devtools\Testing\V1\TrafficRule $var
     * @return $this
     */
    public function setUpRule($var)
    {
        GPBUtil::checkMessage($var, \Google\Devtools\Testing\V1\TrafficRule::class);
        $this->up_rule = $var;

        return $this;
    }

    /**
     * The emulation rule applying to the download traffic.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.TrafficRule down_rule = 3;</code>
     * @return \Google\Devtools\Testing\V1\TrafficRule|null
     */
    public function getDownRule()
    {
        return $this->down_rule;
    }

    public function hasDownRule()
    {
        return isset($this->down_rule);
    }

    public function clearDownRule()
    {
        unset($this->down_rule);
    }

    /**
     * The emulation rule applying to the download traffic.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.TrafficRule down_rule = 3;</code>
     * @param \Google\Devtools\Testing\V1\TrafficRule $var
     * @return $this
     */
    public function setDownRule($var)
    {
        GPBUtil::checkMessage($var, \Google\Devtools\Testing\V1\TrafficRule::class);
        $this->down_rule = $var;

        return $this;
    }

}

