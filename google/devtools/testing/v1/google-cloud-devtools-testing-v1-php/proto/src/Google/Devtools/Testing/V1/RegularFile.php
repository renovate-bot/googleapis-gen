<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/devtools/testing/v1/test_execution.proto

namespace Google\Devtools\Testing\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A file or directory to install on the device before the test starts.
 *
 * Generated from protobuf message <code>google.devtools.testing.v1.RegularFile</code>
 */
class RegularFile extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The source file.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.FileReference content = 1;</code>
     */
    protected $content = null;
    /**
     * Required. Where to put the content on the device. Must be an absolute,
     * allowlisted path. If the file exists, it will be replaced.
     * The following device-side directories and any of their subdirectories are
     * allowlisted:
     * <p>${EXTERNAL_STORAGE}, /sdcard, or /storage</p>
     * <p>${ANDROID_DATA}/local/tmp, or /data/local/tmp</p>
     * <p>Specifying a path outside of these directory trees is invalid.
     * <p> The paths /sdcard and /data will be made available and treated as
     * implicit path substitutions. E.g. if /sdcard on a particular device does
     * not map to external storage, the system will replace it with the external
     * storage path prefix for that device and copy the file there.
     * <p> It is strongly advised to use the <a href=
     * "http://developer.android.com/reference/android/os/Environment.html">
     * Environment API</a> in app and test code to access files on the device in a
     * portable way.
     *
     * Generated from protobuf field <code>string device_path = 2;</code>
     */
    protected $device_path = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Devtools\Testing\V1\FileReference $content
     *           Required. The source file.
     *     @type string $device_path
     *           Required. Where to put the content on the device. Must be an absolute,
     *           allowlisted path. If the file exists, it will be replaced.
     *           The following device-side directories and any of their subdirectories are
     *           allowlisted:
     *           <p>${EXTERNAL_STORAGE}, /sdcard, or /storage</p>
     *           <p>${ANDROID_DATA}/local/tmp, or /data/local/tmp</p>
     *           <p>Specifying a path outside of these directory trees is invalid.
     *           <p> The paths /sdcard and /data will be made available and treated as
     *           implicit path substitutions. E.g. if /sdcard on a particular device does
     *           not map to external storage, the system will replace it with the external
     *           storage path prefix for that device and copy the file there.
     *           <p> It is strongly advised to use the <a href=
     *           "http://developer.android.com/reference/android/os/Environment.html">
     *           Environment API</a> in app and test code to access files on the device in a
     *           portable way.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Devtools\Testing\V1\TestExecution::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The source file.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.FileReference content = 1;</code>
     * @return \Google\Devtools\Testing\V1\FileReference|null
     */
    public function getContent()
    {
        return $this->content;
    }

    public function hasContent()
    {
        return isset($this->content);
    }

    public function clearContent()
    {
        unset($this->content);
    }

    /**
     * Required. The source file.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.FileReference content = 1;</code>
     * @param \Google\Devtools\Testing\V1\FileReference $var
     * @return $this
     */
    public function setContent($var)
    {
        GPBUtil::checkMessage($var, \Google\Devtools\Testing\V1\FileReference::class);
        $this->content = $var;

        return $this;
    }

    /**
     * Required. Where to put the content on the device. Must be an absolute,
     * allowlisted path. If the file exists, it will be replaced.
     * The following device-side directories and any of their subdirectories are
     * allowlisted:
     * <p>${EXTERNAL_STORAGE}, /sdcard, or /storage</p>
     * <p>${ANDROID_DATA}/local/tmp, or /data/local/tmp</p>
     * <p>Specifying a path outside of these directory trees is invalid.
     * <p> The paths /sdcard and /data will be made available and treated as
     * implicit path substitutions. E.g. if /sdcard on a particular device does
     * not map to external storage, the system will replace it with the external
     * storage path prefix for that device and copy the file there.
     * <p> It is strongly advised to use the <a href=
     * "http://developer.android.com/reference/android/os/Environment.html">
     * Environment API</a> in app and test code to access files on the device in a
     * portable way.
     *
     * Generated from protobuf field <code>string device_path = 2;</code>
     * @return string
     */
    public function getDevicePath()
    {
        return $this->device_path;
    }

    /**
     * Required. Where to put the content on the device. Must be an absolute,
     * allowlisted path. If the file exists, it will be replaced.
     * The following device-side directories and any of their subdirectories are
     * allowlisted:
     * <p>${EXTERNAL_STORAGE}, /sdcard, or /storage</p>
     * <p>${ANDROID_DATA}/local/tmp, or /data/local/tmp</p>
     * <p>Specifying a path outside of these directory trees is invalid.
     * <p> The paths /sdcard and /data will be made available and treated as
     * implicit path substitutions. E.g. if /sdcard on a particular device does
     * not map to external storage, the system will replace it with the external
     * storage path prefix for that device and copy the file there.
     * <p> It is strongly advised to use the <a href=
     * "http://developer.android.com/reference/android/os/Environment.html">
     * Environment API</a> in app and test code to access files on the device in a
     * portable way.
     *
     * Generated from protobuf field <code>string device_path = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setDevicePath($var)
    {
        GPBUtil::checkString($var, True);
        $this->device_path = $var;

        return $this;
    }

}

