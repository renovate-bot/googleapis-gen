<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/devtools/testing/v1/test_execution.proto

namespace Google\Devtools\Testing\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A test of an iOS application that uses the XCTest framework.
 * Xcode supports the option to "build for testing", which generates an
 * .xctestrun file that contains a test specification (arguments, test methods,
 * etc). This test type accepts a zip file containing the .xctestrun file and
 * the corresponding contents of the Build/Products directory that contains all
 * the binaries needed to run the tests.
 *
 * Generated from protobuf message <code>google.devtools.testing.v1.IosXcTest</code>
 */
class IosXcTest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The .zip containing the .xctestrun file and the contents of the
     * DerivedData/Build/Products directory.
     * The .xctestrun file in this zip is ignored if the xctestrun field is
     * specified.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.FileReference tests_zip = 1;</code>
     */
    protected $tests_zip = null;
    /**
     * An .xctestrun file that will override the .xctestrun file in the
     * tests zip. Because the .xctestrun file contains environment variables along
     * with test methods to run and/or ignore, this can be useful for sharding
     * tests. Default is taken from the tests zip.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.FileReference xctestrun = 2;</code>
     */
    protected $xctestrun = null;
    /**
     * The Xcode version that should be used for the test.
     * Use the TestEnvironmentDiscoveryService to get supported options.
     * Defaults to the latest Xcode version Firebase Test Lab supports.
     *
     * Generated from protobuf field <code>string xcode_version = 3;</code>
     */
    protected $xcode_version = '';
    /**
     * Output only. The bundle id for the application under test.
     *
     * Generated from protobuf field <code>string app_bundle_id = 4;</code>
     */
    protected $app_bundle_id = '';
    /**
     * The option to test special app entitlements. Setting this would re-sign the
     * app having special entitlements with an explicit application-identifier.
     * Currently supports testing aps-environment entitlement.
     *
     * Generated from protobuf field <code>bool test_special_entitlements = 6;</code>
     */
    protected $test_special_entitlements = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Devtools\Testing\V1\FileReference $tests_zip
     *           Required. The .zip containing the .xctestrun file and the contents of the
     *           DerivedData/Build/Products directory.
     *           The .xctestrun file in this zip is ignored if the xctestrun field is
     *           specified.
     *     @type \Google\Devtools\Testing\V1\FileReference $xctestrun
     *           An .xctestrun file that will override the .xctestrun file in the
     *           tests zip. Because the .xctestrun file contains environment variables along
     *           with test methods to run and/or ignore, this can be useful for sharding
     *           tests. Default is taken from the tests zip.
     *     @type string $xcode_version
     *           The Xcode version that should be used for the test.
     *           Use the TestEnvironmentDiscoveryService to get supported options.
     *           Defaults to the latest Xcode version Firebase Test Lab supports.
     *     @type string $app_bundle_id
     *           Output only. The bundle id for the application under test.
     *     @type bool $test_special_entitlements
     *           The option to test special app entitlements. Setting this would re-sign the
     *           app having special entitlements with an explicit application-identifier.
     *           Currently supports testing aps-environment entitlement.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Devtools\Testing\V1\TestExecution::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The .zip containing the .xctestrun file and the contents of the
     * DerivedData/Build/Products directory.
     * The .xctestrun file in this zip is ignored if the xctestrun field is
     * specified.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.FileReference tests_zip = 1;</code>
     * @return \Google\Devtools\Testing\V1\FileReference|null
     */
    public function getTestsZip()
    {
        return $this->tests_zip;
    }

    public function hasTestsZip()
    {
        return isset($this->tests_zip);
    }

    public function clearTestsZip()
    {
        unset($this->tests_zip);
    }

    /**
     * Required. The .zip containing the .xctestrun file and the contents of the
     * DerivedData/Build/Products directory.
     * The .xctestrun file in this zip is ignored if the xctestrun field is
     * specified.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.FileReference tests_zip = 1;</code>
     * @param \Google\Devtools\Testing\V1\FileReference $var
     * @return $this
     */
    public function setTestsZip($var)
    {
        GPBUtil::checkMessage($var, \Google\Devtools\Testing\V1\FileReference::class);
        $this->tests_zip = $var;

        return $this;
    }

    /**
     * An .xctestrun file that will override the .xctestrun file in the
     * tests zip. Because the .xctestrun file contains environment variables along
     * with test methods to run and/or ignore, this can be useful for sharding
     * tests. Default is taken from the tests zip.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.FileReference xctestrun = 2;</code>
     * @return \Google\Devtools\Testing\V1\FileReference|null
     */
    public function getXctestrun()
    {
        return $this->xctestrun;
    }

    public function hasXctestrun()
    {
        return isset($this->xctestrun);
    }

    public function clearXctestrun()
    {
        unset($this->xctestrun);
    }

    /**
     * An .xctestrun file that will override the .xctestrun file in the
     * tests zip. Because the .xctestrun file contains environment variables along
     * with test methods to run and/or ignore, this can be useful for sharding
     * tests. Default is taken from the tests zip.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.FileReference xctestrun = 2;</code>
     * @param \Google\Devtools\Testing\V1\FileReference $var
     * @return $this
     */
    public function setXctestrun($var)
    {
        GPBUtil::checkMessage($var, \Google\Devtools\Testing\V1\FileReference::class);
        $this->xctestrun = $var;

        return $this;
    }

    /**
     * The Xcode version that should be used for the test.
     * Use the TestEnvironmentDiscoveryService to get supported options.
     * Defaults to the latest Xcode version Firebase Test Lab supports.
     *
     * Generated from protobuf field <code>string xcode_version = 3;</code>
     * @return string
     */
    public function getXcodeVersion()
    {
        return $this->xcode_version;
    }

    /**
     * The Xcode version that should be used for the test.
     * Use the TestEnvironmentDiscoveryService to get supported options.
     * Defaults to the latest Xcode version Firebase Test Lab supports.
     *
     * Generated from protobuf field <code>string xcode_version = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setXcodeVersion($var)
    {
        GPBUtil::checkString($var, True);
        $this->xcode_version = $var;

        return $this;
    }

    /**
     * Output only. The bundle id for the application under test.
     *
     * Generated from protobuf field <code>string app_bundle_id = 4;</code>
     * @return string
     */
    public function getAppBundleId()
    {
        return $this->app_bundle_id;
    }

    /**
     * Output only. The bundle id for the application under test.
     *
     * Generated from protobuf field <code>string app_bundle_id = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setAppBundleId($var)
    {
        GPBUtil::checkString($var, True);
        $this->app_bundle_id = $var;

        return $this;
    }

    /**
     * The option to test special app entitlements. Setting this would re-sign the
     * app having special entitlements with an explicit application-identifier.
     * Currently supports testing aps-environment entitlement.
     *
     * Generated from protobuf field <code>bool test_special_entitlements = 6;</code>
     * @return bool
     */
    public function getTestSpecialEntitlements()
    {
        return $this->test_special_entitlements;
    }

    /**
     * The option to test special app entitlements. Setting this would re-sign the
     * app having special entitlements with an explicit application-identifier.
     * Currently supports testing aps-environment entitlement.
     *
     * Generated from protobuf field <code>bool test_special_entitlements = 6;</code>
     * @param bool $var
     * @return $this
     */
    public function setTestSpecialEntitlements($var)
    {
        GPBUtil::checkBool($var);
        $this->test_special_entitlements = $var;

        return $this;
    }

}

