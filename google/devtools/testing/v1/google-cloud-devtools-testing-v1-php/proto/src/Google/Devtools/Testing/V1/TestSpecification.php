<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/devtools/testing/v1/test_execution.proto

namespace Google\Devtools\Testing\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A description of how to run the test.
 *
 * Generated from protobuf message <code>google.devtools.testing.v1.TestSpecification</code>
 */
class TestSpecification extends \Google\Protobuf\Internal\Message
{
    /**
     * Max time a test execution is allowed to run before it is
     * automatically cancelled.
     * The default value is 5 min.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration test_timeout = 1;</code>
     */
    protected $test_timeout = null;
    /**
     * Disables video recording. May reduce test latency.
     *
     * Generated from protobuf field <code>bool disable_video_recording = 10;</code>
     */
    protected $disable_video_recording = false;
    /**
     * Disables performance metrics recording. May reduce test latency.
     *
     * Generated from protobuf field <code>bool disable_performance_metrics = 11;</code>
     */
    protected $disable_performance_metrics = false;
    protected $setup;
    protected $test;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Protobuf\Duration $test_timeout
     *           Max time a test execution is allowed to run before it is
     *           automatically cancelled.
     *           The default value is 5 min.
     *     @type \Google\Devtools\Testing\V1\TestSetup $test_setup
     *           Test setup requirements for Android e.g. files to install, bootstrap
     *           scripts.
     *     @type \Google\Devtools\Testing\V1\IosTestSetup $ios_test_setup
     *           Test setup requirements for iOS.
     *     @type \Google\Devtools\Testing\V1\AndroidInstrumentationTest $android_instrumentation_test
     *           An Android instrumentation test.
     *     @type \Google\Devtools\Testing\V1\AndroidRoboTest $android_robo_test
     *           An Android robo test.
     *     @type \Google\Devtools\Testing\V1\AndroidTestLoop $android_test_loop
     *           An Android Application with a Test Loop.
     *     @type \Google\Devtools\Testing\V1\IosXcTest $ios_xc_test
     *           An iOS XCTest, via an .xctestrun file.
     *     @type \Google\Devtools\Testing\V1\IosTestLoop $ios_test_loop
     *           An iOS application with a test loop.
     *     @type bool $disable_video_recording
     *           Disables video recording. May reduce test latency.
     *     @type bool $disable_performance_metrics
     *           Disables performance metrics recording. May reduce test latency.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Devtools\Testing\V1\TestExecution::initOnce();
        parent::__construct($data);
    }

    /**
     * Max time a test execution is allowed to run before it is
     * automatically cancelled.
     * The default value is 5 min.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration test_timeout = 1;</code>
     * @return \Google\Protobuf\Duration|null
     */
    public function getTestTimeout()
    {
        return $this->test_timeout;
    }

    public function hasTestTimeout()
    {
        return isset($this->test_timeout);
    }

    public function clearTestTimeout()
    {
        unset($this->test_timeout);
    }

    /**
     * Max time a test execution is allowed to run before it is
     * automatically cancelled.
     * The default value is 5 min.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration test_timeout = 1;</code>
     * @param \Google\Protobuf\Duration $var
     * @return $this
     */
    public function setTestTimeout($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Duration::class);
        $this->test_timeout = $var;

        return $this;
    }

    /**
     * Test setup requirements for Android e.g. files to install, bootstrap
     * scripts.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.TestSetup test_setup = 6;</code>
     * @return \Google\Devtools\Testing\V1\TestSetup|null
     */
    public function getTestSetup()
    {
        return $this->readOneof(6);
    }

    public function hasTestSetup()
    {
        return $this->hasOneof(6);
    }

    /**
     * Test setup requirements for Android e.g. files to install, bootstrap
     * scripts.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.TestSetup test_setup = 6;</code>
     * @param \Google\Devtools\Testing\V1\TestSetup $var
     * @return $this
     */
    public function setTestSetup($var)
    {
        GPBUtil::checkMessage($var, \Google\Devtools\Testing\V1\TestSetup::class);
        $this->writeOneof(6, $var);

        return $this;
    }

    /**
     * Test setup requirements for iOS.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.IosTestSetup ios_test_setup = 14;</code>
     * @return \Google\Devtools\Testing\V1\IosTestSetup|null
     */
    public function getIosTestSetup()
    {
        return $this->readOneof(14);
    }

    public function hasIosTestSetup()
    {
        return $this->hasOneof(14);
    }

    /**
     * Test setup requirements for iOS.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.IosTestSetup ios_test_setup = 14;</code>
     * @param \Google\Devtools\Testing\V1\IosTestSetup $var
     * @return $this
     */
    public function setIosTestSetup($var)
    {
        GPBUtil::checkMessage($var, \Google\Devtools\Testing\V1\IosTestSetup::class);
        $this->writeOneof(14, $var);

        return $this;
    }

    /**
     * An Android instrumentation test.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.AndroidInstrumentationTest android_instrumentation_test = 2;</code>
     * @return \Google\Devtools\Testing\V1\AndroidInstrumentationTest|null
     */
    public function getAndroidInstrumentationTest()
    {
        return $this->readOneof(2);
    }

    public function hasAndroidInstrumentationTest()
    {
        return $this->hasOneof(2);
    }

    /**
     * An Android instrumentation test.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.AndroidInstrumentationTest android_instrumentation_test = 2;</code>
     * @param \Google\Devtools\Testing\V1\AndroidInstrumentationTest $var
     * @return $this
     */
    public function setAndroidInstrumentationTest($var)
    {
        GPBUtil::checkMessage($var, \Google\Devtools\Testing\V1\AndroidInstrumentationTest::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * An Android robo test.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.AndroidRoboTest android_robo_test = 3;</code>
     * @return \Google\Devtools\Testing\V1\AndroidRoboTest|null
     */
    public function getAndroidRoboTest()
    {
        return $this->readOneof(3);
    }

    public function hasAndroidRoboTest()
    {
        return $this->hasOneof(3);
    }

    /**
     * An Android robo test.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.AndroidRoboTest android_robo_test = 3;</code>
     * @param \Google\Devtools\Testing\V1\AndroidRoboTest $var
     * @return $this
     */
    public function setAndroidRoboTest($var)
    {
        GPBUtil::checkMessage($var, \Google\Devtools\Testing\V1\AndroidRoboTest::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * An Android Application with a Test Loop.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.AndroidTestLoop android_test_loop = 9;</code>
     * @return \Google\Devtools\Testing\V1\AndroidTestLoop|null
     */
    public function getAndroidTestLoop()
    {
        return $this->readOneof(9);
    }

    public function hasAndroidTestLoop()
    {
        return $this->hasOneof(9);
    }

    /**
     * An Android Application with a Test Loop.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.AndroidTestLoop android_test_loop = 9;</code>
     * @param \Google\Devtools\Testing\V1\AndroidTestLoop $var
     * @return $this
     */
    public function setAndroidTestLoop($var)
    {
        GPBUtil::checkMessage($var, \Google\Devtools\Testing\V1\AndroidTestLoop::class);
        $this->writeOneof(9, $var);

        return $this;
    }

    /**
     * An iOS XCTest, via an .xctestrun file.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.IosXcTest ios_xc_test = 13;</code>
     * @return \Google\Devtools\Testing\V1\IosXcTest|null
     */
    public function getIosXcTest()
    {
        return $this->readOneof(13);
    }

    public function hasIosXcTest()
    {
        return $this->hasOneof(13);
    }

    /**
     * An iOS XCTest, via an .xctestrun file.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.IosXcTest ios_xc_test = 13;</code>
     * @param \Google\Devtools\Testing\V1\IosXcTest $var
     * @return $this
     */
    public function setIosXcTest($var)
    {
        GPBUtil::checkMessage($var, \Google\Devtools\Testing\V1\IosXcTest::class);
        $this->writeOneof(13, $var);

        return $this;
    }

    /**
     * An iOS application with a test loop.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.IosTestLoop ios_test_loop = 15;</code>
     * @return \Google\Devtools\Testing\V1\IosTestLoop|null
     */
    public function getIosTestLoop()
    {
        return $this->readOneof(15);
    }

    public function hasIosTestLoop()
    {
        return $this->hasOneof(15);
    }

    /**
     * An iOS application with a test loop.
     *
     * Generated from protobuf field <code>.google.devtools.testing.v1.IosTestLoop ios_test_loop = 15;</code>
     * @param \Google\Devtools\Testing\V1\IosTestLoop $var
     * @return $this
     */
    public function setIosTestLoop($var)
    {
        GPBUtil::checkMessage($var, \Google\Devtools\Testing\V1\IosTestLoop::class);
        $this->writeOneof(15, $var);

        return $this;
    }

    /**
     * Disables video recording. May reduce test latency.
     *
     * Generated from protobuf field <code>bool disable_video_recording = 10;</code>
     * @return bool
     */
    public function getDisableVideoRecording()
    {
        return $this->disable_video_recording;
    }

    /**
     * Disables video recording. May reduce test latency.
     *
     * Generated from protobuf field <code>bool disable_video_recording = 10;</code>
     * @param bool $var
     * @return $this
     */
    public function setDisableVideoRecording($var)
    {
        GPBUtil::checkBool($var);
        $this->disable_video_recording = $var;

        return $this;
    }

    /**
     * Disables performance metrics recording. May reduce test latency.
     *
     * Generated from protobuf field <code>bool disable_performance_metrics = 11;</code>
     * @return bool
     */
    public function getDisablePerformanceMetrics()
    {
        return $this->disable_performance_metrics;
    }

    /**
     * Disables performance metrics recording. May reduce test latency.
     *
     * Generated from protobuf field <code>bool disable_performance_metrics = 11;</code>
     * @param bool $var
     * @return $this
     */
    public function setDisablePerformanceMetrics($var)
    {
        GPBUtil::checkBool($var);
        $this->disable_performance_metrics = $var;

        return $this;
    }

    /**
     * @return string
     */
    public function getSetup()
    {
        return $this->whichOneof("setup");
    }

    /**
     * @return string
     */
    public function getTest()
    {
        return $this->whichOneof("test");
    }

}

