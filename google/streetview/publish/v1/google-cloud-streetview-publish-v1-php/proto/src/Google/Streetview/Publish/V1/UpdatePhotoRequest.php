<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/streetview/publish/v1/rpcmessages.proto

namespace Google\Streetview\Publish\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Request to update the metadata of a
 * [Photo][google.streetview.publish.v1.Photo]. Updating the pixels of a photo
 * is not supported.
 *
 * Generated from protobuf message <code>google.streetview.publish.v1.UpdatePhotoRequest</code>
 */
class UpdatePhotoRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. [Photo][google.streetview.publish.v1.Photo] object containing the
     * new metadata.
     *
     * Generated from protobuf field <code>.google.streetview.publish.v1.Photo photo = 1;</code>
     */
    protected $photo = null;
    /**
     * Mask that identifies fields on the photo metadata to update.
     * If not present, the old [Photo][google.streetview.publish.v1.Photo]
     * metadata is entirely replaced with the
     * new [Photo][google.streetview.publish.v1.Photo] metadata in this request.
     * The update fails if invalid fields are specified. Multiple fields can be
     * specified in a comma-delimited list.
     * The following fields are valid:
     * * `pose.heading`
     * * `pose.latLngPair`
     * * `pose.pitch`
     * * `pose.roll`
     * * `pose.level`
     * * `pose.altitude`
     * * `connections`
     * * `places`
     * <aside class="note"><b>Note:</b>  When
     * [updateMask][google.streetview.publish.v1.UpdatePhotoRequest.update_mask]
     * contains repeated fields, the entire set of repeated values get replaced
     * with the new contents. For example, if
     * [updateMask][google.streetview.publish.v1.UpdatePhotoRequest.update_mask]
     * contains `connections` and `UpdatePhotoRequest.photo.connections` is empty,
     * all connections are removed.</aside>
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask update_mask = 2;</code>
     */
    protected $update_mask = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Streetview\Publish\V1\Photo $photo
     *           Required. [Photo][google.streetview.publish.v1.Photo] object containing the
     *           new metadata.
     *     @type \Google\Protobuf\FieldMask $update_mask
     *           Mask that identifies fields on the photo metadata to update.
     *           If not present, the old [Photo][google.streetview.publish.v1.Photo]
     *           metadata is entirely replaced with the
     *           new [Photo][google.streetview.publish.v1.Photo] metadata in this request.
     *           The update fails if invalid fields are specified. Multiple fields can be
     *           specified in a comma-delimited list.
     *           The following fields are valid:
     *           * `pose.heading`
     *           * `pose.latLngPair`
     *           * `pose.pitch`
     *           * `pose.roll`
     *           * `pose.level`
     *           * `pose.altitude`
     *           * `connections`
     *           * `places`
     *           <aside class="note"><b>Note:</b>  When
     *           [updateMask][google.streetview.publish.v1.UpdatePhotoRequest.update_mask]
     *           contains repeated fields, the entire set of repeated values get replaced
     *           with the new contents. For example, if
     *           [updateMask][google.streetview.publish.v1.UpdatePhotoRequest.update_mask]
     *           contains `connections` and `UpdatePhotoRequest.photo.connections` is empty,
     *           all connections are removed.</aside>
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Streetview\Publish\V1\Rpcmessages::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. [Photo][google.streetview.publish.v1.Photo] object containing the
     * new metadata.
     *
     * Generated from protobuf field <code>.google.streetview.publish.v1.Photo photo = 1;</code>
     * @return \Google\Streetview\Publish\V1\Photo|null
     */
    public function getPhoto()
    {
        return $this->photo;
    }

    public function hasPhoto()
    {
        return isset($this->photo);
    }

    public function clearPhoto()
    {
        unset($this->photo);
    }

    /**
     * Required. [Photo][google.streetview.publish.v1.Photo] object containing the
     * new metadata.
     *
     * Generated from protobuf field <code>.google.streetview.publish.v1.Photo photo = 1;</code>
     * @param \Google\Streetview\Publish\V1\Photo $var
     * @return $this
     */
    public function setPhoto($var)
    {
        GPBUtil::checkMessage($var, \Google\Streetview\Publish\V1\Photo::class);
        $this->photo = $var;

        return $this;
    }

    /**
     * Mask that identifies fields on the photo metadata to update.
     * If not present, the old [Photo][google.streetview.publish.v1.Photo]
     * metadata is entirely replaced with the
     * new [Photo][google.streetview.publish.v1.Photo] metadata in this request.
     * The update fails if invalid fields are specified. Multiple fields can be
     * specified in a comma-delimited list.
     * The following fields are valid:
     * * `pose.heading`
     * * `pose.latLngPair`
     * * `pose.pitch`
     * * `pose.roll`
     * * `pose.level`
     * * `pose.altitude`
     * * `connections`
     * * `places`
     * <aside class="note"><b>Note:</b>  When
     * [updateMask][google.streetview.publish.v1.UpdatePhotoRequest.update_mask]
     * contains repeated fields, the entire set of repeated values get replaced
     * with the new contents. For example, if
     * [updateMask][google.streetview.publish.v1.UpdatePhotoRequest.update_mask]
     * contains `connections` and `UpdatePhotoRequest.photo.connections` is empty,
     * all connections are removed.</aside>
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask update_mask = 2;</code>
     * @return \Google\Protobuf\FieldMask|null
     */
    public function getUpdateMask()
    {
        return $this->update_mask;
    }

    public function hasUpdateMask()
    {
        return isset($this->update_mask);
    }

    public function clearUpdateMask()
    {
        unset($this->update_mask);
    }

    /**
     * Mask that identifies fields on the photo metadata to update.
     * If not present, the old [Photo][google.streetview.publish.v1.Photo]
     * metadata is entirely replaced with the
     * new [Photo][google.streetview.publish.v1.Photo] metadata in this request.
     * The update fails if invalid fields are specified. Multiple fields can be
     * specified in a comma-delimited list.
     * The following fields are valid:
     * * `pose.heading`
     * * `pose.latLngPair`
     * * `pose.pitch`
     * * `pose.roll`
     * * `pose.level`
     * * `pose.altitude`
     * * `connections`
     * * `places`
     * <aside class="note"><b>Note:</b>  When
     * [updateMask][google.streetview.publish.v1.UpdatePhotoRequest.update_mask]
     * contains repeated fields, the entire set of repeated values get replaced
     * with the new contents. For example, if
     * [updateMask][google.streetview.publish.v1.UpdatePhotoRequest.update_mask]
     * contains `connections` and `UpdatePhotoRequest.photo.connections` is empty,
     * all connections are removed.</aside>
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask update_mask = 2;</code>
     * @param \Google\Protobuf\FieldMask $var
     * @return $this
     */
    public function setUpdateMask($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\FieldMask::class);
        $this->update_mask = $var;

        return $this;
    }

}

