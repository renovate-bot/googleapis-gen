<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/streetview/publish/v1/resources.proto

namespace Google\Streetview\Publish\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Place metadata for an entity.
 *
 * Generated from protobuf message <code>google.streetview.publish.v1.Place</code>
 */
class Place extends \Google\Protobuf\Internal\Message
{
    /**
     * Place identifier, as described in
     * https://developers.google.com/places/place-id.
     *
     * Generated from protobuf field <code>string place_id = 1;</code>
     */
    protected $place_id = '';
    /**
     * Output only. The name of the place, localized to the language_code.
     *
     * Generated from protobuf field <code>string name = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $name = '';
    /**
     * Output only. The language_code that the name is localized with. This should
     * be the language_code specified in the request, but may be a fallback.
     *
     * Generated from protobuf field <code>string language_code = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $language_code = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $place_id
     *           Place identifier, as described in
     *           https://developers.google.com/places/place-id.
     *     @type string $name
     *           Output only. The name of the place, localized to the language_code.
     *     @type string $language_code
     *           Output only. The language_code that the name is localized with. This should
     *           be the language_code specified in the request, but may be a fallback.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Streetview\Publish\V1\Resources::initOnce();
        parent::__construct($data);
    }

    /**
     * Place identifier, as described in
     * https://developers.google.com/places/place-id.
     *
     * Generated from protobuf field <code>string place_id = 1;</code>
     * @return string
     */
    public function getPlaceId()
    {
        return $this->place_id;
    }

    /**
     * Place identifier, as described in
     * https://developers.google.com/places/place-id.
     *
     * Generated from protobuf field <code>string place_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setPlaceId($var)
    {
        GPBUtil::checkString($var, True);
        $this->place_id = $var;

        return $this;
    }

    /**
     * Output only. The name of the place, localized to the language_code.
     *
     * Generated from protobuf field <code>string name = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Output only. The name of the place, localized to the language_code.
     *
     * Generated from protobuf field <code>string name = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Output only. The language_code that the name is localized with. This should
     * be the language_code specified in the request, but may be a fallback.
     *
     * Generated from protobuf field <code>string language_code = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return string
     */
    public function getLanguageCode()
    {
        return $this->language_code;
    }

    /**
     * Output only. The language_code that the name is localized with. This should
     * be the language_code specified in the request, but may be a fallback.
     *
     * Generated from protobuf field <code>string language_code = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param string $var
     * @return $this
     */
    public function setLanguageCode($var)
    {
        GPBUtil::checkString($var, True);
        $this->language_code = $var;

        return $this;
    }

}

