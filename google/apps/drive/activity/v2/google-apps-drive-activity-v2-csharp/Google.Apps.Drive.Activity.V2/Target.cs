// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/apps/drive/activity/v2/target.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Apps.Drive.Activity.V2 {

  /// <summary>Holder for reflection information generated from google/apps/drive/activity/v2/target.proto</summary>
  public static partial class TargetReflection {

    #region Descriptor
    /// <summary>File descriptor for google/apps/drive/activity/v2/target.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TargetReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cipnb29nbGUvYXBwcy9kcml2ZS9hY3Rpdml0eS92Mi90YXJnZXQucHJvdG8S",
            "HWdvb2dsZS5hcHBzLmRyaXZlLmFjdGl2aXR5LnYyGilnb29nbGUvYXBwcy9k",
            "cml2ZS9hY3Rpdml0eS92Mi9hY3Rvci5wcm90bxoqZ29vZ2xlL2FwcHMvZHJp",
            "dmUvYWN0aXZpdHkvdjIvY29tbW9uLnByb3RvIo8CCgZUYXJnZXQSPgoKZHJp",
            "dmVfaXRlbRgBIAEoCzIoLmdvb2dsZS5hcHBzLmRyaXZlLmFjdGl2aXR5LnYy",
            "LkRyaXZlSXRlbUgAEjUKBWRyaXZlGAUgASgLMiQuZ29vZ2xlLmFwcHMuZHJp",
            "dmUuYWN0aXZpdHkudjIuRHJpdmVIABJCCgxmaWxlX2NvbW1lbnQYAyABKAsy",
            "Ki5nb29nbGUuYXBwcy5kcml2ZS5hY3Rpdml0eS52Mi5GaWxlQ29tbWVudEgA",
            "EkAKCnRlYW1fZHJpdmUYAiABKAsyKC5nb29nbGUuYXBwcy5kcml2ZS5hY3Rp",
            "dml0eS52Mi5UZWFtRHJpdmVCAhgBQggKBm9iamVjdCLvAQoPVGFyZ2V0UmVm",
            "ZXJlbmNlEkcKCmRyaXZlX2l0ZW0YASABKAsyMS5nb29nbGUuYXBwcy5kcml2",
            "ZS5hY3Rpdml0eS52Mi5Ecml2ZUl0ZW1SZWZlcmVuY2VIABI+CgVkcml2ZRgD",
            "IAEoCzItLmdvb2dsZS5hcHBzLmRyaXZlLmFjdGl2aXR5LnYyLkRyaXZlUmVm",
            "ZXJlbmNlSAASSQoKdGVhbV9kcml2ZRgCIAEoCzIxLmdvb2dsZS5hcHBzLmRy",
            "aXZlLmFjdGl2aXR5LnYyLlRlYW1Ecml2ZVJlZmVyZW5jZUICGAFCCAoGb2Jq",
            "ZWN0IpwBCgtGaWxlQ29tbWVudBIZChFsZWdhY3lfY29tbWVudF9pZBgBIAEo",
            "CRIcChRsZWdhY3lfZGlzY3Vzc2lvbl9pZBgCIAEoCRIaChJsaW5rX3RvX2Rp",
            "c2N1c3Npb24YAyABKAkSOAoGcGFyZW50GAQgASgLMiguZ29vZ2xlLmFwcHMu",
            "ZHJpdmUuYWN0aXZpdHkudjIuRHJpdmVJdGVtIpwGCglEcml2ZUl0ZW0SDAoE",
            "bmFtZRgBIAEoCRINCgV0aXRsZRgCIAEoCRI/CgRmaWxlGAMgASgLMi0uZ29v",
            "Z2xlLmFwcHMuZHJpdmUuYWN0aXZpdHkudjIuRHJpdmVJdGVtLkZpbGVCAhgB",
            "EkMKBmZvbGRlchgEIAEoCzIvLmdvb2dsZS5hcHBzLmRyaXZlLmFjdGl2aXR5",
            "LnYyLkRyaXZlSXRlbS5Gb2xkZXJCAhgBEkgKCmRyaXZlX2ZpbGUYCCABKAsy",
            "Mi5nb29nbGUuYXBwcy5kcml2ZS5hY3Rpdml0eS52Mi5Ecml2ZUl0ZW0uRHJp",
            "dmVGaWxlSAASTAoMZHJpdmVfZm9sZGVyGAkgASgLMjQuZ29vZ2xlLmFwcHMu",
            "ZHJpdmUuYWN0aXZpdHkudjIuRHJpdmVJdGVtLkRyaXZlRm9sZGVySAASEQoJ",
            "bWltZV90eXBlGAYgASgJEjMKBW93bmVyGAcgASgLMiQuZ29vZ2xlLmFwcHMu",
            "ZHJpdmUuYWN0aXZpdHkudjIuT3duZXIaCgoERmlsZToCGAEarwEKBkZvbGRl",
            "chJCCgR0eXBlGAYgASgOMjQuZ29vZ2xlLmFwcHMuZHJpdmUuYWN0aXZpdHku",
            "djIuRHJpdmVJdGVtLkZvbGRlci5UeXBlIl0KBFR5cGUSFAoQVFlQRV9VTlNQ",
            "RUNJRklFRBAAEhEKDU1ZX0RSSVZFX1JPT1QQARITCg9URUFNX0RSSVZFX1JP",
            "T1QQAhITCg9TVEFOREFSRF9GT0xERVIQAxoCGAE6AhgBGgsKCURyaXZlRmls",
            "ZRqzAQoLRHJpdmVGb2xkZXISRwoEdHlwZRgGIAEoDjI5Lmdvb2dsZS5hcHBz",
            "LmRyaXZlLmFjdGl2aXR5LnYyLkRyaXZlSXRlbS5Ecml2ZUZvbGRlci5UeXBl",
            "IlsKBFR5cGUSFAoQVFlQRV9VTlNQRUNJRklFRBAAEhEKDU1ZX0RSSVZFX1JP",
            "T1QQARIVChFTSEFSRURfRFJJVkVfUk9PVBACEhMKD1NUQU5EQVJEX0ZPTERF",
            "UhADQgsKCWl0ZW1fdHlwZSKHAgoFT3duZXISMwoEdXNlchgBIAEoCzIjLmdv",
            "b2dsZS5hcHBzLmRyaXZlLmFjdGl2aXR5LnYyLlVzZXJIABI+CgVkcml2ZRgE",
            "IAEoCzItLmdvb2dsZS5hcHBzLmRyaXZlLmFjdGl2aXR5LnYyLkRyaXZlUmVm",
            "ZXJlbmNlSAASSQoKdGVhbV9kcml2ZRgCIAEoCzIxLmdvb2dsZS5hcHBzLmRy",
            "aXZlLmFjdGl2aXR5LnYyLlRlYW1Ecml2ZVJlZmVyZW5jZUICGAESNQoGZG9t",
            "YWluGAMgASgLMiUuZ29vZ2xlLmFwcHMuZHJpdmUuYWN0aXZpdHkudjIuRG9t",
            "YWluQgcKBW93bmVyImQKCVRlYW1Ecml2ZRIMCgRuYW1lGAEgASgJEg0KBXRp",
            "dGxlGAIgASgJEjYKBHJvb3QYAyABKAsyKC5nb29nbGUuYXBwcy5kcml2ZS5h",
            "Y3Rpdml0eS52Mi5Ecml2ZUl0ZW06AhgBIlwKBURyaXZlEgwKBG5hbWUYASAB",
            "KAkSDQoFdGl0bGUYAiABKAkSNgoEcm9vdBgDIAEoCzIoLmdvb2dsZS5hcHBz",
            "LmRyaXZlLmFjdGl2aXR5LnYyLkRyaXZlSXRlbSLcAgoSRHJpdmVJdGVtUmVm",
            "ZXJlbmNlEgwKBG5hbWUYASABKAkSDQoFdGl0bGUYAiABKAkSPwoEZmlsZRgD",
            "IAEoCzItLmdvb2dsZS5hcHBzLmRyaXZlLmFjdGl2aXR5LnYyLkRyaXZlSXRl",
            "bS5GaWxlQgIYARJDCgZmb2xkZXIYBCABKAsyLy5nb29nbGUuYXBwcy5kcml2",
            "ZS5hY3Rpdml0eS52Mi5Ecml2ZUl0ZW0uRm9sZGVyQgIYARJICgpkcml2ZV9m",
            "aWxlGAggASgLMjIuZ29vZ2xlLmFwcHMuZHJpdmUuYWN0aXZpdHkudjIuRHJp",
            "dmVJdGVtLkRyaXZlRmlsZUgAEkwKDGRyaXZlX2ZvbGRlchgJIAEoCzI0Lmdv",
            "b2dsZS5hcHBzLmRyaXZlLmFjdGl2aXR5LnYyLkRyaXZlSXRlbS5Ecml2ZUZv",
            "bGRlckgAQgsKCWl0ZW1fdHlwZSI1ChJUZWFtRHJpdmVSZWZlcmVuY2USDAoE",
            "bmFtZRgBIAEoCRINCgV0aXRsZRgCIAEoCToCGAEiLQoORHJpdmVSZWZlcmVu",
            "Y2USDAoEbmFtZRgBIAEoCRINCgV0aXRsZRgCIAEoCULAAQohY29tLmdvb2ds",
            "ZS5hcHBzLmRyaXZlLmFjdGl2aXR5LnYyQgtUYXJnZXRQcm90b1ABWkVnb29n",
            "bGUuZ29sYW5nLm9yZy9nZW5wcm90by9nb29nbGVhcGlzL2FwcHMvZHJpdmUv",
            "YWN0aXZpdHkvdjI7YWN0aXZpdHmiAgRHQURBqgIdR29vZ2xlLkFwcHMuRHJp",
            "dmUuQWN0aXZpdHkuVjLKAh1Hb29nbGVcQXBwc1xEcml2ZVxBY3Rpdml0eVxW",
            "MmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Apps.Drive.Activity.V2.ActorReflection.Descriptor, global::Google.Apps.Drive.Activity.V2.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Apps.Drive.Activity.V2.Target), global::Google.Apps.Drive.Activity.V2.Target.Parser, new[]{ "DriveItem", "Drive", "FileComment", "TeamDrive" }, new[]{ "Object" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Apps.Drive.Activity.V2.TargetReference), global::Google.Apps.Drive.Activity.V2.TargetReference.Parser, new[]{ "DriveItem", "Drive", "TeamDrive" }, new[]{ "Object" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Apps.Drive.Activity.V2.FileComment), global::Google.Apps.Drive.Activity.V2.FileComment.Parser, new[]{ "LegacyCommentId", "LegacyDiscussionId", "LinkToDiscussion", "Parent" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Apps.Drive.Activity.V2.DriveItem), global::Google.Apps.Drive.Activity.V2.DriveItem.Parser, new[]{ "Name", "Title", "File", "Folder", "DriveFile", "DriveFolder", "MimeType", "Owner" }, new[]{ "ItemType" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Apps.Drive.Activity.V2.DriveItem.Types.File), global::Google.Apps.Drive.Activity.V2.DriveItem.Types.File.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Apps.Drive.Activity.V2.DriveItem.Types.Folder), global::Google.Apps.Drive.Activity.V2.DriveItem.Types.Folder.Parser, new[]{ "Type" }, null, new[]{ typeof(global::Google.Apps.Drive.Activity.V2.DriveItem.Types.Folder.Types.Type) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Apps.Drive.Activity.V2.DriveItem.Types.DriveFile), global::Google.Apps.Drive.Activity.V2.DriveItem.Types.DriveFile.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Apps.Drive.Activity.V2.DriveItem.Types.DriveFolder), global::Google.Apps.Drive.Activity.V2.DriveItem.Types.DriveFolder.Parser, new[]{ "Type" }, null, new[]{ typeof(global::Google.Apps.Drive.Activity.V2.DriveItem.Types.DriveFolder.Types.Type) }, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Apps.Drive.Activity.V2.Owner), global::Google.Apps.Drive.Activity.V2.Owner.Parser, new[]{ "User", "Drive", "TeamDrive", "Domain" }, new[]{ "Owner" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Apps.Drive.Activity.V2.TeamDrive), global::Google.Apps.Drive.Activity.V2.TeamDrive.Parser, new[]{ "Name", "Title", "Root" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Apps.Drive.Activity.V2.Drive), global::Google.Apps.Drive.Activity.V2.Drive.Parser, new[]{ "Name", "Title", "Root" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Apps.Drive.Activity.V2.DriveItemReference), global::Google.Apps.Drive.Activity.V2.DriveItemReference.Parser, new[]{ "Name", "Title", "File", "Folder", "DriveFile", "DriveFolder" }, new[]{ "ItemType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Apps.Drive.Activity.V2.TeamDriveReference), global::Google.Apps.Drive.Activity.V2.TeamDriveReference.Parser, new[]{ "Name", "Title" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Apps.Drive.Activity.V2.DriveReference), global::Google.Apps.Drive.Activity.V2.DriveReference.Parser, new[]{ "Name", "Title" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Information about the target of activity.
  /// </summary>
  public sealed partial class Target : pb::IMessage<Target>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Target> _parser = new pb::MessageParser<Target>(() => new Target());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Target> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Apps.Drive.Activity.V2.TargetReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Target() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Target(Target other) : this() {
      teamDrive_ = other.teamDrive_ != null ? other.teamDrive_.Clone() : null;
      switch (other.ObjectCase) {
        case ObjectOneofCase.DriveItem:
          DriveItem = other.DriveItem.Clone();
          break;
        case ObjectOneofCase.Drive:
          Drive = other.Drive.Clone();
          break;
        case ObjectOneofCase.FileComment:
          FileComment = other.FileComment.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Target Clone() {
      return new Target(this);
    }

    /// <summary>Field number for the "drive_item" field.</summary>
    public const int DriveItemFieldNumber = 1;
    /// <summary>
    /// The target is a Drive item.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Apps.Drive.Activity.V2.DriveItem DriveItem {
      get { return objectCase_ == ObjectOneofCase.DriveItem ? (global::Google.Apps.Drive.Activity.V2.DriveItem) object_ : null; }
      set {
        object_ = value;
        objectCase_ = value == null ? ObjectOneofCase.None : ObjectOneofCase.DriveItem;
      }
    }

    /// <summary>Field number for the "drive" field.</summary>
    public const int DriveFieldNumber = 5;
    /// <summary>
    /// The target is a shared drive.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Apps.Drive.Activity.V2.Drive Drive {
      get { return objectCase_ == ObjectOneofCase.Drive ? (global::Google.Apps.Drive.Activity.V2.Drive) object_ : null; }
      set {
        object_ = value;
        objectCase_ = value == null ? ObjectOneofCase.None : ObjectOneofCase.Drive;
      }
    }

    /// <summary>Field number for the "file_comment" field.</summary>
    public const int FileCommentFieldNumber = 3;
    /// <summary>
    /// The target is a comment on a Drive file.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Apps.Drive.Activity.V2.FileComment FileComment {
      get { return objectCase_ == ObjectOneofCase.FileComment ? (global::Google.Apps.Drive.Activity.V2.FileComment) object_ : null; }
      set {
        object_ = value;
        objectCase_ = value == null ? ObjectOneofCase.None : ObjectOneofCase.FileComment;
      }
    }

    /// <summary>Field number for the "team_drive" field.</summary>
    public const int TeamDriveFieldNumber = 2;
    private global::Google.Apps.Drive.Activity.V2.TeamDrive teamDrive_;
    /// <summary>
    /// This field is deprecated; please use the `drive` field instead.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Apps.Drive.Activity.V2.TeamDrive TeamDrive {
      get { return teamDrive_; }
      set {
        teamDrive_ = value;
      }
    }

    private object object_;
    /// <summary>Enum of possible cases for the "object" oneof.</summary>
    public enum ObjectOneofCase {
      None = 0,
      DriveItem = 1,
      Drive = 5,
      FileComment = 3,
    }
    private ObjectOneofCase objectCase_ = ObjectOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectOneofCase ObjectCase {
      get { return objectCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearObject() {
      objectCase_ = ObjectOneofCase.None;
      object_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Target);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Target other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DriveItem, other.DriveItem)) return false;
      if (!object.Equals(Drive, other.Drive)) return false;
      if (!object.Equals(FileComment, other.FileComment)) return false;
      if (!object.Equals(TeamDrive, other.TeamDrive)) return false;
      if (ObjectCase != other.ObjectCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (objectCase_ == ObjectOneofCase.DriveItem) hash ^= DriveItem.GetHashCode();
      if (objectCase_ == ObjectOneofCase.Drive) hash ^= Drive.GetHashCode();
      if (objectCase_ == ObjectOneofCase.FileComment) hash ^= FileComment.GetHashCode();
      if (teamDrive_ != null) hash ^= TeamDrive.GetHashCode();
      hash ^= (int) objectCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (objectCase_ == ObjectOneofCase.DriveItem) {
        output.WriteRawTag(10);
        output.WriteMessage(DriveItem);
      }
      if (teamDrive_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TeamDrive);
      }
      if (objectCase_ == ObjectOneofCase.FileComment) {
        output.WriteRawTag(26);
        output.WriteMessage(FileComment);
      }
      if (objectCase_ == ObjectOneofCase.Drive) {
        output.WriteRawTag(42);
        output.WriteMessage(Drive);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (objectCase_ == ObjectOneofCase.DriveItem) {
        output.WriteRawTag(10);
        output.WriteMessage(DriveItem);
      }
      if (teamDrive_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TeamDrive);
      }
      if (objectCase_ == ObjectOneofCase.FileComment) {
        output.WriteRawTag(26);
        output.WriteMessage(FileComment);
      }
      if (objectCase_ == ObjectOneofCase.Drive) {
        output.WriteRawTag(42);
        output.WriteMessage(Drive);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (objectCase_ == ObjectOneofCase.DriveItem) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DriveItem);
      }
      if (objectCase_ == ObjectOneofCase.Drive) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Drive);
      }
      if (objectCase_ == ObjectOneofCase.FileComment) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FileComment);
      }
      if (teamDrive_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TeamDrive);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Target other) {
      if (other == null) {
        return;
      }
      if (other.teamDrive_ != null) {
        if (teamDrive_ == null) {
          TeamDrive = new global::Google.Apps.Drive.Activity.V2.TeamDrive();
        }
        TeamDrive.MergeFrom(other.TeamDrive);
      }
      switch (other.ObjectCase) {
        case ObjectOneofCase.DriveItem:
          if (DriveItem == null) {
            DriveItem = new global::Google.Apps.Drive.Activity.V2.DriveItem();
          }
          DriveItem.MergeFrom(other.DriveItem);
          break;
        case ObjectOneofCase.Drive:
          if (Drive == null) {
            Drive = new global::Google.Apps.Drive.Activity.V2.Drive();
          }
          Drive.MergeFrom(other.Drive);
          break;
        case ObjectOneofCase.FileComment:
          if (FileComment == null) {
            FileComment = new global::Google.Apps.Drive.Activity.V2.FileComment();
          }
          FileComment.MergeFrom(other.FileComment);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Google.Apps.Drive.Activity.V2.DriveItem subBuilder = new global::Google.Apps.Drive.Activity.V2.DriveItem();
            if (objectCase_ == ObjectOneofCase.DriveItem) {
              subBuilder.MergeFrom(DriveItem);
            }
            input.ReadMessage(subBuilder);
            DriveItem = subBuilder;
            break;
          }
          case 18: {
            if (teamDrive_ == null) {
              TeamDrive = new global::Google.Apps.Drive.Activity.V2.TeamDrive();
            }
            input.ReadMessage(TeamDrive);
            break;
          }
          case 26: {
            global::Google.Apps.Drive.Activity.V2.FileComment subBuilder = new global::Google.Apps.Drive.Activity.V2.FileComment();
            if (objectCase_ == ObjectOneofCase.FileComment) {
              subBuilder.MergeFrom(FileComment);
            }
            input.ReadMessage(subBuilder);
            FileComment = subBuilder;
            break;
          }
          case 42: {
            global::Google.Apps.Drive.Activity.V2.Drive subBuilder = new global::Google.Apps.Drive.Activity.V2.Drive();
            if (objectCase_ == ObjectOneofCase.Drive) {
              subBuilder.MergeFrom(Drive);
            }
            input.ReadMessage(subBuilder);
            Drive = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Google.Apps.Drive.Activity.V2.DriveItem subBuilder = new global::Google.Apps.Drive.Activity.V2.DriveItem();
            if (objectCase_ == ObjectOneofCase.DriveItem) {
              subBuilder.MergeFrom(DriveItem);
            }
            input.ReadMessage(subBuilder);
            DriveItem = subBuilder;
            break;
          }
          case 18: {
            if (teamDrive_ == null) {
              TeamDrive = new global::Google.Apps.Drive.Activity.V2.TeamDrive();
            }
            input.ReadMessage(TeamDrive);
            break;
          }
          case 26: {
            global::Google.Apps.Drive.Activity.V2.FileComment subBuilder = new global::Google.Apps.Drive.Activity.V2.FileComment();
            if (objectCase_ == ObjectOneofCase.FileComment) {
              subBuilder.MergeFrom(FileComment);
            }
            input.ReadMessage(subBuilder);
            FileComment = subBuilder;
            break;
          }
          case 42: {
            global::Google.Apps.Drive.Activity.V2.Drive subBuilder = new global::Google.Apps.Drive.Activity.V2.Drive();
            if (objectCase_ == ObjectOneofCase.Drive) {
              subBuilder.MergeFrom(Drive);
            }
            input.ReadMessage(subBuilder);
            Drive = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A lightweight reference to the target of activity.
  /// </summary>
  public sealed partial class TargetReference : pb::IMessage<TargetReference>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TargetReference> _parser = new pb::MessageParser<TargetReference>(() => new TargetReference());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TargetReference> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Apps.Drive.Activity.V2.TargetReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetReference() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetReference(TargetReference other) : this() {
      teamDrive_ = other.teamDrive_ != null ? other.teamDrive_.Clone() : null;
      switch (other.ObjectCase) {
        case ObjectOneofCase.DriveItem:
          DriveItem = other.DriveItem.Clone();
          break;
        case ObjectOneofCase.Drive:
          Drive = other.Drive.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetReference Clone() {
      return new TargetReference(this);
    }

    /// <summary>Field number for the "drive_item" field.</summary>
    public const int DriveItemFieldNumber = 1;
    /// <summary>
    /// The target is a Drive item.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Apps.Drive.Activity.V2.DriveItemReference DriveItem {
      get { return objectCase_ == ObjectOneofCase.DriveItem ? (global::Google.Apps.Drive.Activity.V2.DriveItemReference) object_ : null; }
      set {
        object_ = value;
        objectCase_ = value == null ? ObjectOneofCase.None : ObjectOneofCase.DriveItem;
      }
    }

    /// <summary>Field number for the "drive" field.</summary>
    public const int DriveFieldNumber = 3;
    /// <summary>
    /// The target is a shared drive.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Apps.Drive.Activity.V2.DriveReference Drive {
      get { return objectCase_ == ObjectOneofCase.Drive ? (global::Google.Apps.Drive.Activity.V2.DriveReference) object_ : null; }
      set {
        object_ = value;
        objectCase_ = value == null ? ObjectOneofCase.None : ObjectOneofCase.Drive;
      }
    }

    /// <summary>Field number for the "team_drive" field.</summary>
    public const int TeamDriveFieldNumber = 2;
    private global::Google.Apps.Drive.Activity.V2.TeamDriveReference teamDrive_;
    /// <summary>
    /// This field is deprecated; please use the `drive` field instead.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Apps.Drive.Activity.V2.TeamDriveReference TeamDrive {
      get { return teamDrive_; }
      set {
        teamDrive_ = value;
      }
    }

    private object object_;
    /// <summary>Enum of possible cases for the "object" oneof.</summary>
    public enum ObjectOneofCase {
      None = 0,
      DriveItem = 1,
      Drive = 3,
    }
    private ObjectOneofCase objectCase_ = ObjectOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectOneofCase ObjectCase {
      get { return objectCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearObject() {
      objectCase_ = ObjectOneofCase.None;
      object_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TargetReference);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TargetReference other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DriveItem, other.DriveItem)) return false;
      if (!object.Equals(Drive, other.Drive)) return false;
      if (!object.Equals(TeamDrive, other.TeamDrive)) return false;
      if (ObjectCase != other.ObjectCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (objectCase_ == ObjectOneofCase.DriveItem) hash ^= DriveItem.GetHashCode();
      if (objectCase_ == ObjectOneofCase.Drive) hash ^= Drive.GetHashCode();
      if (teamDrive_ != null) hash ^= TeamDrive.GetHashCode();
      hash ^= (int) objectCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (objectCase_ == ObjectOneofCase.DriveItem) {
        output.WriteRawTag(10);
        output.WriteMessage(DriveItem);
      }
      if (teamDrive_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TeamDrive);
      }
      if (objectCase_ == ObjectOneofCase.Drive) {
        output.WriteRawTag(26);
        output.WriteMessage(Drive);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (objectCase_ == ObjectOneofCase.DriveItem) {
        output.WriteRawTag(10);
        output.WriteMessage(DriveItem);
      }
      if (teamDrive_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TeamDrive);
      }
      if (objectCase_ == ObjectOneofCase.Drive) {
        output.WriteRawTag(26);
        output.WriteMessage(Drive);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (objectCase_ == ObjectOneofCase.DriveItem) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DriveItem);
      }
      if (objectCase_ == ObjectOneofCase.Drive) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Drive);
      }
      if (teamDrive_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TeamDrive);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TargetReference other) {
      if (other == null) {
        return;
      }
      if (other.teamDrive_ != null) {
        if (teamDrive_ == null) {
          TeamDrive = new global::Google.Apps.Drive.Activity.V2.TeamDriveReference();
        }
        TeamDrive.MergeFrom(other.TeamDrive);
      }
      switch (other.ObjectCase) {
        case ObjectOneofCase.DriveItem:
          if (DriveItem == null) {
            DriveItem = new global::Google.Apps.Drive.Activity.V2.DriveItemReference();
          }
          DriveItem.MergeFrom(other.DriveItem);
          break;
        case ObjectOneofCase.Drive:
          if (Drive == null) {
            Drive = new global::Google.Apps.Drive.Activity.V2.DriveReference();
          }
          Drive.MergeFrom(other.Drive);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Google.Apps.Drive.Activity.V2.DriveItemReference subBuilder = new global::Google.Apps.Drive.Activity.V2.DriveItemReference();
            if (objectCase_ == ObjectOneofCase.DriveItem) {
              subBuilder.MergeFrom(DriveItem);
            }
            input.ReadMessage(subBuilder);
            DriveItem = subBuilder;
            break;
          }
          case 18: {
            if (teamDrive_ == null) {
              TeamDrive = new global::Google.Apps.Drive.Activity.V2.TeamDriveReference();
            }
            input.ReadMessage(TeamDrive);
            break;
          }
          case 26: {
            global::Google.Apps.Drive.Activity.V2.DriveReference subBuilder = new global::Google.Apps.Drive.Activity.V2.DriveReference();
            if (objectCase_ == ObjectOneofCase.Drive) {
              subBuilder.MergeFrom(Drive);
            }
            input.ReadMessage(subBuilder);
            Drive = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Google.Apps.Drive.Activity.V2.DriveItemReference subBuilder = new global::Google.Apps.Drive.Activity.V2.DriveItemReference();
            if (objectCase_ == ObjectOneofCase.DriveItem) {
              subBuilder.MergeFrom(DriveItem);
            }
            input.ReadMessage(subBuilder);
            DriveItem = subBuilder;
            break;
          }
          case 18: {
            if (teamDrive_ == null) {
              TeamDrive = new global::Google.Apps.Drive.Activity.V2.TeamDriveReference();
            }
            input.ReadMessage(TeamDrive);
            break;
          }
          case 26: {
            global::Google.Apps.Drive.Activity.V2.DriveReference subBuilder = new global::Google.Apps.Drive.Activity.V2.DriveReference();
            if (objectCase_ == ObjectOneofCase.Drive) {
              subBuilder.MergeFrom(Drive);
            }
            input.ReadMessage(subBuilder);
            Drive = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A comment on a file.
  /// </summary>
  public sealed partial class FileComment : pb::IMessage<FileComment>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FileComment> _parser = new pb::MessageParser<FileComment>(() => new FileComment());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FileComment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Apps.Drive.Activity.V2.TargetReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileComment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileComment(FileComment other) : this() {
      legacyCommentId_ = other.legacyCommentId_;
      legacyDiscussionId_ = other.legacyDiscussionId_;
      linkToDiscussion_ = other.linkToDiscussion_;
      parent_ = other.parent_ != null ? other.parent_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileComment Clone() {
      return new FileComment(this);
    }

    /// <summary>Field number for the "legacy_comment_id" field.</summary>
    public const int LegacyCommentIdFieldNumber = 1;
    private string legacyCommentId_ = "";
    /// <summary>
    /// The comment in the discussion thread. This identifier is an opaque string
    /// compatible with the Drive API; see
    /// https://developers.google.com/drive/v3/reference/comments/get
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LegacyCommentId {
      get { return legacyCommentId_; }
      set {
        legacyCommentId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "legacy_discussion_id" field.</summary>
    public const int LegacyDiscussionIdFieldNumber = 2;
    private string legacyDiscussionId_ = "";
    /// <summary>
    /// The discussion thread to which the comment was added. This identifier is an
    /// opaque string compatible with the Drive API and references the first
    /// comment in a discussion; see
    /// https://developers.google.com/drive/v3/reference/comments/get
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LegacyDiscussionId {
      get { return legacyDiscussionId_; }
      set {
        legacyDiscussionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "link_to_discussion" field.</summary>
    public const int LinkToDiscussionFieldNumber = 3;
    private string linkToDiscussion_ = "";
    /// <summary>
    /// The link to the discussion thread containing this comment, for example,
    /// `https://docs.google.com/DOCUMENT_ID/edit?disco=THREAD_ID`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LinkToDiscussion {
      get { return linkToDiscussion_; }
      set {
        linkToDiscussion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 4;
    private global::Google.Apps.Drive.Activity.V2.DriveItem parent_;
    /// <summary>
    /// The Drive item containing this comment.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Apps.Drive.Activity.V2.DriveItem Parent {
      get { return parent_; }
      set {
        parent_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FileComment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FileComment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LegacyCommentId != other.LegacyCommentId) return false;
      if (LegacyDiscussionId != other.LegacyDiscussionId) return false;
      if (LinkToDiscussion != other.LinkToDiscussion) return false;
      if (!object.Equals(Parent, other.Parent)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LegacyCommentId.Length != 0) hash ^= LegacyCommentId.GetHashCode();
      if (LegacyDiscussionId.Length != 0) hash ^= LegacyDiscussionId.GetHashCode();
      if (LinkToDiscussion.Length != 0) hash ^= LinkToDiscussion.GetHashCode();
      if (parent_ != null) hash ^= Parent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LegacyCommentId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LegacyCommentId);
      }
      if (LegacyDiscussionId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(LegacyDiscussionId);
      }
      if (LinkToDiscussion.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LinkToDiscussion);
      }
      if (parent_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Parent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LegacyCommentId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LegacyCommentId);
      }
      if (LegacyDiscussionId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(LegacyDiscussionId);
      }
      if (LinkToDiscussion.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LinkToDiscussion);
      }
      if (parent_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Parent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LegacyCommentId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LegacyCommentId);
      }
      if (LegacyDiscussionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LegacyDiscussionId);
      }
      if (LinkToDiscussion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LinkToDiscussion);
      }
      if (parent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Parent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FileComment other) {
      if (other == null) {
        return;
      }
      if (other.LegacyCommentId.Length != 0) {
        LegacyCommentId = other.LegacyCommentId;
      }
      if (other.LegacyDiscussionId.Length != 0) {
        LegacyDiscussionId = other.LegacyDiscussionId;
      }
      if (other.LinkToDiscussion.Length != 0) {
        LinkToDiscussion = other.LinkToDiscussion;
      }
      if (other.parent_ != null) {
        if (parent_ == null) {
          Parent = new global::Google.Apps.Drive.Activity.V2.DriveItem();
        }
        Parent.MergeFrom(other.Parent);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LegacyCommentId = input.ReadString();
            break;
          }
          case 18: {
            LegacyDiscussionId = input.ReadString();
            break;
          }
          case 26: {
            LinkToDiscussion = input.ReadString();
            break;
          }
          case 34: {
            if (parent_ == null) {
              Parent = new global::Google.Apps.Drive.Activity.V2.DriveItem();
            }
            input.ReadMessage(Parent);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            LegacyCommentId = input.ReadString();
            break;
          }
          case 18: {
            LegacyDiscussionId = input.ReadString();
            break;
          }
          case 26: {
            LinkToDiscussion = input.ReadString();
            break;
          }
          case 34: {
            if (parent_ == null) {
              Parent = new global::Google.Apps.Drive.Activity.V2.DriveItem();
            }
            input.ReadMessage(Parent);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A Drive item, such as a file or folder.
  /// </summary>
  public sealed partial class DriveItem : pb::IMessage<DriveItem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DriveItem> _parser = new pb::MessageParser<DriveItem>(() => new DriveItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DriveItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Apps.Drive.Activity.V2.TargetReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DriveItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DriveItem(DriveItem other) : this() {
      name_ = other.name_;
      title_ = other.title_;
      file_ = other.file_ != null ? other.file_.Clone() : null;
      folder_ = other.folder_ != null ? other.folder_.Clone() : null;
      mimeType_ = other.mimeType_;
      owner_ = other.owner_ != null ? other.owner_.Clone() : null;
      switch (other.ItemTypeCase) {
        case ItemTypeOneofCase.DriveFile:
          DriveFile = other.DriveFile.Clone();
          break;
        case ItemTypeOneofCase.DriveFolder:
          DriveFolder = other.DriveFolder.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DriveItem Clone() {
      return new DriveItem(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The target Drive item. The format is `items/ITEM_ID`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 2;
    private string title_ = "";
    /// <summary>
    /// The title of the Drive item.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "file" field.</summary>
    public const int FileFieldNumber = 3;
    private global::Google.Apps.Drive.Activity.V2.DriveItem.Types.File file_;
    /// <summary>
    /// This field is deprecated; please use the `driveFile` field instead.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Apps.Drive.Activity.V2.DriveItem.Types.File File {
      get { return file_; }
      set {
        file_ = value;
      }
    }

    /// <summary>Field number for the "folder" field.</summary>
    public const int FolderFieldNumber = 4;
    private global::Google.Apps.Drive.Activity.V2.DriveItem.Types.Folder folder_;
    /// <summary>
    /// This field is deprecated; please use the `driveFolder` field instead.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Apps.Drive.Activity.V2.DriveItem.Types.Folder Folder {
      get { return folder_; }
      set {
        folder_ = value;
      }
    }

    /// <summary>Field number for the "drive_file" field.</summary>
    public const int DriveFileFieldNumber = 8;
    /// <summary>
    /// The Drive item is a file.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Apps.Drive.Activity.V2.DriveItem.Types.DriveFile DriveFile {
      get { return itemTypeCase_ == ItemTypeOneofCase.DriveFile ? (global::Google.Apps.Drive.Activity.V2.DriveItem.Types.DriveFile) itemType_ : null; }
      set {
        itemType_ = value;
        itemTypeCase_ = value == null ? ItemTypeOneofCase.None : ItemTypeOneofCase.DriveFile;
      }
    }

    /// <summary>Field number for the "drive_folder" field.</summary>
    public const int DriveFolderFieldNumber = 9;
    /// <summary>
    /// The Drive item is a folder. Includes information about the type of
    /// folder.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Apps.Drive.Activity.V2.DriveItem.Types.DriveFolder DriveFolder {
      get { return itemTypeCase_ == ItemTypeOneofCase.DriveFolder ? (global::Google.Apps.Drive.Activity.V2.DriveItem.Types.DriveFolder) itemType_ : null; }
      set {
        itemType_ = value;
        itemTypeCase_ = value == null ? ItemTypeOneofCase.None : ItemTypeOneofCase.DriveFolder;
      }
    }

    /// <summary>Field number for the "mime_type" field.</summary>
    public const int MimeTypeFieldNumber = 6;
    private string mimeType_ = "";
    /// <summary>
    /// The MIME type of the Drive item.  See
    /// https://developers.google.com/drive/v3/web/mime-types.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MimeType {
      get { return mimeType_; }
      set {
        mimeType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 7;
    private global::Google.Apps.Drive.Activity.V2.Owner owner_;
    /// <summary>
    /// Information about the owner of this Drive item.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Apps.Drive.Activity.V2.Owner Owner {
      get { return owner_; }
      set {
        owner_ = value;
      }
    }

    private object itemType_;
    /// <summary>Enum of possible cases for the "item_type" oneof.</summary>
    public enum ItemTypeOneofCase {
      None = 0,
      DriveFile = 8,
      DriveFolder = 9,
    }
    private ItemTypeOneofCase itemTypeCase_ = ItemTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemTypeOneofCase ItemTypeCase {
      get { return itemTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearItemType() {
      itemTypeCase_ = ItemTypeOneofCase.None;
      itemType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DriveItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DriveItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Title != other.Title) return false;
      if (!object.Equals(File, other.File)) return false;
      if (!object.Equals(Folder, other.Folder)) return false;
      if (!object.Equals(DriveFile, other.DriveFile)) return false;
      if (!object.Equals(DriveFolder, other.DriveFolder)) return false;
      if (MimeType != other.MimeType) return false;
      if (!object.Equals(Owner, other.Owner)) return false;
      if (ItemTypeCase != other.ItemTypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (file_ != null) hash ^= File.GetHashCode();
      if (folder_ != null) hash ^= Folder.GetHashCode();
      if (itemTypeCase_ == ItemTypeOneofCase.DriveFile) hash ^= DriveFile.GetHashCode();
      if (itemTypeCase_ == ItemTypeOneofCase.DriveFolder) hash ^= DriveFolder.GetHashCode();
      if (MimeType.Length != 0) hash ^= MimeType.GetHashCode();
      if (owner_ != null) hash ^= Owner.GetHashCode();
      hash ^= (int) itemTypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (file_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(File);
      }
      if (folder_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Folder);
      }
      if (MimeType.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(MimeType);
      }
      if (owner_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Owner);
      }
      if (itemTypeCase_ == ItemTypeOneofCase.DriveFile) {
        output.WriteRawTag(66);
        output.WriteMessage(DriveFile);
      }
      if (itemTypeCase_ == ItemTypeOneofCase.DriveFolder) {
        output.WriteRawTag(74);
        output.WriteMessage(DriveFolder);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (file_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(File);
      }
      if (folder_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Folder);
      }
      if (MimeType.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(MimeType);
      }
      if (owner_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Owner);
      }
      if (itemTypeCase_ == ItemTypeOneofCase.DriveFile) {
        output.WriteRawTag(66);
        output.WriteMessage(DriveFile);
      }
      if (itemTypeCase_ == ItemTypeOneofCase.DriveFolder) {
        output.WriteRawTag(74);
        output.WriteMessage(DriveFolder);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (file_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(File);
      }
      if (folder_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Folder);
      }
      if (itemTypeCase_ == ItemTypeOneofCase.DriveFile) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DriveFile);
      }
      if (itemTypeCase_ == ItemTypeOneofCase.DriveFolder) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DriveFolder);
      }
      if (MimeType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MimeType);
      }
      if (owner_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Owner);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DriveItem other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.file_ != null) {
        if (file_ == null) {
          File = new global::Google.Apps.Drive.Activity.V2.DriveItem.Types.File();
        }
        File.MergeFrom(other.File);
      }
      if (other.folder_ != null) {
        if (folder_ == null) {
          Folder = new global::Google.Apps.Drive.Activity.V2.DriveItem.Types.Folder();
        }
        Folder.MergeFrom(other.Folder);
      }
      if (other.MimeType.Length != 0) {
        MimeType = other.MimeType;
      }
      if (other.owner_ != null) {
        if (owner_ == null) {
          Owner = new global::Google.Apps.Drive.Activity.V2.Owner();
        }
        Owner.MergeFrom(other.Owner);
      }
      switch (other.ItemTypeCase) {
        case ItemTypeOneofCase.DriveFile:
          if (DriveFile == null) {
            DriveFile = new global::Google.Apps.Drive.Activity.V2.DriveItem.Types.DriveFile();
          }
          DriveFile.MergeFrom(other.DriveFile);
          break;
        case ItemTypeOneofCase.DriveFolder:
          if (DriveFolder == null) {
            DriveFolder = new global::Google.Apps.Drive.Activity.V2.DriveItem.Types.DriveFolder();
          }
          DriveFolder.MergeFrom(other.DriveFolder);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 26: {
            if (file_ == null) {
              File = new global::Google.Apps.Drive.Activity.V2.DriveItem.Types.File();
            }
            input.ReadMessage(File);
            break;
          }
          case 34: {
            if (folder_ == null) {
              Folder = new global::Google.Apps.Drive.Activity.V2.DriveItem.Types.Folder();
            }
            input.ReadMessage(Folder);
            break;
          }
          case 50: {
            MimeType = input.ReadString();
            break;
          }
          case 58: {
            if (owner_ == null) {
              Owner = new global::Google.Apps.Drive.Activity.V2.Owner();
            }
            input.ReadMessage(Owner);
            break;
          }
          case 66: {
            global::Google.Apps.Drive.Activity.V2.DriveItem.Types.DriveFile subBuilder = new global::Google.Apps.Drive.Activity.V2.DriveItem.Types.DriveFile();
            if (itemTypeCase_ == ItemTypeOneofCase.DriveFile) {
              subBuilder.MergeFrom(DriveFile);
            }
            input.ReadMessage(subBuilder);
            DriveFile = subBuilder;
            break;
          }
          case 74: {
            global::Google.Apps.Drive.Activity.V2.DriveItem.Types.DriveFolder subBuilder = new global::Google.Apps.Drive.Activity.V2.DriveItem.Types.DriveFolder();
            if (itemTypeCase_ == ItemTypeOneofCase.DriveFolder) {
              subBuilder.MergeFrom(DriveFolder);
            }
            input.ReadMessage(subBuilder);
            DriveFolder = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 26: {
            if (file_ == null) {
              File = new global::Google.Apps.Drive.Activity.V2.DriveItem.Types.File();
            }
            input.ReadMessage(File);
            break;
          }
          case 34: {
            if (folder_ == null) {
              Folder = new global::Google.Apps.Drive.Activity.V2.DriveItem.Types.Folder();
            }
            input.ReadMessage(Folder);
            break;
          }
          case 50: {
            MimeType = input.ReadString();
            break;
          }
          case 58: {
            if (owner_ == null) {
              Owner = new global::Google.Apps.Drive.Activity.V2.Owner();
            }
            input.ReadMessage(Owner);
            break;
          }
          case 66: {
            global::Google.Apps.Drive.Activity.V2.DriveItem.Types.DriveFile subBuilder = new global::Google.Apps.Drive.Activity.V2.DriveItem.Types.DriveFile();
            if (itemTypeCase_ == ItemTypeOneofCase.DriveFile) {
              subBuilder.MergeFrom(DriveFile);
            }
            input.ReadMessage(subBuilder);
            DriveFile = subBuilder;
            break;
          }
          case 74: {
            global::Google.Apps.Drive.Activity.V2.DriveItem.Types.DriveFolder subBuilder = new global::Google.Apps.Drive.Activity.V2.DriveItem.Types.DriveFolder();
            if (itemTypeCase_ == ItemTypeOneofCase.DriveFolder) {
              subBuilder.MergeFrom(DriveFolder);
            }
            input.ReadMessage(subBuilder);
            DriveFolder = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the DriveItem message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// This item is deprecated; please see `DriveFile` instead.
      /// </summary>
      [global::System.ObsoleteAttribute]
      public sealed partial class File : pb::IMessage<File>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<File> _parser = new pb::MessageParser<File>(() => new File());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<File> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Apps.Drive.Activity.V2.DriveItem.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public File() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public File(File other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public File Clone() {
          return new File(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as File);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(File other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(File other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

      /// <summary>
      /// This item is deprecated; please see `DriveFolder` instead.
      /// </summary>
      [global::System.ObsoleteAttribute]
      public sealed partial class Folder : pb::IMessage<Folder>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Folder> _parser = new pb::MessageParser<Folder>(() => new Folder());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Folder> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Apps.Drive.Activity.V2.DriveItem.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Folder() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Folder(Folder other) : this() {
          type_ = other.type_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Folder Clone() {
          return new Folder(this);
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 6;
        private global::Google.Apps.Drive.Activity.V2.DriveItem.Types.Folder.Types.Type type_ = global::Google.Apps.Drive.Activity.V2.DriveItem.Types.Folder.Types.Type.Unspecified;
        /// <summary>
        /// This field is deprecated; please see `DriveFolder.type` instead.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Apps.Drive.Activity.V2.DriveItem.Types.Folder.Types.Type Type {
          get { return type_; }
          set {
            type_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Folder);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Folder other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Type != other.Type) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Type != global::Google.Apps.Drive.Activity.V2.DriveItem.Types.Folder.Types.Type.Unspecified) hash ^= Type.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Type != global::Google.Apps.Drive.Activity.V2.DriveItem.Types.Folder.Types.Type.Unspecified) {
            output.WriteRawTag(48);
            output.WriteEnum((int) Type);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Type != global::Google.Apps.Drive.Activity.V2.DriveItem.Types.Folder.Types.Type.Unspecified) {
            output.WriteRawTag(48);
            output.WriteEnum((int) Type);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Type != global::Google.Apps.Drive.Activity.V2.DriveItem.Types.Folder.Types.Type.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Folder other) {
          if (other == null) {
            return;
          }
          if (other.Type != global::Google.Apps.Drive.Activity.V2.DriveItem.Types.Folder.Types.Type.Unspecified) {
            Type = other.Type;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 48: {
                Type = (global::Google.Apps.Drive.Activity.V2.DriveItem.Types.Folder.Types.Type) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 48: {
                Type = (global::Google.Apps.Drive.Activity.V2.DriveItem.Types.Folder.Types.Type) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Folder message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// This item is deprecated; please see `DriveFolder.Type` instead.
          /// </summary>
          public enum Type {
            /// <summary>
            /// This item is deprecated; please see `DriveFolder.Type` instead.
            /// </summary>
            [pbr::OriginalName("TYPE_UNSPECIFIED")] Unspecified = 0,
            /// <summary>
            /// This item is deprecated; please see `DriveFolder.Type` instead.
            /// </summary>
            [pbr::OriginalName("MY_DRIVE_ROOT")] MyDriveRoot = 1,
            /// <summary>
            /// This item is deprecated; please see `DriveFolder.Type` instead.
            /// </summary>
            [pbr::OriginalName("TEAM_DRIVE_ROOT")] TeamDriveRoot = 2,
            /// <summary>
            /// This item is deprecated; please see `DriveFolder.Type` instead.
            /// </summary>
            [pbr::OriginalName("STANDARD_FOLDER")] StandardFolder = 3,
          }

        }
        #endregion

      }

      /// <summary>
      /// A Drive item which is a file.
      /// </summary>
      public sealed partial class DriveFile : pb::IMessage<DriveFile>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<DriveFile> _parser = new pb::MessageParser<DriveFile>(() => new DriveFile());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DriveFile> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Apps.Drive.Activity.V2.DriveItem.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DriveFile() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DriveFile(DriveFile other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DriveFile Clone() {
          return new DriveFile(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as DriveFile);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DriveFile other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DriveFile other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

      /// <summary>
      /// A Drive item which is a folder.
      /// </summary>
      public sealed partial class DriveFolder : pb::IMessage<DriveFolder>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<DriveFolder> _parser = new pb::MessageParser<DriveFolder>(() => new DriveFolder());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DriveFolder> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Apps.Drive.Activity.V2.DriveItem.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DriveFolder() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DriveFolder(DriveFolder other) : this() {
          type_ = other.type_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DriveFolder Clone() {
          return new DriveFolder(this);
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 6;
        private global::Google.Apps.Drive.Activity.V2.DriveItem.Types.DriveFolder.Types.Type type_ = global::Google.Apps.Drive.Activity.V2.DriveItem.Types.DriveFolder.Types.Type.Unspecified;
        /// <summary>
        /// The type of Drive folder.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Apps.Drive.Activity.V2.DriveItem.Types.DriveFolder.Types.Type Type {
          get { return type_; }
          set {
            type_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as DriveFolder);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DriveFolder other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Type != other.Type) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Type != global::Google.Apps.Drive.Activity.V2.DriveItem.Types.DriveFolder.Types.Type.Unspecified) hash ^= Type.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Type != global::Google.Apps.Drive.Activity.V2.DriveItem.Types.DriveFolder.Types.Type.Unspecified) {
            output.WriteRawTag(48);
            output.WriteEnum((int) Type);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Type != global::Google.Apps.Drive.Activity.V2.DriveItem.Types.DriveFolder.Types.Type.Unspecified) {
            output.WriteRawTag(48);
            output.WriteEnum((int) Type);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Type != global::Google.Apps.Drive.Activity.V2.DriveItem.Types.DriveFolder.Types.Type.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DriveFolder other) {
          if (other == null) {
            return;
          }
          if (other.Type != global::Google.Apps.Drive.Activity.V2.DriveItem.Types.DriveFolder.Types.Type.Unspecified) {
            Type = other.Type;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 48: {
                Type = (global::Google.Apps.Drive.Activity.V2.DriveItem.Types.DriveFolder.Types.Type) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 48: {
                Type = (global::Google.Apps.Drive.Activity.V2.DriveItem.Types.DriveFolder.Types.Type) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the DriveFolder message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// The type of a Drive folder.
          /// </summary>
          public enum Type {
            /// <summary>
            /// The folder type is unknown.
            /// </summary>
            [pbr::OriginalName("TYPE_UNSPECIFIED")] Unspecified = 0,
            /// <summary>
            /// The folder is the root of a user's MyDrive.
            /// </summary>
            [pbr::OriginalName("MY_DRIVE_ROOT")] MyDriveRoot = 1,
            /// <summary>
            /// The folder is the root of a shared drive.
            /// </summary>
            [pbr::OriginalName("SHARED_DRIVE_ROOT")] SharedDriveRoot = 2,
            /// <summary>
            /// The folder is a standard, non-root, folder.
            /// </summary>
            [pbr::OriginalName("STANDARD_FOLDER")] StandardFolder = 3,
          }

        }
        #endregion

      }

    }
    #endregion

  }

  /// <summary>
  /// Information about the owner of a Drive item.
  /// </summary>
  public sealed partial class Owner : pb::IMessage<Owner>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Owner> _parser = new pb::MessageParser<Owner>(() => new Owner());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Owner> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Apps.Drive.Activity.V2.TargetReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Owner() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Owner(Owner other) : this() {
      teamDrive_ = other.teamDrive_ != null ? other.teamDrive_.Clone() : null;
      domain_ = other.domain_ != null ? other.domain_.Clone() : null;
      switch (other.OwnerCase) {
        case OwnerOneofCase.User:
          User = other.User.Clone();
          break;
        case OwnerOneofCase.Drive:
          Drive = other.Drive.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Owner Clone() {
      return new Owner(this);
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 1;
    /// <summary>
    /// The user that owns the Drive item.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Apps.Drive.Activity.V2.User User {
      get { return ownerCase_ == OwnerOneofCase.User ? (global::Google.Apps.Drive.Activity.V2.User) owner_ : null; }
      set {
        owner_ = value;
        ownerCase_ = value == null ? OwnerOneofCase.None : OwnerOneofCase.User;
      }
    }

    /// <summary>Field number for the "drive" field.</summary>
    public const int DriveFieldNumber = 4;
    /// <summary>
    /// The drive that owns the item.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Apps.Drive.Activity.V2.DriveReference Drive {
      get { return ownerCase_ == OwnerOneofCase.Drive ? (global::Google.Apps.Drive.Activity.V2.DriveReference) owner_ : null; }
      set {
        owner_ = value;
        ownerCase_ = value == null ? OwnerOneofCase.None : OwnerOneofCase.Drive;
      }
    }

    /// <summary>Field number for the "team_drive" field.</summary>
    public const int TeamDriveFieldNumber = 2;
    private global::Google.Apps.Drive.Activity.V2.TeamDriveReference teamDrive_;
    /// <summary>
    /// This field is deprecated; please use the `drive` field instead.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Apps.Drive.Activity.V2.TeamDriveReference TeamDrive {
      get { return teamDrive_; }
      set {
        teamDrive_ = value;
      }
    }

    /// <summary>Field number for the "domain" field.</summary>
    public const int DomainFieldNumber = 3;
    private global::Google.Apps.Drive.Activity.V2.Domain domain_;
    /// <summary>
    /// The domain of the Drive item owner.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Apps.Drive.Activity.V2.Domain Domain {
      get { return domain_; }
      set {
        domain_ = value;
      }
    }

    private object owner_;
    /// <summary>Enum of possible cases for the "owner" oneof.</summary>
    public enum OwnerOneofCase {
      None = 0,
      User = 1,
      Drive = 4,
    }
    private OwnerOneofCase ownerCase_ = OwnerOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OwnerOneofCase OwnerCase {
      get { return ownerCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOwner() {
      ownerCase_ = OwnerOneofCase.None;
      owner_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Owner);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Owner other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(User, other.User)) return false;
      if (!object.Equals(Drive, other.Drive)) return false;
      if (!object.Equals(TeamDrive, other.TeamDrive)) return false;
      if (!object.Equals(Domain, other.Domain)) return false;
      if (OwnerCase != other.OwnerCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ownerCase_ == OwnerOneofCase.User) hash ^= User.GetHashCode();
      if (ownerCase_ == OwnerOneofCase.Drive) hash ^= Drive.GetHashCode();
      if (teamDrive_ != null) hash ^= TeamDrive.GetHashCode();
      if (domain_ != null) hash ^= Domain.GetHashCode();
      hash ^= (int) ownerCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ownerCase_ == OwnerOneofCase.User) {
        output.WriteRawTag(10);
        output.WriteMessage(User);
      }
      if (teamDrive_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TeamDrive);
      }
      if (domain_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Domain);
      }
      if (ownerCase_ == OwnerOneofCase.Drive) {
        output.WriteRawTag(34);
        output.WriteMessage(Drive);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ownerCase_ == OwnerOneofCase.User) {
        output.WriteRawTag(10);
        output.WriteMessage(User);
      }
      if (teamDrive_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TeamDrive);
      }
      if (domain_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Domain);
      }
      if (ownerCase_ == OwnerOneofCase.Drive) {
        output.WriteRawTag(34);
        output.WriteMessage(Drive);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ownerCase_ == OwnerOneofCase.User) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (ownerCase_ == OwnerOneofCase.Drive) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Drive);
      }
      if (teamDrive_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TeamDrive);
      }
      if (domain_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Domain);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Owner other) {
      if (other == null) {
        return;
      }
      if (other.teamDrive_ != null) {
        if (teamDrive_ == null) {
          TeamDrive = new global::Google.Apps.Drive.Activity.V2.TeamDriveReference();
        }
        TeamDrive.MergeFrom(other.TeamDrive);
      }
      if (other.domain_ != null) {
        if (domain_ == null) {
          Domain = new global::Google.Apps.Drive.Activity.V2.Domain();
        }
        Domain.MergeFrom(other.Domain);
      }
      switch (other.OwnerCase) {
        case OwnerOneofCase.User:
          if (User == null) {
            User = new global::Google.Apps.Drive.Activity.V2.User();
          }
          User.MergeFrom(other.User);
          break;
        case OwnerOneofCase.Drive:
          if (Drive == null) {
            Drive = new global::Google.Apps.Drive.Activity.V2.DriveReference();
          }
          Drive.MergeFrom(other.Drive);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Google.Apps.Drive.Activity.V2.User subBuilder = new global::Google.Apps.Drive.Activity.V2.User();
            if (ownerCase_ == OwnerOneofCase.User) {
              subBuilder.MergeFrom(User);
            }
            input.ReadMessage(subBuilder);
            User = subBuilder;
            break;
          }
          case 18: {
            if (teamDrive_ == null) {
              TeamDrive = new global::Google.Apps.Drive.Activity.V2.TeamDriveReference();
            }
            input.ReadMessage(TeamDrive);
            break;
          }
          case 26: {
            if (domain_ == null) {
              Domain = new global::Google.Apps.Drive.Activity.V2.Domain();
            }
            input.ReadMessage(Domain);
            break;
          }
          case 34: {
            global::Google.Apps.Drive.Activity.V2.DriveReference subBuilder = new global::Google.Apps.Drive.Activity.V2.DriveReference();
            if (ownerCase_ == OwnerOneofCase.Drive) {
              subBuilder.MergeFrom(Drive);
            }
            input.ReadMessage(subBuilder);
            Drive = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Google.Apps.Drive.Activity.V2.User subBuilder = new global::Google.Apps.Drive.Activity.V2.User();
            if (ownerCase_ == OwnerOneofCase.User) {
              subBuilder.MergeFrom(User);
            }
            input.ReadMessage(subBuilder);
            User = subBuilder;
            break;
          }
          case 18: {
            if (teamDrive_ == null) {
              TeamDrive = new global::Google.Apps.Drive.Activity.V2.TeamDriveReference();
            }
            input.ReadMessage(TeamDrive);
            break;
          }
          case 26: {
            if (domain_ == null) {
              Domain = new global::Google.Apps.Drive.Activity.V2.Domain();
            }
            input.ReadMessage(Domain);
            break;
          }
          case 34: {
            global::Google.Apps.Drive.Activity.V2.DriveReference subBuilder = new global::Google.Apps.Drive.Activity.V2.DriveReference();
            if (ownerCase_ == OwnerOneofCase.Drive) {
              subBuilder.MergeFrom(Drive);
            }
            input.ReadMessage(subBuilder);
            Drive = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// This item is deprecated; please see `Drive` instead.
  /// </summary>
  [global::System.ObsoleteAttribute]
  public sealed partial class TeamDrive : pb::IMessage<TeamDrive>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TeamDrive> _parser = new pb::MessageParser<TeamDrive>(() => new TeamDrive());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TeamDrive> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Apps.Drive.Activity.V2.TargetReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeamDrive() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeamDrive(TeamDrive other) : this() {
      name_ = other.name_;
      title_ = other.title_;
      root_ = other.root_ != null ? other.root_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeamDrive Clone() {
      return new TeamDrive(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// This field is deprecated; please see `Drive.name` instead.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 2;
    private string title_ = "";
    /// <summary>
    /// This field is deprecated; please see `Drive.title` instead.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "root" field.</summary>
    public const int RootFieldNumber = 3;
    private global::Google.Apps.Drive.Activity.V2.DriveItem root_;
    /// <summary>
    /// This field is deprecated; please see `Drive.root` instead.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Apps.Drive.Activity.V2.DriveItem Root {
      get { return root_; }
      set {
        root_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TeamDrive);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TeamDrive other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Title != other.Title) return false;
      if (!object.Equals(Root, other.Root)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (root_ != null) hash ^= Root.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (root_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Root);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (root_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Root);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (root_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Root);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TeamDrive other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.root_ != null) {
        if (root_ == null) {
          Root = new global::Google.Apps.Drive.Activity.V2.DriveItem();
        }
        Root.MergeFrom(other.Root);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 26: {
            if (root_ == null) {
              Root = new global::Google.Apps.Drive.Activity.V2.DriveItem();
            }
            input.ReadMessage(Root);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 26: {
            if (root_ == null) {
              Root = new global::Google.Apps.Drive.Activity.V2.DriveItem();
            }
            input.ReadMessage(Root);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Information about a shared drive.
  /// </summary>
  public sealed partial class Drive : pb::IMessage<Drive>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Drive> _parser = new pb::MessageParser<Drive>(() => new Drive());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Drive> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Apps.Drive.Activity.V2.TargetReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Drive() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Drive(Drive other) : this() {
      name_ = other.name_;
      title_ = other.title_;
      root_ = other.root_ != null ? other.root_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Drive Clone() {
      return new Drive(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The resource name of the shared drive. The format is
    /// `COLLECTION_ID/DRIVE_ID`. Clients should not assume a specific collection
    /// ID for this resource name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 2;
    private string title_ = "";
    /// <summary>
    /// The title of the shared drive.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "root" field.</summary>
    public const int RootFieldNumber = 3;
    private global::Google.Apps.Drive.Activity.V2.DriveItem root_;
    /// <summary>
    /// The root of this shared drive.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Apps.Drive.Activity.V2.DriveItem Root {
      get { return root_; }
      set {
        root_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Drive);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Drive other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Title != other.Title) return false;
      if (!object.Equals(Root, other.Root)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (root_ != null) hash ^= Root.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (root_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Root);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (root_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Root);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (root_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Root);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Drive other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.root_ != null) {
        if (root_ == null) {
          Root = new global::Google.Apps.Drive.Activity.V2.DriveItem();
        }
        Root.MergeFrom(other.Root);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 26: {
            if (root_ == null) {
              Root = new global::Google.Apps.Drive.Activity.V2.DriveItem();
            }
            input.ReadMessage(Root);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 26: {
            if (root_ == null) {
              Root = new global::Google.Apps.Drive.Activity.V2.DriveItem();
            }
            input.ReadMessage(Root);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A lightweight reference to a Drive item, such as a file or folder.
  /// </summary>
  public sealed partial class DriveItemReference : pb::IMessage<DriveItemReference>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DriveItemReference> _parser = new pb::MessageParser<DriveItemReference>(() => new DriveItemReference());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DriveItemReference> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Apps.Drive.Activity.V2.TargetReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DriveItemReference() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DriveItemReference(DriveItemReference other) : this() {
      name_ = other.name_;
      title_ = other.title_;
      file_ = other.file_ != null ? other.file_.Clone() : null;
      folder_ = other.folder_ != null ? other.folder_.Clone() : null;
      switch (other.ItemTypeCase) {
        case ItemTypeOneofCase.DriveFile:
          DriveFile = other.DriveFile.Clone();
          break;
        case ItemTypeOneofCase.DriveFolder:
          DriveFolder = other.DriveFolder.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DriveItemReference Clone() {
      return new DriveItemReference(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The target Drive item. The format is `items/ITEM_ID`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 2;
    private string title_ = "";
    /// <summary>
    /// The title of the Drive item.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "file" field.</summary>
    public const int FileFieldNumber = 3;
    private global::Google.Apps.Drive.Activity.V2.DriveItem.Types.File file_;
    /// <summary>
    /// This field is deprecated; please use the `driveFile` field instead.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Apps.Drive.Activity.V2.DriveItem.Types.File File {
      get { return file_; }
      set {
        file_ = value;
      }
    }

    /// <summary>Field number for the "folder" field.</summary>
    public const int FolderFieldNumber = 4;
    private global::Google.Apps.Drive.Activity.V2.DriveItem.Types.Folder folder_;
    /// <summary>
    /// This field is deprecated; please use the `driveFolder` field instead.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Apps.Drive.Activity.V2.DriveItem.Types.Folder Folder {
      get { return folder_; }
      set {
        folder_ = value;
      }
    }

    /// <summary>Field number for the "drive_file" field.</summary>
    public const int DriveFileFieldNumber = 8;
    /// <summary>
    /// The Drive item is a file.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Apps.Drive.Activity.V2.DriveItem.Types.DriveFile DriveFile {
      get { return itemTypeCase_ == ItemTypeOneofCase.DriveFile ? (global::Google.Apps.Drive.Activity.V2.DriveItem.Types.DriveFile) itemType_ : null; }
      set {
        itemType_ = value;
        itemTypeCase_ = value == null ? ItemTypeOneofCase.None : ItemTypeOneofCase.DriveFile;
      }
    }

    /// <summary>Field number for the "drive_folder" field.</summary>
    public const int DriveFolderFieldNumber = 9;
    /// <summary>
    /// The Drive item is a folder. Includes information about the type of
    /// folder.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Apps.Drive.Activity.V2.DriveItem.Types.DriveFolder DriveFolder {
      get { return itemTypeCase_ == ItemTypeOneofCase.DriveFolder ? (global::Google.Apps.Drive.Activity.V2.DriveItem.Types.DriveFolder) itemType_ : null; }
      set {
        itemType_ = value;
        itemTypeCase_ = value == null ? ItemTypeOneofCase.None : ItemTypeOneofCase.DriveFolder;
      }
    }

    private object itemType_;
    /// <summary>Enum of possible cases for the "item_type" oneof.</summary>
    public enum ItemTypeOneofCase {
      None = 0,
      DriveFile = 8,
      DriveFolder = 9,
    }
    private ItemTypeOneofCase itemTypeCase_ = ItemTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemTypeOneofCase ItemTypeCase {
      get { return itemTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearItemType() {
      itemTypeCase_ = ItemTypeOneofCase.None;
      itemType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DriveItemReference);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DriveItemReference other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Title != other.Title) return false;
      if (!object.Equals(File, other.File)) return false;
      if (!object.Equals(Folder, other.Folder)) return false;
      if (!object.Equals(DriveFile, other.DriveFile)) return false;
      if (!object.Equals(DriveFolder, other.DriveFolder)) return false;
      if (ItemTypeCase != other.ItemTypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (file_ != null) hash ^= File.GetHashCode();
      if (folder_ != null) hash ^= Folder.GetHashCode();
      if (itemTypeCase_ == ItemTypeOneofCase.DriveFile) hash ^= DriveFile.GetHashCode();
      if (itemTypeCase_ == ItemTypeOneofCase.DriveFolder) hash ^= DriveFolder.GetHashCode();
      hash ^= (int) itemTypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (file_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(File);
      }
      if (folder_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Folder);
      }
      if (itemTypeCase_ == ItemTypeOneofCase.DriveFile) {
        output.WriteRawTag(66);
        output.WriteMessage(DriveFile);
      }
      if (itemTypeCase_ == ItemTypeOneofCase.DriveFolder) {
        output.WriteRawTag(74);
        output.WriteMessage(DriveFolder);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (file_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(File);
      }
      if (folder_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Folder);
      }
      if (itemTypeCase_ == ItemTypeOneofCase.DriveFile) {
        output.WriteRawTag(66);
        output.WriteMessage(DriveFile);
      }
      if (itemTypeCase_ == ItemTypeOneofCase.DriveFolder) {
        output.WriteRawTag(74);
        output.WriteMessage(DriveFolder);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (file_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(File);
      }
      if (folder_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Folder);
      }
      if (itemTypeCase_ == ItemTypeOneofCase.DriveFile) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DriveFile);
      }
      if (itemTypeCase_ == ItemTypeOneofCase.DriveFolder) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DriveFolder);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DriveItemReference other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.file_ != null) {
        if (file_ == null) {
          File = new global::Google.Apps.Drive.Activity.V2.DriveItem.Types.File();
        }
        File.MergeFrom(other.File);
      }
      if (other.folder_ != null) {
        if (folder_ == null) {
          Folder = new global::Google.Apps.Drive.Activity.V2.DriveItem.Types.Folder();
        }
        Folder.MergeFrom(other.Folder);
      }
      switch (other.ItemTypeCase) {
        case ItemTypeOneofCase.DriveFile:
          if (DriveFile == null) {
            DriveFile = new global::Google.Apps.Drive.Activity.V2.DriveItem.Types.DriveFile();
          }
          DriveFile.MergeFrom(other.DriveFile);
          break;
        case ItemTypeOneofCase.DriveFolder:
          if (DriveFolder == null) {
            DriveFolder = new global::Google.Apps.Drive.Activity.V2.DriveItem.Types.DriveFolder();
          }
          DriveFolder.MergeFrom(other.DriveFolder);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 26: {
            if (file_ == null) {
              File = new global::Google.Apps.Drive.Activity.V2.DriveItem.Types.File();
            }
            input.ReadMessage(File);
            break;
          }
          case 34: {
            if (folder_ == null) {
              Folder = new global::Google.Apps.Drive.Activity.V2.DriveItem.Types.Folder();
            }
            input.ReadMessage(Folder);
            break;
          }
          case 66: {
            global::Google.Apps.Drive.Activity.V2.DriveItem.Types.DriveFile subBuilder = new global::Google.Apps.Drive.Activity.V2.DriveItem.Types.DriveFile();
            if (itemTypeCase_ == ItemTypeOneofCase.DriveFile) {
              subBuilder.MergeFrom(DriveFile);
            }
            input.ReadMessage(subBuilder);
            DriveFile = subBuilder;
            break;
          }
          case 74: {
            global::Google.Apps.Drive.Activity.V2.DriveItem.Types.DriveFolder subBuilder = new global::Google.Apps.Drive.Activity.V2.DriveItem.Types.DriveFolder();
            if (itemTypeCase_ == ItemTypeOneofCase.DriveFolder) {
              subBuilder.MergeFrom(DriveFolder);
            }
            input.ReadMessage(subBuilder);
            DriveFolder = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 26: {
            if (file_ == null) {
              File = new global::Google.Apps.Drive.Activity.V2.DriveItem.Types.File();
            }
            input.ReadMessage(File);
            break;
          }
          case 34: {
            if (folder_ == null) {
              Folder = new global::Google.Apps.Drive.Activity.V2.DriveItem.Types.Folder();
            }
            input.ReadMessage(Folder);
            break;
          }
          case 66: {
            global::Google.Apps.Drive.Activity.V2.DriveItem.Types.DriveFile subBuilder = new global::Google.Apps.Drive.Activity.V2.DriveItem.Types.DriveFile();
            if (itemTypeCase_ == ItemTypeOneofCase.DriveFile) {
              subBuilder.MergeFrom(DriveFile);
            }
            input.ReadMessage(subBuilder);
            DriveFile = subBuilder;
            break;
          }
          case 74: {
            global::Google.Apps.Drive.Activity.V2.DriveItem.Types.DriveFolder subBuilder = new global::Google.Apps.Drive.Activity.V2.DriveItem.Types.DriveFolder();
            if (itemTypeCase_ == ItemTypeOneofCase.DriveFolder) {
              subBuilder.MergeFrom(DriveFolder);
            }
            input.ReadMessage(subBuilder);
            DriveFolder = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// This item is deprecated; please see `DriveReference` instead.
  /// </summary>
  [global::System.ObsoleteAttribute]
  public sealed partial class TeamDriveReference : pb::IMessage<TeamDriveReference>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TeamDriveReference> _parser = new pb::MessageParser<TeamDriveReference>(() => new TeamDriveReference());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TeamDriveReference> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Apps.Drive.Activity.V2.TargetReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeamDriveReference() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeamDriveReference(TeamDriveReference other) : this() {
      name_ = other.name_;
      title_ = other.title_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeamDriveReference Clone() {
      return new TeamDriveReference(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// This field is deprecated; please see `DriveReference.name` instead.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 2;
    private string title_ = "";
    /// <summary>
    /// This field is deprecated; please see `DriveReference.title` instead.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TeamDriveReference);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TeamDriveReference other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Title != other.Title) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TeamDriveReference other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A lightweight reference to a shared drive.
  /// </summary>
  public sealed partial class DriveReference : pb::IMessage<DriveReference>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DriveReference> _parser = new pb::MessageParser<DriveReference>(() => new DriveReference());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DriveReference> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Apps.Drive.Activity.V2.TargetReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DriveReference() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DriveReference(DriveReference other) : this() {
      name_ = other.name_;
      title_ = other.title_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DriveReference Clone() {
      return new DriveReference(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The resource name of the shared drive. The format is
    /// `COLLECTION_ID/DRIVE_ID`. Clients should not assume a specific collection
    /// ID for this resource name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 2;
    private string title_ = "";
    /// <summary>
    /// The title of the shared drive.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DriveReference);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DriveReference other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Title != other.Title) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DriveReference other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
