// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/apps/market/v2/resources.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Ccc.Hosted.Marketplace.V2 {

  /// <summary>Holder for reflection information generated from google/apps/market/v2/resources.proto</summary>
  public static partial class ResourcesReflection {

    #region Descriptor
    /// <summary>File descriptor for google/apps/market/v2/resources.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ResourcesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiVnb29nbGUvYXBwcy9tYXJrZXQvdjIvcmVzb3VyY2VzLnByb3RvEhljY2Mu",
            "aG9zdGVkLm1hcmtldHBsYWNlLnYyGhxnb29nbGUvYXBpL2Fubm90YXRpb25z",
            "LnByb3RvIo0CCg9DdXN0b21lckxpY2Vuc2USDAoEa2luZBgBIAEoCRINCgVz",
            "dGF0ZRgCIAEoCRIWCg5hcHBsaWNhdGlvbl9pZBgDIAEoCRJJCghlZGl0aW9u",
            "cxgEIAMoCzIzLmNjYy5ob3N0ZWQubWFya2V0cGxhY2UudjIuQ3VzdG9tZXJM",
            "aWNlbnNlLkVkaXRpb25zQgIYARIKCgJpZBhlIAEoCRITCgtjdXN0b21lcl9p",
            "ZBhmIAEoCRpZCghFZGl0aW9ucxIXCgplZGl0aW9uX2lkGJUDIAEoCUICGAES",
            "FwoKc2VhdF9jb3VudBiWAyABKAVCAhgBEhsKDmFzc2lnbmVkX3NlYXRzGJkD",
            "IAEoBUICGAEirwUKE0xpY2Vuc2VOb3RpZmljYXRpb24SCgoCaWQYASABKAkS",
            "FgoOYXBwbGljYXRpb25faWQYAiABKAkSEQoJdGltZXN0YW1wGAMgASgDEhMK",
            "C2N1c3RvbWVyX2lkGAQgASgJEgwKBGtpbmQYBSABKAkSTQoKcHJvdmlzaW9u",
            "cxgGIAMoCzI5LmNjYy5ob3N0ZWQubWFya2V0cGxhY2UudjIuTGljZW5zZU5v",
            "dGlmaWNhdGlvbi5Qcm92aXNpb25zEkkKCGV4cGlyaWVzGAcgAygLMjcuY2Nj",
            "Lmhvc3RlZC5tYXJrZXRwbGFjZS52Mi5MaWNlbnNlTm90aWZpY2F0aW9uLkV4",
            "cGlyaWVzElMKDXJlYXNzaWdubWVudHMYCCADKAsyPC5jY2MuaG9zdGVkLm1h",
            "cmtldHBsYWNlLnYyLkxpY2Vuc2VOb3RpZmljYXRpb24uUmVhc3NpZ25tZW50",
            "cxJHCgdkZWxldGVzGAkgAygLMjYuY2NjLmhvc3RlZC5tYXJrZXRwbGFjZS52",
            "Mi5MaWNlbnNlTm90aWZpY2F0aW9uLkRlbGV0ZXMaMAoHRGVsZXRlcxIMCgRr",
            "aW5kGAEgASgJEhcKCmVkaXRpb25faWQYhQcgASgJQgIYARoxCghFeHBpcmll",
            "cxIMCgRraW5kGAEgASgJEhcKCmVkaXRpb25faWQYvQUgASgJQgIYARpICgpQ",
            "cm92aXNpb25zEgwKBGtpbmQYASABKAkSFwoKZWRpdGlvbl9pZBjZBCABKAlC",
            "AhgBEhMKCnNlYXRfY291bnQY2gQgASgDGlcKDVJlYXNzaWdubWVudHMSDAoE",
            "a2luZBgBIAEoCRIQCgd1c2VyX2lkGKEGIAEoCRINCgR0eXBlGKIGIAEoCRIX",
            "CgplZGl0aW9uX2lkGKMGIAEoCUICGAEiigEKF0xpY2Vuc2VOb3RpZmljYXRp",
            "b25MaXN0EgwKBGtpbmQYASABKAkSRgoNbm90aWZpY2F0aW9ucxjvByADKAsy",
            "Li5jY2MuaG9zdGVkLm1hcmtldHBsYWNlLnYyLkxpY2Vuc2VOb3RpZmljYXRp",
            "b24SGQoPbmV4dF9wYWdlX3Rva2VuGPqRBiABKAkinQEKC1VzZXJMaWNlbnNl",
            "EgwKBGtpbmQYASABKAkSDwoHZW5hYmxlZBgCIAEoCBINCgVzdGF0ZRgDIAEo",
            "CRIWCgplZGl0aW9uX2lkGAQgASgJQgIYARITCgtjdXN0b21lcl9pZBgFIAEo",
            "CRIWCg5hcHBsaWNhdGlvbl9pZBgGIAEoCRIKCgJpZBhlIAEoCRIPCgd1c2Vy",
            "X2lkGGYgASgJQp0BCiRjb20uZ29vZ2xlLmNjYy5ob3N0ZWQubWFya2V0cGxh",
            "Y2UudjJCDlJlc291cmNlc1Byb3RvUAFaS2dvb2dsZS5nb2xhbmcub3JnL2dl",
            "bnByb3RvL2dvb2dsZWFwaXMvY2NjL2hvc3RlZC9tYXJrZXRwbGFjZS92Mjtt",
            "YXJrZXRwbGFjZcoCFUdvb2dsZVxBcHBzXE1hcmtldFxWMmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Ccc.Hosted.Marketplace.V2.CustomerLicense), global::Ccc.Hosted.Marketplace.V2.CustomerLicense.Parser, new[]{ "Kind", "State", "ApplicationId", "Editions", "Id", "CustomerId" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Ccc.Hosted.Marketplace.V2.CustomerLicense.Types.Editions), global::Ccc.Hosted.Marketplace.V2.CustomerLicense.Types.Editions.Parser, new[]{ "EditionId", "SeatCount", "AssignedSeats" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ccc.Hosted.Marketplace.V2.LicenseNotification), global::Ccc.Hosted.Marketplace.V2.LicenseNotification.Parser, new[]{ "Id", "ApplicationId", "Timestamp", "CustomerId", "Kind", "Provisions", "Expiries", "Reassignments", "Deletes" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Ccc.Hosted.Marketplace.V2.LicenseNotification.Types.Deletes), global::Ccc.Hosted.Marketplace.V2.LicenseNotification.Types.Deletes.Parser, new[]{ "Kind", "EditionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ccc.Hosted.Marketplace.V2.LicenseNotification.Types.Expiries), global::Ccc.Hosted.Marketplace.V2.LicenseNotification.Types.Expiries.Parser, new[]{ "Kind", "EditionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ccc.Hosted.Marketplace.V2.LicenseNotification.Types.Provisions), global::Ccc.Hosted.Marketplace.V2.LicenseNotification.Types.Provisions.Parser, new[]{ "Kind", "EditionId", "SeatCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ccc.Hosted.Marketplace.V2.LicenseNotification.Types.Reassignments), global::Ccc.Hosted.Marketplace.V2.LicenseNotification.Types.Reassignments.Parser, new[]{ "Kind", "UserId", "Type", "EditionId" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ccc.Hosted.Marketplace.V2.LicenseNotificationList), global::Ccc.Hosted.Marketplace.V2.LicenseNotificationList.Parser, new[]{ "Kind", "Notifications", "NextPageToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ccc.Hosted.Marketplace.V2.UserLicense), global::Ccc.Hosted.Marketplace.V2.UserLicense.Parser, new[]{ "Kind", "Enabled", "State", "EditionId", "CustomerId", "ApplicationId", "Id", "UserId" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CustomerLicense : pb::IMessage<CustomerLicense>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CustomerLicense> _parser = new pb::MessageParser<CustomerLicense>(() => new CustomerLicense());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CustomerLicense> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ccc.Hosted.Marketplace.V2.ResourcesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomerLicense() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomerLicense(CustomerLicense other) : this() {
      kind_ = other.kind_;
      state_ = other.state_;
      applicationId_ = other.applicationId_;
      editions_ = other.editions_.Clone();
      id_ = other.id_;
      customerId_ = other.customerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomerLicense Clone() {
      return new CustomerLicense(this);
    }

    /// <summary>Field number for the "kind" field.</summary>
    public const int KindFieldNumber = 1;
    private string kind_ = "";
    /// <summary>
    /// The type of API resource. This is always appsmarket#customerLicense.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Kind {
      get { return kind_; }
      set {
        kind_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 2;
    private string state_ = "";
    /// <summary>
    /// The customer's license status. One of:
    ///
    /// - `ACTIVE`: The customer has a valid license.
    /// - `UNLICENSED`: There is no license: either this customer has never
    /// installed your application, or else has deleted it.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string State {
      get { return state_; }
      set {
        state_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "application_id" field.</summary>
    public const int ApplicationIdFieldNumber = 3;
    private string applicationId_ = "";
    /// <summary>
    /// The ID of the application corresponding to this license query.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "editions" field.</summary>
    public const int EditionsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Ccc.Hosted.Marketplace.V2.CustomerLicense.Types.Editions> _repeated_editions_codec
        = pb::FieldCodec.ForMessage(34, global::Ccc.Hosted.Marketplace.V2.CustomerLicense.Types.Editions.Parser);
    private readonly pbc::RepeatedField<global::Ccc.Hosted.Marketplace.V2.CustomerLicense.Types.Editions> editions_ = new pbc::RepeatedField<global::Ccc.Hosted.Marketplace.V2.CustomerLicense.Types.Editions>();
    /// <summary>
    /// (Deprecated)
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ccc.Hosted.Marketplace.V2.CustomerLicense.Types.Editions> Editions {
      get { return editions_; }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 101;
    private string id_ = "";
    /// <summary>
    /// The ID of the customer license.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "customer_id" field.</summary>
    public const int CustomerIdFieldNumber = 102;
    private string customerId_ = "";
    /// <summary>
    /// The domain name of the customer.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomerId {
      get { return customerId_; }
      set {
        customerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CustomerLicense);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CustomerLicense other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Kind != other.Kind) return false;
      if (State != other.State) return false;
      if (ApplicationId != other.ApplicationId) return false;
      if(!editions_.Equals(other.editions_)) return false;
      if (Id != other.Id) return false;
      if (CustomerId != other.CustomerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Kind.Length != 0) hash ^= Kind.GetHashCode();
      if (State.Length != 0) hash ^= State.GetHashCode();
      if (ApplicationId.Length != 0) hash ^= ApplicationId.GetHashCode();
      hash ^= editions_.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (CustomerId.Length != 0) hash ^= CustomerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Kind.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Kind);
      }
      if (State.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(State);
      }
      if (ApplicationId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ApplicationId);
      }
      editions_.WriteTo(output, _repeated_editions_codec);
      if (Id.Length != 0) {
        output.WriteRawTag(170, 6);
        output.WriteString(Id);
      }
      if (CustomerId.Length != 0) {
        output.WriteRawTag(178, 6);
        output.WriteString(CustomerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Kind.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Kind);
      }
      if (State.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(State);
      }
      if (ApplicationId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ApplicationId);
      }
      editions_.WriteTo(ref output, _repeated_editions_codec);
      if (Id.Length != 0) {
        output.WriteRawTag(170, 6);
        output.WriteString(Id);
      }
      if (CustomerId.Length != 0) {
        output.WriteRawTag(178, 6);
        output.WriteString(CustomerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Kind.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Kind);
      }
      if (State.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(State);
      }
      if (ApplicationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ApplicationId);
      }
      size += editions_.CalculateSize(_repeated_editions_codec);
      if (Id.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (CustomerId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CustomerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CustomerLicense other) {
      if (other == null) {
        return;
      }
      if (other.Kind.Length != 0) {
        Kind = other.Kind;
      }
      if (other.State.Length != 0) {
        State = other.State;
      }
      if (other.ApplicationId.Length != 0) {
        ApplicationId = other.ApplicationId;
      }
      editions_.Add(other.editions_);
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.CustomerId.Length != 0) {
        CustomerId = other.CustomerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Kind = input.ReadString();
            break;
          }
          case 18: {
            State = input.ReadString();
            break;
          }
          case 26: {
            ApplicationId = input.ReadString();
            break;
          }
          case 34: {
            editions_.AddEntriesFrom(input, _repeated_editions_codec);
            break;
          }
          case 810: {
            Id = input.ReadString();
            break;
          }
          case 818: {
            CustomerId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Kind = input.ReadString();
            break;
          }
          case 18: {
            State = input.ReadString();
            break;
          }
          case 26: {
            ApplicationId = input.ReadString();
            break;
          }
          case 34: {
            editions_.AddEntriesFrom(ref input, _repeated_editions_codec);
            break;
          }
          case 810: {
            Id = input.ReadString();
            break;
          }
          case 818: {
            CustomerId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CustomerLicense message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Editions : pb::IMessage<Editions>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Editions> _parser = new pb::MessageParser<Editions>(() => new Editions());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Editions> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ccc.Hosted.Marketplace.V2.CustomerLicense.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Editions() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Editions(Editions other) : this() {
          editionId_ = other.editionId_;
          seatCount_ = other.seatCount_;
          assignedSeats_ = other.assignedSeats_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Editions Clone() {
          return new Editions(this);
        }

        /// <summary>Field number for the "edition_id" field.</summary>
        public const int EditionIdFieldNumber = 405;
        private string editionId_ = "";
        /// <summary>
        /// (Deprecated)
        /// </summary>
        [global::System.ObsoleteAttribute]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string EditionId {
          get { return editionId_; }
          set {
            editionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "seat_count" field.</summary>
        public const int SeatCountFieldNumber = 406;
        private int seatCount_;
        /// <summary>
        /// (Deprecated)
        /// </summary>
        [global::System.ObsoleteAttribute]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int SeatCount {
          get { return seatCount_; }
          set {
            seatCount_ = value;
          }
        }

        /// <summary>Field number for the "assigned_seats" field.</summary>
        public const int AssignedSeatsFieldNumber = 409;
        private int assignedSeats_;
        /// <summary>
        /// (Deprecated)
        /// </summary>
        [global::System.ObsoleteAttribute]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int AssignedSeats {
          get { return assignedSeats_; }
          set {
            assignedSeats_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Editions);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Editions other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (EditionId != other.EditionId) return false;
          if (SeatCount != other.SeatCount) return false;
          if (AssignedSeats != other.AssignedSeats) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (EditionId.Length != 0) hash ^= EditionId.GetHashCode();
          if (SeatCount != 0) hash ^= SeatCount.GetHashCode();
          if (AssignedSeats != 0) hash ^= AssignedSeats.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (EditionId.Length != 0) {
            output.WriteRawTag(170, 25);
            output.WriteString(EditionId);
          }
          if (SeatCount != 0) {
            output.WriteRawTag(176, 25);
            output.WriteInt32(SeatCount);
          }
          if (AssignedSeats != 0) {
            output.WriteRawTag(200, 25);
            output.WriteInt32(AssignedSeats);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (EditionId.Length != 0) {
            output.WriteRawTag(170, 25);
            output.WriteString(EditionId);
          }
          if (SeatCount != 0) {
            output.WriteRawTag(176, 25);
            output.WriteInt32(SeatCount);
          }
          if (AssignedSeats != 0) {
            output.WriteRawTag(200, 25);
            output.WriteInt32(AssignedSeats);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (EditionId.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(EditionId);
          }
          if (SeatCount != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(SeatCount);
          }
          if (AssignedSeats != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(AssignedSeats);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Editions other) {
          if (other == null) {
            return;
          }
          if (other.EditionId.Length != 0) {
            EditionId = other.EditionId;
          }
          if (other.SeatCount != 0) {
            SeatCount = other.SeatCount;
          }
          if (other.AssignedSeats != 0) {
            AssignedSeats = other.AssignedSeats;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 3242: {
                EditionId = input.ReadString();
                break;
              }
              case 3248: {
                SeatCount = input.ReadInt32();
                break;
              }
              case 3272: {
                AssignedSeats = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 3242: {
                EditionId = input.ReadString();
                break;
              }
              case 3248: {
                SeatCount = input.ReadInt32();
                break;
              }
              case 3272: {
                AssignedSeats = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class LicenseNotification : pb::IMessage<LicenseNotification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LicenseNotification> _parser = new pb::MessageParser<LicenseNotification>(() => new LicenseNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LicenseNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ccc.Hosted.Marketplace.V2.ResourcesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LicenseNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LicenseNotification(LicenseNotification other) : this() {
      id_ = other.id_;
      applicationId_ = other.applicationId_;
      timestamp_ = other.timestamp_;
      customerId_ = other.customerId_;
      kind_ = other.kind_;
      provisions_ = other.provisions_.Clone();
      expiries_ = other.expiries_.Clone();
      reassignments_ = other.reassignments_.Clone();
      deletes_ = other.deletes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LicenseNotification Clone() {
      return new LicenseNotification(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// The ID of the license notification.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "application_id" field.</summary>
    public const int ApplicationIdFieldNumber = 2;
    private string applicationId_ = "";
    /// <summary>
    /// The ID of the application according to this notification.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 3;
    private long timestamp_;
    /// <summary>
    /// The time the event occurred, measuring in milliseconds since the UNIX
    /// epoch.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "customer_id" field.</summary>
    public const int CustomerIdFieldNumber = 4;
    private string customerId_ = "";
    /// <summary>
    /// The domain name of the customer corresponding to this notification.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomerId {
      get { return customerId_; }
      set {
        customerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "kind" field.</summary>
    public const int KindFieldNumber = 5;
    private string kind_ = "";
    /// <summary>
    /// The type of API resource. This is always appsmarket#licenseNotification.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Kind {
      get { return kind_; }
      set {
        kind_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "provisions" field.</summary>
    public const int ProvisionsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Ccc.Hosted.Marketplace.V2.LicenseNotification.Types.Provisions> _repeated_provisions_codec
        = pb::FieldCodec.ForMessage(50, global::Ccc.Hosted.Marketplace.V2.LicenseNotification.Types.Provisions.Parser);
    private readonly pbc::RepeatedField<global::Ccc.Hosted.Marketplace.V2.LicenseNotification.Types.Provisions> provisions_ = new pbc::RepeatedField<global::Ccc.Hosted.Marketplace.V2.LicenseNotification.Types.Provisions>();
    /// <summary>
    /// The list of provisioning notifications.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ccc.Hosted.Marketplace.V2.LicenseNotification.Types.Provisions> Provisions {
      get { return provisions_; }
    }

    /// <summary>Field number for the "expiries" field.</summary>
    public const int ExpiriesFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Ccc.Hosted.Marketplace.V2.LicenseNotification.Types.Expiries> _repeated_expiries_codec
        = pb::FieldCodec.ForMessage(58, global::Ccc.Hosted.Marketplace.V2.LicenseNotification.Types.Expiries.Parser);
    private readonly pbc::RepeatedField<global::Ccc.Hosted.Marketplace.V2.LicenseNotification.Types.Expiries> expiries_ = new pbc::RepeatedField<global::Ccc.Hosted.Marketplace.V2.LicenseNotification.Types.Expiries>();
    /// <summary>
    /// The list of expiry notifications.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ccc.Hosted.Marketplace.V2.LicenseNotification.Types.Expiries> Expiries {
      get { return expiries_; }
    }

    /// <summary>Field number for the "reassignments" field.</summary>
    public const int ReassignmentsFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Ccc.Hosted.Marketplace.V2.LicenseNotification.Types.Reassignments> _repeated_reassignments_codec
        = pb::FieldCodec.ForMessage(66, global::Ccc.Hosted.Marketplace.V2.LicenseNotification.Types.Reassignments.Parser);
    private readonly pbc::RepeatedField<global::Ccc.Hosted.Marketplace.V2.LicenseNotification.Types.Reassignments> reassignments_ = new pbc::RepeatedField<global::Ccc.Hosted.Marketplace.V2.LicenseNotification.Types.Reassignments>();
    /// <summary>
    /// The list of reassignment notifications.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ccc.Hosted.Marketplace.V2.LicenseNotification.Types.Reassignments> Reassignments {
      get { return reassignments_; }
    }

    /// <summary>Field number for the "deletes" field.</summary>
    public const int DeletesFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Ccc.Hosted.Marketplace.V2.LicenseNotification.Types.Deletes> _repeated_deletes_codec
        = pb::FieldCodec.ForMessage(74, global::Ccc.Hosted.Marketplace.V2.LicenseNotification.Types.Deletes.Parser);
    private readonly pbc::RepeatedField<global::Ccc.Hosted.Marketplace.V2.LicenseNotification.Types.Deletes> deletes_ = new pbc::RepeatedField<global::Ccc.Hosted.Marketplace.V2.LicenseNotification.Types.Deletes>();
    /// <summary>
    /// The list of deletion notifications.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ccc.Hosted.Marketplace.V2.LicenseNotification.Types.Deletes> Deletes {
      get { return deletes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LicenseNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LicenseNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ApplicationId != other.ApplicationId) return false;
      if (Timestamp != other.Timestamp) return false;
      if (CustomerId != other.CustomerId) return false;
      if (Kind != other.Kind) return false;
      if(!provisions_.Equals(other.provisions_)) return false;
      if(!expiries_.Equals(other.expiries_)) return false;
      if(!reassignments_.Equals(other.reassignments_)) return false;
      if(!deletes_.Equals(other.deletes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (ApplicationId.Length != 0) hash ^= ApplicationId.GetHashCode();
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (CustomerId.Length != 0) hash ^= CustomerId.GetHashCode();
      if (Kind.Length != 0) hash ^= Kind.GetHashCode();
      hash ^= provisions_.GetHashCode();
      hash ^= expiries_.GetHashCode();
      hash ^= reassignments_.GetHashCode();
      hash ^= deletes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (ApplicationId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ApplicationId);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Timestamp);
      }
      if (CustomerId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CustomerId);
      }
      if (Kind.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Kind);
      }
      provisions_.WriteTo(output, _repeated_provisions_codec);
      expiries_.WriteTo(output, _repeated_expiries_codec);
      reassignments_.WriteTo(output, _repeated_reassignments_codec);
      deletes_.WriteTo(output, _repeated_deletes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (ApplicationId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ApplicationId);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Timestamp);
      }
      if (CustomerId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CustomerId);
      }
      if (Kind.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Kind);
      }
      provisions_.WriteTo(ref output, _repeated_provisions_codec);
      expiries_.WriteTo(ref output, _repeated_expiries_codec);
      reassignments_.WriteTo(ref output, _repeated_reassignments_codec);
      deletes_.WriteTo(ref output, _repeated_deletes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (ApplicationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ApplicationId);
      }
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (CustomerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CustomerId);
      }
      if (Kind.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Kind);
      }
      size += provisions_.CalculateSize(_repeated_provisions_codec);
      size += expiries_.CalculateSize(_repeated_expiries_codec);
      size += reassignments_.CalculateSize(_repeated_reassignments_codec);
      size += deletes_.CalculateSize(_repeated_deletes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LicenseNotification other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.ApplicationId.Length != 0) {
        ApplicationId = other.ApplicationId;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      if (other.CustomerId.Length != 0) {
        CustomerId = other.CustomerId;
      }
      if (other.Kind.Length != 0) {
        Kind = other.Kind;
      }
      provisions_.Add(other.provisions_);
      expiries_.Add(other.expiries_);
      reassignments_.Add(other.reassignments_);
      deletes_.Add(other.deletes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            ApplicationId = input.ReadString();
            break;
          }
          case 24: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 34: {
            CustomerId = input.ReadString();
            break;
          }
          case 42: {
            Kind = input.ReadString();
            break;
          }
          case 50: {
            provisions_.AddEntriesFrom(input, _repeated_provisions_codec);
            break;
          }
          case 58: {
            expiries_.AddEntriesFrom(input, _repeated_expiries_codec);
            break;
          }
          case 66: {
            reassignments_.AddEntriesFrom(input, _repeated_reassignments_codec);
            break;
          }
          case 74: {
            deletes_.AddEntriesFrom(input, _repeated_deletes_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            ApplicationId = input.ReadString();
            break;
          }
          case 24: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 34: {
            CustomerId = input.ReadString();
            break;
          }
          case 42: {
            Kind = input.ReadString();
            break;
          }
          case 50: {
            provisions_.AddEntriesFrom(ref input, _repeated_provisions_codec);
            break;
          }
          case 58: {
            expiries_.AddEntriesFrom(ref input, _repeated_expiries_codec);
            break;
          }
          case 66: {
            reassignments_.AddEntriesFrom(ref input, _repeated_reassignments_codec);
            break;
          }
          case 74: {
            deletes_.AddEntriesFrom(ref input, _repeated_deletes_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LicenseNotification message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Deletes : pb::IMessage<Deletes>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Deletes> _parser = new pb::MessageParser<Deletes>(() => new Deletes());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Deletes> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ccc.Hosted.Marketplace.V2.LicenseNotification.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Deletes() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Deletes(Deletes other) : this() {
          kind_ = other.kind_;
          editionId_ = other.editionId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Deletes Clone() {
          return new Deletes(this);
        }

        /// <summary>Field number for the "kind" field.</summary>
        public const int KindFieldNumber = 1;
        private string kind_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Kind {
          get { return kind_; }
          set {
            kind_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "edition_id" field.</summary>
        public const int EditionIdFieldNumber = 901;
        private string editionId_ = "";
        /// <summary>
        /// (Deprecated)
        /// </summary>
        [global::System.ObsoleteAttribute]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string EditionId {
          get { return editionId_; }
          set {
            editionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Deletes);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Deletes other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Kind != other.Kind) return false;
          if (EditionId != other.EditionId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Kind.Length != 0) hash ^= Kind.GetHashCode();
          if (EditionId.Length != 0) hash ^= EditionId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Kind.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Kind);
          }
          if (EditionId.Length != 0) {
            output.WriteRawTag(170, 56);
            output.WriteString(EditionId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Kind.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Kind);
          }
          if (EditionId.Length != 0) {
            output.WriteRawTag(170, 56);
            output.WriteString(EditionId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Kind.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Kind);
          }
          if (EditionId.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(EditionId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Deletes other) {
          if (other == null) {
            return;
          }
          if (other.Kind.Length != 0) {
            Kind = other.Kind;
          }
          if (other.EditionId.Length != 0) {
            EditionId = other.EditionId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Kind = input.ReadString();
                break;
              }
              case 7210: {
                EditionId = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Kind = input.ReadString();
                break;
              }
              case 7210: {
                EditionId = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Expiries : pb::IMessage<Expiries>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Expiries> _parser = new pb::MessageParser<Expiries>(() => new Expiries());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Expiries> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ccc.Hosted.Marketplace.V2.LicenseNotification.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Expiries() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Expiries(Expiries other) : this() {
          kind_ = other.kind_;
          editionId_ = other.editionId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Expiries Clone() {
          return new Expiries(this);
        }

        /// <summary>Field number for the "kind" field.</summary>
        public const int KindFieldNumber = 1;
        private string kind_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Kind {
          get { return kind_; }
          set {
            kind_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "edition_id" field.</summary>
        public const int EditionIdFieldNumber = 701;
        private string editionId_ = "";
        /// <summary>
        /// (Deprecated)
        /// </summary>
        [global::System.ObsoleteAttribute]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string EditionId {
          get { return editionId_; }
          set {
            editionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Expiries);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Expiries other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Kind != other.Kind) return false;
          if (EditionId != other.EditionId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Kind.Length != 0) hash ^= Kind.GetHashCode();
          if (EditionId.Length != 0) hash ^= EditionId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Kind.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Kind);
          }
          if (EditionId.Length != 0) {
            output.WriteRawTag(234, 43);
            output.WriteString(EditionId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Kind.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Kind);
          }
          if (EditionId.Length != 0) {
            output.WriteRawTag(234, 43);
            output.WriteString(EditionId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Kind.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Kind);
          }
          if (EditionId.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(EditionId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Expiries other) {
          if (other == null) {
            return;
          }
          if (other.Kind.Length != 0) {
            Kind = other.Kind;
          }
          if (other.EditionId.Length != 0) {
            EditionId = other.EditionId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Kind = input.ReadString();
                break;
              }
              case 5610: {
                EditionId = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Kind = input.ReadString();
                break;
              }
              case 5610: {
                EditionId = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Provisions : pb::IMessage<Provisions>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Provisions> _parser = new pb::MessageParser<Provisions>(() => new Provisions());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Provisions> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ccc.Hosted.Marketplace.V2.LicenseNotification.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Provisions() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Provisions(Provisions other) : this() {
          kind_ = other.kind_;
          editionId_ = other.editionId_;
          seatCount_ = other.seatCount_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Provisions Clone() {
          return new Provisions(this);
        }

        /// <summary>Field number for the "kind" field.</summary>
        public const int KindFieldNumber = 1;
        private string kind_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Kind {
          get { return kind_; }
          set {
            kind_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "edition_id" field.</summary>
        public const int EditionIdFieldNumber = 601;
        private string editionId_ = "";
        /// <summary>
        /// (Deprecated)
        /// </summary>
        [global::System.ObsoleteAttribute]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string EditionId {
          get { return editionId_; }
          set {
            editionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "seat_count" field.</summary>
        public const int SeatCountFieldNumber = 602;
        private long seatCount_;
        /// <summary>
        /// The number of seats that were provisioned.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long SeatCount {
          get { return seatCount_; }
          set {
            seatCount_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Provisions);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Provisions other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Kind != other.Kind) return false;
          if (EditionId != other.EditionId) return false;
          if (SeatCount != other.SeatCount) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Kind.Length != 0) hash ^= Kind.GetHashCode();
          if (EditionId.Length != 0) hash ^= EditionId.GetHashCode();
          if (SeatCount != 0L) hash ^= SeatCount.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Kind.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Kind);
          }
          if (EditionId.Length != 0) {
            output.WriteRawTag(202, 37);
            output.WriteString(EditionId);
          }
          if (SeatCount != 0L) {
            output.WriteRawTag(208, 37);
            output.WriteInt64(SeatCount);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Kind.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Kind);
          }
          if (EditionId.Length != 0) {
            output.WriteRawTag(202, 37);
            output.WriteString(EditionId);
          }
          if (SeatCount != 0L) {
            output.WriteRawTag(208, 37);
            output.WriteInt64(SeatCount);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Kind.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Kind);
          }
          if (EditionId.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(EditionId);
          }
          if (SeatCount != 0L) {
            size += 2 + pb::CodedOutputStream.ComputeInt64Size(SeatCount);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Provisions other) {
          if (other == null) {
            return;
          }
          if (other.Kind.Length != 0) {
            Kind = other.Kind;
          }
          if (other.EditionId.Length != 0) {
            EditionId = other.EditionId;
          }
          if (other.SeatCount != 0L) {
            SeatCount = other.SeatCount;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Kind = input.ReadString();
                break;
              }
              case 4810: {
                EditionId = input.ReadString();
                break;
              }
              case 4816: {
                SeatCount = input.ReadInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Kind = input.ReadString();
                break;
              }
              case 4810: {
                EditionId = input.ReadString();
                break;
              }
              case 4816: {
                SeatCount = input.ReadInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Reassignments : pb::IMessage<Reassignments>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Reassignments> _parser = new pb::MessageParser<Reassignments>(() => new Reassignments());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Reassignments> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ccc.Hosted.Marketplace.V2.LicenseNotification.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Reassignments() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Reassignments(Reassignments other) : this() {
          kind_ = other.kind_;
          userId_ = other.userId_;
          type_ = other.type_;
          editionId_ = other.editionId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Reassignments Clone() {
          return new Reassignments(this);
        }

        /// <summary>Field number for the "kind" field.</summary>
        public const int KindFieldNumber = 1;
        private string kind_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Kind {
          get { return kind_; }
          set {
            kind_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "user_id" field.</summary>
        public const int UserIdFieldNumber = 801;
        private string userId_ = "";
        /// <summary>
        /// The email address of the reassigned user.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string UserId {
          get { return userId_; }
          set {
            userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 802;
        private string type_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Type {
          get { return type_; }
          set {
            type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "edition_id" field.</summary>
        public const int EditionIdFieldNumber = 803;
        private string editionId_ = "";
        /// <summary>
        /// (Deprecated)
        /// </summary>
        [global::System.ObsoleteAttribute]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string EditionId {
          get { return editionId_; }
          set {
            editionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Reassignments);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Reassignments other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Kind != other.Kind) return false;
          if (UserId != other.UserId) return false;
          if (Type != other.Type) return false;
          if (EditionId != other.EditionId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Kind.Length != 0) hash ^= Kind.GetHashCode();
          if (UserId.Length != 0) hash ^= UserId.GetHashCode();
          if (Type.Length != 0) hash ^= Type.GetHashCode();
          if (EditionId.Length != 0) hash ^= EditionId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Kind.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Kind);
          }
          if (UserId.Length != 0) {
            output.WriteRawTag(138, 50);
            output.WriteString(UserId);
          }
          if (Type.Length != 0) {
            output.WriteRawTag(146, 50);
            output.WriteString(Type);
          }
          if (EditionId.Length != 0) {
            output.WriteRawTag(154, 50);
            output.WriteString(EditionId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Kind.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Kind);
          }
          if (UserId.Length != 0) {
            output.WriteRawTag(138, 50);
            output.WriteString(UserId);
          }
          if (Type.Length != 0) {
            output.WriteRawTag(146, 50);
            output.WriteString(Type);
          }
          if (EditionId.Length != 0) {
            output.WriteRawTag(154, 50);
            output.WriteString(EditionId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Kind.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Kind);
          }
          if (UserId.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(UserId);
          }
          if (Type.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(Type);
          }
          if (EditionId.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(EditionId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Reassignments other) {
          if (other == null) {
            return;
          }
          if (other.Kind.Length != 0) {
            Kind = other.Kind;
          }
          if (other.UserId.Length != 0) {
            UserId = other.UserId;
          }
          if (other.Type.Length != 0) {
            Type = other.Type;
          }
          if (other.EditionId.Length != 0) {
            EditionId = other.EditionId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Kind = input.ReadString();
                break;
              }
              case 6410: {
                UserId = input.ReadString();
                break;
              }
              case 6418: {
                Type = input.ReadString();
                break;
              }
              case 6426: {
                EditionId = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Kind = input.ReadString();
                break;
              }
              case 6410: {
                UserId = input.ReadString();
                break;
              }
              case 6418: {
                Type = input.ReadString();
                break;
              }
              case 6426: {
                EditionId = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class LicenseNotificationList : pb::IMessage<LicenseNotificationList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LicenseNotificationList> _parser = new pb::MessageParser<LicenseNotificationList>(() => new LicenseNotificationList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LicenseNotificationList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ccc.Hosted.Marketplace.V2.ResourcesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LicenseNotificationList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LicenseNotificationList(LicenseNotificationList other) : this() {
      kind_ = other.kind_;
      notifications_ = other.notifications_.Clone();
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LicenseNotificationList Clone() {
      return new LicenseNotificationList(this);
    }

    /// <summary>Field number for the "kind" field.</summary>
    public const int KindFieldNumber = 1;
    private string kind_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Kind {
      get { return kind_; }
      set {
        kind_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "notifications" field.</summary>
    public const int NotificationsFieldNumber = 1007;
    private static readonly pb::FieldCodec<global::Ccc.Hosted.Marketplace.V2.LicenseNotification> _repeated_notifications_codec
        = pb::FieldCodec.ForMessage(8058, global::Ccc.Hosted.Marketplace.V2.LicenseNotification.Parser);
    private readonly pbc::RepeatedField<global::Ccc.Hosted.Marketplace.V2.LicenseNotification> notifications_ = new pbc::RepeatedField<global::Ccc.Hosted.Marketplace.V2.LicenseNotification>();
    /// <summary>
    /// The list of notifications. One or more of:
    ///
    /// - `provisions`: A new license of the application has been provisioned.
    /// - `expiries`: A license of the application has expired.
    /// - `deletions`: An application has been deleted from a domain.
    /// - `reassignments`: An administrator has assigned or revoked a seat license
    /// for the application on the provided domain.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ccc.Hosted.Marketplace.V2.LicenseNotification> Notifications {
      get { return notifications_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 100602;
    private string nextPageToken_ = "";
    /// <summary>
    /// The token used to continue querying for notifications after the final
    /// notification in the current result set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LicenseNotificationList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LicenseNotificationList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Kind != other.Kind) return false;
      if(!notifications_.Equals(other.notifications_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Kind.Length != 0) hash ^= Kind.GetHashCode();
      hash ^= notifications_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Kind.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Kind);
      }
      notifications_.WriteTo(output, _repeated_notifications_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(210, 143, 49);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Kind.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Kind);
      }
      notifications_.WriteTo(ref output, _repeated_notifications_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(210, 143, 49);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Kind.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Kind);
      }
      size += notifications_.CalculateSize(_repeated_notifications_codec);
      if (NextPageToken.Length != 0) {
        size += 3 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LicenseNotificationList other) {
      if (other == null) {
        return;
      }
      if (other.Kind.Length != 0) {
        Kind = other.Kind;
      }
      notifications_.Add(other.notifications_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Kind = input.ReadString();
            break;
          }
          case 8058: {
            notifications_.AddEntriesFrom(input, _repeated_notifications_codec);
            break;
          }
          case 804818: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Kind = input.ReadString();
            break;
          }
          case 8058: {
            notifications_.AddEntriesFrom(ref input, _repeated_notifications_codec);
            break;
          }
          case 804818: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserLicense : pb::IMessage<UserLicense>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserLicense> _parser = new pb::MessageParser<UserLicense>(() => new UserLicense());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserLicense> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ccc.Hosted.Marketplace.V2.ResourcesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserLicense() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserLicense(UserLicense other) : this() {
      kind_ = other.kind_;
      enabled_ = other.enabled_;
      state_ = other.state_;
      editionId_ = other.editionId_;
      customerId_ = other.customerId_;
      applicationId_ = other.applicationId_;
      id_ = other.id_;
      userId_ = other.userId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserLicense Clone() {
      return new UserLicense(this);
    }

    /// <summary>Field number for the "kind" field.</summary>
    public const int KindFieldNumber = 1;
    private string kind_ = "";
    /// <summary>
    /// The type of API resource. This is always appsmarket#userLicense.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Kind {
      get { return kind_; }
      set {
        kind_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "enabled" field.</summary>
    public const int EnabledFieldNumber = 2;
    private bool enabled_;
    /// <summary>
    /// The domain administrator has activated the application for this domain.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Enabled {
      get { return enabled_; }
      set {
        enabled_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 3;
    private string state_ = "";
    /// <summary>
    /// The user's licensing status. One of:
    ///
    /// - `ACTIVE`: The user has a valid license and should be permitted to use the
    /// application.
    /// - `UNLICENSED`: The administrator of this user's domain never assigned a
    /// seat for the application to this user.
    /// - `EXPIRED`: The administrator assigned a seat to this user, but the
    /// license is expired.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string State {
      get { return state_; }
      set {
        state_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "edition_id" field.</summary>
    public const int EditionIdFieldNumber = 4;
    private string editionId_ = "";
    /// <summary>
    /// (Deprecated)
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EditionId {
      get { return editionId_; }
      set {
        editionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "customer_id" field.</summary>
    public const int CustomerIdFieldNumber = 5;
    private string customerId_ = "";
    /// <summary>
    /// The domain name of the user.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomerId {
      get { return customerId_; }
      set {
        customerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "application_id" field.</summary>
    public const int ApplicationIdFieldNumber = 6;
    private string applicationId_ = "";
    /// <summary>
    /// The ID of the application corresponding to the license query.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 101;
    private string id_ = "";
    /// <summary>
    /// The ID of user license.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 102;
    private string userId_ = "";
    /// <summary>
    /// The email address of the user.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserLicense);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserLicense other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Kind != other.Kind) return false;
      if (Enabled != other.Enabled) return false;
      if (State != other.State) return false;
      if (EditionId != other.EditionId) return false;
      if (CustomerId != other.CustomerId) return false;
      if (ApplicationId != other.ApplicationId) return false;
      if (Id != other.Id) return false;
      if (UserId != other.UserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Kind.Length != 0) hash ^= Kind.GetHashCode();
      if (Enabled != false) hash ^= Enabled.GetHashCode();
      if (State.Length != 0) hash ^= State.GetHashCode();
      if (EditionId.Length != 0) hash ^= EditionId.GetHashCode();
      if (CustomerId.Length != 0) hash ^= CustomerId.GetHashCode();
      if (ApplicationId.Length != 0) hash ^= ApplicationId.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Kind.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Kind);
      }
      if (Enabled != false) {
        output.WriteRawTag(16);
        output.WriteBool(Enabled);
      }
      if (State.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(State);
      }
      if (EditionId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(EditionId);
      }
      if (CustomerId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CustomerId);
      }
      if (ApplicationId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ApplicationId);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(170, 6);
        output.WriteString(Id);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(178, 6);
        output.WriteString(UserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Kind.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Kind);
      }
      if (Enabled != false) {
        output.WriteRawTag(16);
        output.WriteBool(Enabled);
      }
      if (State.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(State);
      }
      if (EditionId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(EditionId);
      }
      if (CustomerId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CustomerId);
      }
      if (ApplicationId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ApplicationId);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(170, 6);
        output.WriteString(Id);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(178, 6);
        output.WriteString(UserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Kind.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Kind);
      }
      if (Enabled != false) {
        size += 1 + 1;
      }
      if (State.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(State);
      }
      if (EditionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EditionId);
      }
      if (CustomerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CustomerId);
      }
      if (ApplicationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ApplicationId);
      }
      if (Id.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (UserId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserLicense other) {
      if (other == null) {
        return;
      }
      if (other.Kind.Length != 0) {
        Kind = other.Kind;
      }
      if (other.Enabled != false) {
        Enabled = other.Enabled;
      }
      if (other.State.Length != 0) {
        State = other.State;
      }
      if (other.EditionId.Length != 0) {
        EditionId = other.EditionId;
      }
      if (other.CustomerId.Length != 0) {
        CustomerId = other.CustomerId;
      }
      if (other.ApplicationId.Length != 0) {
        ApplicationId = other.ApplicationId;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Kind = input.ReadString();
            break;
          }
          case 16: {
            Enabled = input.ReadBool();
            break;
          }
          case 26: {
            State = input.ReadString();
            break;
          }
          case 34: {
            EditionId = input.ReadString();
            break;
          }
          case 42: {
            CustomerId = input.ReadString();
            break;
          }
          case 50: {
            ApplicationId = input.ReadString();
            break;
          }
          case 810: {
            Id = input.ReadString();
            break;
          }
          case 818: {
            UserId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Kind = input.ReadString();
            break;
          }
          case 16: {
            Enabled = input.ReadBool();
            break;
          }
          case 26: {
            State = input.ReadString();
            break;
          }
          case 34: {
            EditionId = input.ReadString();
            break;
          }
          case 42: {
            CustomerId = input.ReadString();
            break;
          }
          case 50: {
            ApplicationId = input.ReadString();
            break;
          }
          case 810: {
            Id = input.ReadString();
            break;
          }
          case 818: {
            UserId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
