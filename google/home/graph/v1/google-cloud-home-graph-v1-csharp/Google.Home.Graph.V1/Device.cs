// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/home/graph/v1/device.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Home.Graph.V1 {

  /// <summary>Holder for reflection information generated from google/home/graph/v1/device.proto</summary>
  public static partial class DeviceReflection {

    #region Descriptor
    /// <summary>File descriptor for google/home/graph/v1/device.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DeviceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiFnb29nbGUvaG9tZS9ncmFwaC92MS9kZXZpY2UucHJvdG8SFGdvb2dsZS5o",
            "b21lLmdyYXBoLnYxGhxnb29nbGUvcHJvdG9idWYvc3RydWN0LnByb3RvIqgD",
            "CgZEZXZpY2USCgoCaWQYASABKAkSDAoEdHlwZRgCIAEoCRIOCgZ0cmFpdHMY",
            "AyADKAkSLwoEbmFtZRgEIAEoCzIhLmdvb2dsZS5ob21lLmdyYXBoLnYxLkRl",
            "dmljZU5hbWVzEhkKEXdpbGxfcmVwb3J0X3N0YXRlGAUgASgIEhEKCXJvb21f",
            "aGludBgGIAEoCRIWCg5zdHJ1Y3R1cmVfaGludBgHIAEoCRI1CgtkZXZpY2Vf",
            "aW5mbxgIIAEoCzIgLmdvb2dsZS5ob21lLmdyYXBoLnYxLkRldmljZUluZm8S",
            "KwoKYXR0cmlidXRlcxgJIAEoCzIXLmdvb2dsZS5wcm90b2J1Zi5TdHJ1Y3QS",
            "LAoLY3VzdG9tX2RhdGEYCiABKAsyFy5nb29nbGUucHJvdG9idWYuU3RydWN0",
            "EkIKEG90aGVyX2RldmljZV9pZHMYCyADKAsyKC5nb29nbGUuaG9tZS5ncmFw",
            "aC52MS5BZ2VudE90aGVyRGV2aWNlSWQSJwofbm90aWZpY2F0aW9uX3N1cHBv",
            "cnRlZF9ieV9hZ2VudBgMIAEoCCJFCgtEZXZpY2VOYW1lcxIMCgRuYW1lGAEg",
            "ASgJEhEKCW5pY2tuYW1lcxgCIAMoCRIVCg1kZWZhdWx0X25hbWVzGAMgAygJ",
            "IlkKCkRldmljZUluZm8SFAoMbWFudWZhY3R1cmVyGAEgASgJEg0KBW1vZGVs",
            "GAIgASgJEhIKCmh3X3ZlcnNpb24YAyABKAkSEgoKc3dfdmVyc2lvbhgEIAEo",
            "CSI5ChJBZ2VudE90aGVyRGV2aWNlSWQSEAoIYWdlbnRfaWQYASABKAkSEQoJ",
            "ZGV2aWNlX2lkGAIgASgJQnkKGGNvbS5nb29nbGUuaG9tZS5ncmFwaC52MUIL",
            "RGV2aWNlUHJvdG9aOWdvb2dsZS5nb2xhbmcub3JnL2dlbnByb3RvL2dvb2ds",
            "ZWFwaXMvaG9tZS9ncmFwaC92MTtncmFwaMoCFEdvb2dsZVxIb21lXEdyYXBo",
            "XFYxYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.StructReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Home.Graph.V1.Device), global::Google.Home.Graph.V1.Device.Parser, new[]{ "Id", "Type", "Traits", "Name", "WillReportState", "RoomHint", "StructureHint", "DeviceInfo", "Attributes", "CustomData", "OtherDeviceIds", "NotificationSupportedByAgent" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Home.Graph.V1.DeviceNames), global::Google.Home.Graph.V1.DeviceNames.Parser, new[]{ "Name", "Nicknames", "DefaultNames" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Home.Graph.V1.DeviceInfo), global::Google.Home.Graph.V1.DeviceInfo.Parser, new[]{ "Manufacturer", "Model", "HwVersion", "SwVersion" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Home.Graph.V1.AgentOtherDeviceId), global::Google.Home.Graph.V1.AgentOtherDeviceId.Parser, new[]{ "AgentId", "DeviceId" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Third-party device definition.
  /// </summary>
  public sealed partial class Device : pb::IMessage<Device>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Device> _parser = new pb::MessageParser<Device>(() => new Device());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Device> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Home.Graph.V1.DeviceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Device() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Device(Device other) : this() {
      id_ = other.id_;
      type_ = other.type_;
      traits_ = other.traits_.Clone();
      name_ = other.name_ != null ? other.name_.Clone() : null;
      willReportState_ = other.willReportState_;
      roomHint_ = other.roomHint_;
      structureHint_ = other.structureHint_;
      deviceInfo_ = other.deviceInfo_ != null ? other.deviceInfo_.Clone() : null;
      attributes_ = other.attributes_ != null ? other.attributes_.Clone() : null;
      customData_ = other.customData_ != null ? other.customData_.Clone() : null;
      otherDeviceIds_ = other.otherDeviceIds_.Clone();
      notificationSupportedByAgent_ = other.notificationSupportedByAgent_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Device Clone() {
      return new Device(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// Third-party device ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private string type_ = "";
    /// <summary>
    /// Hardware type of the device.
    /// See [device
    /// types](https://developers.google.com/assistant/smarthome/guides).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "traits" field.</summary>
    public const int TraitsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_traits_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> traits_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Traits supported by the device.
    /// See [device
    /// traits](https://developers.google.com/assistant/smarthome/traits).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Traits {
      get { return traits_; }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private global::Google.Home.Graph.V1.DeviceNames name_;
    /// <summary>
    /// Names given to this device by your smart home Action.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Home.Graph.V1.DeviceNames Name {
      get { return name_; }
      set {
        name_ = value;
      }
    }

    /// <summary>Field number for the "will_report_state" field.</summary>
    public const int WillReportStateFieldNumber = 5;
    private bool willReportState_;
    /// <summary>
    /// Indicates whether your smart home Action will report state of this device
    /// to Google via
    /// [ReportStateAndNotification][google.home.graph.v1.HomeGraphApiService.ReportStateAndNotification].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool WillReportState {
      get { return willReportState_; }
      set {
        willReportState_ = value;
      }
    }

    /// <summary>Field number for the "room_hint" field.</summary>
    public const int RoomHintFieldNumber = 6;
    private string roomHint_ = "";
    /// <summary>
    /// Suggested name for the room where this device is installed.
    /// Google attempts to use this value during user setup.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomHint {
      get { return roomHint_; }
      set {
        roomHint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "structure_hint" field.</summary>
    public const int StructureHintFieldNumber = 7;
    private string structureHint_ = "";
    /// <summary>
    /// Suggested name for the structure where this device is installed.
    /// Google attempts to use this value during user setup.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StructureHint {
      get { return structureHint_; }
      set {
        structureHint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "device_info" field.</summary>
    public const int DeviceInfoFieldNumber = 8;
    private global::Google.Home.Graph.V1.DeviceInfo deviceInfo_;
    /// <summary>
    /// Device manufacturer, model, hardware version, and software version.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Home.Graph.V1.DeviceInfo DeviceInfo {
      get { return deviceInfo_; }
      set {
        deviceInfo_ = value;
      }
    }

    /// <summary>Field number for the "attributes" field.</summary>
    public const int AttributesFieldNumber = 9;
    private global::Google.Protobuf.WellKnownTypes.Struct attributes_;
    /// <summary>
    /// Attributes for the traits supported by the device.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Struct Attributes {
      get { return attributes_; }
      set {
        attributes_ = value;
      }
    }

    /// <summary>Field number for the "custom_data" field.</summary>
    public const int CustomDataFieldNumber = 10;
    private global::Google.Protobuf.WellKnownTypes.Struct customData_;
    /// <summary>
    /// Custom device attributes stored in Home Graph and provided to your
    /// smart home Action in each
    /// [QUERY](https://developers.google.com/assistant/smarthome/reference/intent/query)
    /// and
    /// [EXECUTE](https://developers.google.com/assistant/smarthome/reference/intent/execute)
    /// intent.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Struct CustomData {
      get { return customData_; }
      set {
        customData_ = value;
      }
    }

    /// <summary>Field number for the "other_device_ids" field.</summary>
    public const int OtherDeviceIdsFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Google.Home.Graph.V1.AgentOtherDeviceId> _repeated_otherDeviceIds_codec
        = pb::FieldCodec.ForMessage(90, global::Google.Home.Graph.V1.AgentOtherDeviceId.Parser);
    private readonly pbc::RepeatedField<global::Google.Home.Graph.V1.AgentOtherDeviceId> otherDeviceIds_ = new pbc::RepeatedField<global::Google.Home.Graph.V1.AgentOtherDeviceId>();
    /// <summary>
    /// Alternate IDs associated with this device.
    /// This is used to identify cloud synced devices enabled for [local
    /// fulfillment](https://developers.google.com/assistant/smarthome/concepts/local).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Home.Graph.V1.AgentOtherDeviceId> OtherDeviceIds {
      get { return otherDeviceIds_; }
    }

    /// <summary>Field number for the "notification_supported_by_agent" field.</summary>
    public const int NotificationSupportedByAgentFieldNumber = 12;
    private bool notificationSupportedByAgent_;
    /// <summary>
    /// Indicates whether your smart home Action will report notifications
    /// to Google for this device via
    /// [ReportStateAndNotification][google.home.graph.v1.HomeGraphApiService.ReportStateAndNotification].
    ///
    /// If your smart home Action enables users to control device notifications,
    /// you should update this field and call
    /// [RequestSyncDevices][google.home.graph.v1.HomeGraphApiService.RequestSyncDevices].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool NotificationSupportedByAgent {
      get { return notificationSupportedByAgent_; }
      set {
        notificationSupportedByAgent_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Device);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Device other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Type != other.Type) return false;
      if(!traits_.Equals(other.traits_)) return false;
      if (!object.Equals(Name, other.Name)) return false;
      if (WillReportState != other.WillReportState) return false;
      if (RoomHint != other.RoomHint) return false;
      if (StructureHint != other.StructureHint) return false;
      if (!object.Equals(DeviceInfo, other.DeviceInfo)) return false;
      if (!object.Equals(Attributes, other.Attributes)) return false;
      if (!object.Equals(CustomData, other.CustomData)) return false;
      if(!otherDeviceIds_.Equals(other.otherDeviceIds_)) return false;
      if (NotificationSupportedByAgent != other.NotificationSupportedByAgent) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      hash ^= traits_.GetHashCode();
      if (name_ != null) hash ^= Name.GetHashCode();
      if (WillReportState != false) hash ^= WillReportState.GetHashCode();
      if (RoomHint.Length != 0) hash ^= RoomHint.GetHashCode();
      if (StructureHint.Length != 0) hash ^= StructureHint.GetHashCode();
      if (deviceInfo_ != null) hash ^= DeviceInfo.GetHashCode();
      if (attributes_ != null) hash ^= Attributes.GetHashCode();
      if (customData_ != null) hash ^= CustomData.GetHashCode();
      hash ^= otherDeviceIds_.GetHashCode();
      if (NotificationSupportedByAgent != false) hash ^= NotificationSupportedByAgent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Type);
      }
      traits_.WriteTo(output, _repeated_traits_codec);
      if (name_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Name);
      }
      if (WillReportState != false) {
        output.WriteRawTag(40);
        output.WriteBool(WillReportState);
      }
      if (RoomHint.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(RoomHint);
      }
      if (StructureHint.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(StructureHint);
      }
      if (deviceInfo_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(DeviceInfo);
      }
      if (attributes_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Attributes);
      }
      if (customData_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(CustomData);
      }
      otherDeviceIds_.WriteTo(output, _repeated_otherDeviceIds_codec);
      if (NotificationSupportedByAgent != false) {
        output.WriteRawTag(96);
        output.WriteBool(NotificationSupportedByAgent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Type);
      }
      traits_.WriteTo(ref output, _repeated_traits_codec);
      if (name_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Name);
      }
      if (WillReportState != false) {
        output.WriteRawTag(40);
        output.WriteBool(WillReportState);
      }
      if (RoomHint.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(RoomHint);
      }
      if (StructureHint.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(StructureHint);
      }
      if (deviceInfo_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(DeviceInfo);
      }
      if (attributes_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Attributes);
      }
      if (customData_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(CustomData);
      }
      otherDeviceIds_.WriteTo(ref output, _repeated_otherDeviceIds_codec);
      if (NotificationSupportedByAgent != false) {
        output.WriteRawTag(96);
        output.WriteBool(NotificationSupportedByAgent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      size += traits_.CalculateSize(_repeated_traits_codec);
      if (name_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Name);
      }
      if (WillReportState != false) {
        size += 1 + 1;
      }
      if (RoomHint.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomHint);
      }
      if (StructureHint.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StructureHint);
      }
      if (deviceInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeviceInfo);
      }
      if (attributes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Attributes);
      }
      if (customData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CustomData);
      }
      size += otherDeviceIds_.CalculateSize(_repeated_otherDeviceIds_codec);
      if (NotificationSupportedByAgent != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Device other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      traits_.Add(other.traits_);
      if (other.name_ != null) {
        if (name_ == null) {
          Name = new global::Google.Home.Graph.V1.DeviceNames();
        }
        Name.MergeFrom(other.Name);
      }
      if (other.WillReportState != false) {
        WillReportState = other.WillReportState;
      }
      if (other.RoomHint.Length != 0) {
        RoomHint = other.RoomHint;
      }
      if (other.StructureHint.Length != 0) {
        StructureHint = other.StructureHint;
      }
      if (other.deviceInfo_ != null) {
        if (deviceInfo_ == null) {
          DeviceInfo = new global::Google.Home.Graph.V1.DeviceInfo();
        }
        DeviceInfo.MergeFrom(other.DeviceInfo);
      }
      if (other.attributes_ != null) {
        if (attributes_ == null) {
          Attributes = new global::Google.Protobuf.WellKnownTypes.Struct();
        }
        Attributes.MergeFrom(other.Attributes);
      }
      if (other.customData_ != null) {
        if (customData_ == null) {
          CustomData = new global::Google.Protobuf.WellKnownTypes.Struct();
        }
        CustomData.MergeFrom(other.CustomData);
      }
      otherDeviceIds_.Add(other.otherDeviceIds_);
      if (other.NotificationSupportedByAgent != false) {
        NotificationSupportedByAgent = other.NotificationSupportedByAgent;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Type = input.ReadString();
            break;
          }
          case 26: {
            traits_.AddEntriesFrom(input, _repeated_traits_codec);
            break;
          }
          case 34: {
            if (name_ == null) {
              Name = new global::Google.Home.Graph.V1.DeviceNames();
            }
            input.ReadMessage(Name);
            break;
          }
          case 40: {
            WillReportState = input.ReadBool();
            break;
          }
          case 50: {
            RoomHint = input.ReadString();
            break;
          }
          case 58: {
            StructureHint = input.ReadString();
            break;
          }
          case 66: {
            if (deviceInfo_ == null) {
              DeviceInfo = new global::Google.Home.Graph.V1.DeviceInfo();
            }
            input.ReadMessage(DeviceInfo);
            break;
          }
          case 74: {
            if (attributes_ == null) {
              Attributes = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(Attributes);
            break;
          }
          case 82: {
            if (customData_ == null) {
              CustomData = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(CustomData);
            break;
          }
          case 90: {
            otherDeviceIds_.AddEntriesFrom(input, _repeated_otherDeviceIds_codec);
            break;
          }
          case 96: {
            NotificationSupportedByAgent = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Type = input.ReadString();
            break;
          }
          case 26: {
            traits_.AddEntriesFrom(ref input, _repeated_traits_codec);
            break;
          }
          case 34: {
            if (name_ == null) {
              Name = new global::Google.Home.Graph.V1.DeviceNames();
            }
            input.ReadMessage(Name);
            break;
          }
          case 40: {
            WillReportState = input.ReadBool();
            break;
          }
          case 50: {
            RoomHint = input.ReadString();
            break;
          }
          case 58: {
            StructureHint = input.ReadString();
            break;
          }
          case 66: {
            if (deviceInfo_ == null) {
              DeviceInfo = new global::Google.Home.Graph.V1.DeviceInfo();
            }
            input.ReadMessage(DeviceInfo);
            break;
          }
          case 74: {
            if (attributes_ == null) {
              Attributes = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(Attributes);
            break;
          }
          case 82: {
            if (customData_ == null) {
              CustomData = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(CustomData);
            break;
          }
          case 90: {
            otherDeviceIds_.AddEntriesFrom(ref input, _repeated_otherDeviceIds_codec);
            break;
          }
          case 96: {
            NotificationSupportedByAgent = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Identifiers used to describe the device.
  /// </summary>
  public sealed partial class DeviceNames : pb::IMessage<DeviceNames>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeviceNames> _parser = new pb::MessageParser<DeviceNames>(() => new DeviceNames());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeviceNames> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Home.Graph.V1.DeviceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceNames() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceNames(DeviceNames other) : this() {
      name_ = other.name_;
      nicknames_ = other.nicknames_.Clone();
      defaultNames_ = other.defaultNames_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceNames Clone() {
      return new DeviceNames(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Primary name of the device, generally provided by the user.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nicknames" field.</summary>
    public const int NicknamesFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_nicknames_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> nicknames_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Additional names provided by the user for the device.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Nicknames {
      get { return nicknames_; }
    }

    /// <summary>Field number for the "default_names" field.</summary>
    public const int DefaultNamesFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_defaultNames_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> defaultNames_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// List of names provided by the manufacturer rather than the user, such as
    /// serial numbers, SKUs, etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> DefaultNames {
      get { return defaultNames_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeviceNames);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeviceNames other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if(!nicknames_.Equals(other.nicknames_)) return false;
      if(!defaultNames_.Equals(other.defaultNames_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= nicknames_.GetHashCode();
      hash ^= defaultNames_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      nicknames_.WriteTo(output, _repeated_nicknames_codec);
      defaultNames_.WriteTo(output, _repeated_defaultNames_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      nicknames_.WriteTo(ref output, _repeated_nicknames_codec);
      defaultNames_.WriteTo(ref output, _repeated_defaultNames_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += nicknames_.CalculateSize(_repeated_nicknames_codec);
      size += defaultNames_.CalculateSize(_repeated_defaultNames_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeviceNames other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      nicknames_.Add(other.nicknames_);
      defaultNames_.Add(other.defaultNames_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            nicknames_.AddEntriesFrom(input, _repeated_nicknames_codec);
            break;
          }
          case 26: {
            defaultNames_.AddEntriesFrom(input, _repeated_defaultNames_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            nicknames_.AddEntriesFrom(ref input, _repeated_nicknames_codec);
            break;
          }
          case 26: {
            defaultNames_.AddEntriesFrom(ref input, _repeated_defaultNames_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Device information.
  /// </summary>
  public sealed partial class DeviceInfo : pb::IMessage<DeviceInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeviceInfo> _parser = new pb::MessageParser<DeviceInfo>(() => new DeviceInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeviceInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Home.Graph.V1.DeviceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceInfo(DeviceInfo other) : this() {
      manufacturer_ = other.manufacturer_;
      model_ = other.model_;
      hwVersion_ = other.hwVersion_;
      swVersion_ = other.swVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceInfo Clone() {
      return new DeviceInfo(this);
    }

    /// <summary>Field number for the "manufacturer" field.</summary>
    public const int ManufacturerFieldNumber = 1;
    private string manufacturer_ = "";
    /// <summary>
    /// Device manufacturer.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Manufacturer {
      get { return manufacturer_; }
      set {
        manufacturer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "model" field.</summary>
    public const int ModelFieldNumber = 2;
    private string model_ = "";
    /// <summary>
    /// Device model.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Model {
      get { return model_; }
      set {
        model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hw_version" field.</summary>
    public const int HwVersionFieldNumber = 3;
    private string hwVersion_ = "";
    /// <summary>
    /// Device hardware version.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HwVersion {
      get { return hwVersion_; }
      set {
        hwVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sw_version" field.</summary>
    public const int SwVersionFieldNumber = 4;
    private string swVersion_ = "";
    /// <summary>
    /// Device software version.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SwVersion {
      get { return swVersion_; }
      set {
        swVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeviceInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeviceInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Manufacturer != other.Manufacturer) return false;
      if (Model != other.Model) return false;
      if (HwVersion != other.HwVersion) return false;
      if (SwVersion != other.SwVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Manufacturer.Length != 0) hash ^= Manufacturer.GetHashCode();
      if (Model.Length != 0) hash ^= Model.GetHashCode();
      if (HwVersion.Length != 0) hash ^= HwVersion.GetHashCode();
      if (SwVersion.Length != 0) hash ^= SwVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Manufacturer.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Manufacturer);
      }
      if (Model.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Model);
      }
      if (HwVersion.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(HwVersion);
      }
      if (SwVersion.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SwVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Manufacturer.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Manufacturer);
      }
      if (Model.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Model);
      }
      if (HwVersion.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(HwVersion);
      }
      if (SwVersion.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SwVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Manufacturer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Manufacturer);
      }
      if (Model.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Model);
      }
      if (HwVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HwVersion);
      }
      if (SwVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SwVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeviceInfo other) {
      if (other == null) {
        return;
      }
      if (other.Manufacturer.Length != 0) {
        Manufacturer = other.Manufacturer;
      }
      if (other.Model.Length != 0) {
        Model = other.Model;
      }
      if (other.HwVersion.Length != 0) {
        HwVersion = other.HwVersion;
      }
      if (other.SwVersion.Length != 0) {
        SwVersion = other.SwVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Manufacturer = input.ReadString();
            break;
          }
          case 18: {
            Model = input.ReadString();
            break;
          }
          case 26: {
            HwVersion = input.ReadString();
            break;
          }
          case 34: {
            SwVersion = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Manufacturer = input.ReadString();
            break;
          }
          case 18: {
            Model = input.ReadString();
            break;
          }
          case 26: {
            HwVersion = input.ReadString();
            break;
          }
          case 34: {
            SwVersion = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Alternate third-party device ID.
  /// </summary>
  public sealed partial class AgentOtherDeviceId : pb::IMessage<AgentOtherDeviceId>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AgentOtherDeviceId> _parser = new pb::MessageParser<AgentOtherDeviceId>(() => new AgentOtherDeviceId());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AgentOtherDeviceId> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Home.Graph.V1.DeviceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AgentOtherDeviceId() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AgentOtherDeviceId(AgentOtherDeviceId other) : this() {
      agentId_ = other.agentId_;
      deviceId_ = other.deviceId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AgentOtherDeviceId Clone() {
      return new AgentOtherDeviceId(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private string agentId_ = "";
    /// <summary>
    /// Project ID for your smart home Action.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AgentId {
      get { return agentId_; }
      set {
        agentId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "device_id" field.</summary>
    public const int DeviceIdFieldNumber = 2;
    private string deviceId_ = "";
    /// <summary>
    /// Unique third-party device ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AgentOtherDeviceId);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AgentOtherDeviceId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AgentId != other.AgentId) return false;
      if (DeviceId != other.DeviceId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AgentId.Length != 0) hash ^= AgentId.GetHashCode();
      if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AgentId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AgentId);
      }
      if (DeviceId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DeviceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AgentId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AgentId);
      }
      if (DeviceId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DeviceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AgentId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AgentId);
      }
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AgentOtherDeviceId other) {
      if (other == null) {
        return;
      }
      if (other.AgentId.Length != 0) {
        AgentId = other.AgentId;
      }
      if (other.DeviceId.Length != 0) {
        DeviceId = other.DeviceId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AgentId = input.ReadString();
            break;
          }
          case 18: {
            DeviceId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            AgentId = input.ReadString();
            break;
          }
          case 18: {
            DeviceId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
