// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/home/enterprise/sdm/v1/smart_device_management_service.proto
// </auto-generated>
// Original file comments:
// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Home.Enterprise.Sdm.V1 {
  /// <summary>
  /// A service that allows API consumers to provision and manage Google
  /// Home structures and devices for enterprise use cases.
  /// </summary>
  public static partial class SmartDeviceManagementService
  {
    static readonly string __ServiceName = "google.home.enterprise.sdm.v1.SmartDeviceManagementService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Home.Enterprise.Sdm.V1.GetDeviceRequest> __Marshaller_google_home_enterprise_sdm_v1_GetDeviceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Home.Enterprise.Sdm.V1.GetDeviceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Home.Enterprise.Sdm.V1.Device> __Marshaller_google_home_enterprise_sdm_v1_Device = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Home.Enterprise.Sdm.V1.Device.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Home.Enterprise.Sdm.V1.ListDevicesRequest> __Marshaller_google_home_enterprise_sdm_v1_ListDevicesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Home.Enterprise.Sdm.V1.ListDevicesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Home.Enterprise.Sdm.V1.ListDevicesResponse> __Marshaller_google_home_enterprise_sdm_v1_ListDevicesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Home.Enterprise.Sdm.V1.ListDevicesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Home.Enterprise.Sdm.V1.ExecuteDeviceCommandRequest> __Marshaller_google_home_enterprise_sdm_v1_ExecuteDeviceCommandRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Home.Enterprise.Sdm.V1.ExecuteDeviceCommandRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Home.Enterprise.Sdm.V1.ExecuteDeviceCommandResponse> __Marshaller_google_home_enterprise_sdm_v1_ExecuteDeviceCommandResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Home.Enterprise.Sdm.V1.ExecuteDeviceCommandResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Home.Enterprise.Sdm.V1.GetStructureRequest> __Marshaller_google_home_enterprise_sdm_v1_GetStructureRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Home.Enterprise.Sdm.V1.GetStructureRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Home.Enterprise.Sdm.V1.Structure> __Marshaller_google_home_enterprise_sdm_v1_Structure = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Home.Enterprise.Sdm.V1.Structure.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Home.Enterprise.Sdm.V1.ListStructuresRequest> __Marshaller_google_home_enterprise_sdm_v1_ListStructuresRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Home.Enterprise.Sdm.V1.ListStructuresRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Home.Enterprise.Sdm.V1.ListStructuresResponse> __Marshaller_google_home_enterprise_sdm_v1_ListStructuresResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Home.Enterprise.Sdm.V1.ListStructuresResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Home.Enterprise.Sdm.V1.GetRoomRequest> __Marshaller_google_home_enterprise_sdm_v1_GetRoomRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Home.Enterprise.Sdm.V1.GetRoomRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Home.Enterprise.Sdm.V1.Room> __Marshaller_google_home_enterprise_sdm_v1_Room = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Home.Enterprise.Sdm.V1.Room.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Home.Enterprise.Sdm.V1.ListRoomsRequest> __Marshaller_google_home_enterprise_sdm_v1_ListRoomsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Home.Enterprise.Sdm.V1.ListRoomsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Home.Enterprise.Sdm.V1.ListRoomsResponse> __Marshaller_google_home_enterprise_sdm_v1_ListRoomsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Home.Enterprise.Sdm.V1.ListRoomsResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Home.Enterprise.Sdm.V1.GetDeviceRequest, global::Google.Home.Enterprise.Sdm.V1.Device> __Method_GetDevice = new grpc::Method<global::Google.Home.Enterprise.Sdm.V1.GetDeviceRequest, global::Google.Home.Enterprise.Sdm.V1.Device>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDevice",
        __Marshaller_google_home_enterprise_sdm_v1_GetDeviceRequest,
        __Marshaller_google_home_enterprise_sdm_v1_Device);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Home.Enterprise.Sdm.V1.ListDevicesRequest, global::Google.Home.Enterprise.Sdm.V1.ListDevicesResponse> __Method_ListDevices = new grpc::Method<global::Google.Home.Enterprise.Sdm.V1.ListDevicesRequest, global::Google.Home.Enterprise.Sdm.V1.ListDevicesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListDevices",
        __Marshaller_google_home_enterprise_sdm_v1_ListDevicesRequest,
        __Marshaller_google_home_enterprise_sdm_v1_ListDevicesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Home.Enterprise.Sdm.V1.ExecuteDeviceCommandRequest, global::Google.Home.Enterprise.Sdm.V1.ExecuteDeviceCommandResponse> __Method_ExecuteDeviceCommand = new grpc::Method<global::Google.Home.Enterprise.Sdm.V1.ExecuteDeviceCommandRequest, global::Google.Home.Enterprise.Sdm.V1.ExecuteDeviceCommandResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ExecuteDeviceCommand",
        __Marshaller_google_home_enterprise_sdm_v1_ExecuteDeviceCommandRequest,
        __Marshaller_google_home_enterprise_sdm_v1_ExecuteDeviceCommandResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Home.Enterprise.Sdm.V1.GetStructureRequest, global::Google.Home.Enterprise.Sdm.V1.Structure> __Method_GetStructure = new grpc::Method<global::Google.Home.Enterprise.Sdm.V1.GetStructureRequest, global::Google.Home.Enterprise.Sdm.V1.Structure>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetStructure",
        __Marshaller_google_home_enterprise_sdm_v1_GetStructureRequest,
        __Marshaller_google_home_enterprise_sdm_v1_Structure);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Home.Enterprise.Sdm.V1.ListStructuresRequest, global::Google.Home.Enterprise.Sdm.V1.ListStructuresResponse> __Method_ListStructures = new grpc::Method<global::Google.Home.Enterprise.Sdm.V1.ListStructuresRequest, global::Google.Home.Enterprise.Sdm.V1.ListStructuresResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListStructures",
        __Marshaller_google_home_enterprise_sdm_v1_ListStructuresRequest,
        __Marshaller_google_home_enterprise_sdm_v1_ListStructuresResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Home.Enterprise.Sdm.V1.GetRoomRequest, global::Google.Home.Enterprise.Sdm.V1.Room> __Method_GetRoom = new grpc::Method<global::Google.Home.Enterprise.Sdm.V1.GetRoomRequest, global::Google.Home.Enterprise.Sdm.V1.Room>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetRoom",
        __Marshaller_google_home_enterprise_sdm_v1_GetRoomRequest,
        __Marshaller_google_home_enterprise_sdm_v1_Room);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Home.Enterprise.Sdm.V1.ListRoomsRequest, global::Google.Home.Enterprise.Sdm.V1.ListRoomsResponse> __Method_ListRooms = new grpc::Method<global::Google.Home.Enterprise.Sdm.V1.ListRoomsRequest, global::Google.Home.Enterprise.Sdm.V1.ListRoomsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListRooms",
        __Marshaller_google_home_enterprise_sdm_v1_ListRoomsRequest,
        __Marshaller_google_home_enterprise_sdm_v1_ListRoomsResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Home.Enterprise.Sdm.V1.SmartDeviceManagementServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of SmartDeviceManagementService</summary>
    [grpc::BindServiceMethod(typeof(SmartDeviceManagementService), "BindService")]
    public abstract partial class SmartDeviceManagementServiceBase
    {
      /// <summary>
      /// Gets a device managed by the enterprise.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Home.Enterprise.Sdm.V1.Device> GetDevice(global::Google.Home.Enterprise.Sdm.V1.GetDeviceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists devices managed by the enterprise.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Home.Enterprise.Sdm.V1.ListDevicesResponse> ListDevices(global::Google.Home.Enterprise.Sdm.V1.ListDevicesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Executes a command to device managed by the enterprise.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Home.Enterprise.Sdm.V1.ExecuteDeviceCommandResponse> ExecuteDeviceCommand(global::Google.Home.Enterprise.Sdm.V1.ExecuteDeviceCommandRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a structure managed by the enterprise.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Home.Enterprise.Sdm.V1.Structure> GetStructure(global::Google.Home.Enterprise.Sdm.V1.GetStructureRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists structures managed by the enterprise.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Home.Enterprise.Sdm.V1.ListStructuresResponse> ListStructures(global::Google.Home.Enterprise.Sdm.V1.ListStructuresRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a room managed by the enterprise.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Home.Enterprise.Sdm.V1.Room> GetRoom(global::Google.Home.Enterprise.Sdm.V1.GetRoomRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists rooms managed by the enterprise.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Home.Enterprise.Sdm.V1.ListRoomsResponse> ListRooms(global::Google.Home.Enterprise.Sdm.V1.ListRoomsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for SmartDeviceManagementService</summary>
    public partial class SmartDeviceManagementServiceClient : grpc::ClientBase<SmartDeviceManagementServiceClient>
    {
      /// <summary>Creates a new client for SmartDeviceManagementService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public SmartDeviceManagementServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for SmartDeviceManagementService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public SmartDeviceManagementServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected SmartDeviceManagementServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected SmartDeviceManagementServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Gets a device managed by the enterprise.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Home.Enterprise.Sdm.V1.Device GetDevice(global::Google.Home.Enterprise.Sdm.V1.GetDeviceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDevice(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a device managed by the enterprise.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Home.Enterprise.Sdm.V1.Device GetDevice(global::Google.Home.Enterprise.Sdm.V1.GetDeviceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDevice, null, options, request);
      }
      /// <summary>
      /// Gets a device managed by the enterprise.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Home.Enterprise.Sdm.V1.Device> GetDeviceAsync(global::Google.Home.Enterprise.Sdm.V1.GetDeviceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDeviceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a device managed by the enterprise.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Home.Enterprise.Sdm.V1.Device> GetDeviceAsync(global::Google.Home.Enterprise.Sdm.V1.GetDeviceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDevice, null, options, request);
      }
      /// <summary>
      /// Lists devices managed by the enterprise.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Home.Enterprise.Sdm.V1.ListDevicesResponse ListDevices(global::Google.Home.Enterprise.Sdm.V1.ListDevicesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDevices(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists devices managed by the enterprise.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Home.Enterprise.Sdm.V1.ListDevicesResponse ListDevices(global::Google.Home.Enterprise.Sdm.V1.ListDevicesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListDevices, null, options, request);
      }
      /// <summary>
      /// Lists devices managed by the enterprise.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Home.Enterprise.Sdm.V1.ListDevicesResponse> ListDevicesAsync(global::Google.Home.Enterprise.Sdm.V1.ListDevicesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDevicesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists devices managed by the enterprise.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Home.Enterprise.Sdm.V1.ListDevicesResponse> ListDevicesAsync(global::Google.Home.Enterprise.Sdm.V1.ListDevicesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListDevices, null, options, request);
      }
      /// <summary>
      /// Executes a command to device managed by the enterprise.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Home.Enterprise.Sdm.V1.ExecuteDeviceCommandResponse ExecuteDeviceCommand(global::Google.Home.Enterprise.Sdm.V1.ExecuteDeviceCommandRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExecuteDeviceCommand(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Executes a command to device managed by the enterprise.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Home.Enterprise.Sdm.V1.ExecuteDeviceCommandResponse ExecuteDeviceCommand(global::Google.Home.Enterprise.Sdm.V1.ExecuteDeviceCommandRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ExecuteDeviceCommand, null, options, request);
      }
      /// <summary>
      /// Executes a command to device managed by the enterprise.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Home.Enterprise.Sdm.V1.ExecuteDeviceCommandResponse> ExecuteDeviceCommandAsync(global::Google.Home.Enterprise.Sdm.V1.ExecuteDeviceCommandRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExecuteDeviceCommandAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Executes a command to device managed by the enterprise.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Home.Enterprise.Sdm.V1.ExecuteDeviceCommandResponse> ExecuteDeviceCommandAsync(global::Google.Home.Enterprise.Sdm.V1.ExecuteDeviceCommandRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ExecuteDeviceCommand, null, options, request);
      }
      /// <summary>
      /// Gets a structure managed by the enterprise.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Home.Enterprise.Sdm.V1.Structure GetStructure(global::Google.Home.Enterprise.Sdm.V1.GetStructureRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetStructure(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a structure managed by the enterprise.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Home.Enterprise.Sdm.V1.Structure GetStructure(global::Google.Home.Enterprise.Sdm.V1.GetStructureRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetStructure, null, options, request);
      }
      /// <summary>
      /// Gets a structure managed by the enterprise.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Home.Enterprise.Sdm.V1.Structure> GetStructureAsync(global::Google.Home.Enterprise.Sdm.V1.GetStructureRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetStructureAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a structure managed by the enterprise.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Home.Enterprise.Sdm.V1.Structure> GetStructureAsync(global::Google.Home.Enterprise.Sdm.V1.GetStructureRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetStructure, null, options, request);
      }
      /// <summary>
      /// Lists structures managed by the enterprise.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Home.Enterprise.Sdm.V1.ListStructuresResponse ListStructures(global::Google.Home.Enterprise.Sdm.V1.ListStructuresRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListStructures(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists structures managed by the enterprise.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Home.Enterprise.Sdm.V1.ListStructuresResponse ListStructures(global::Google.Home.Enterprise.Sdm.V1.ListStructuresRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListStructures, null, options, request);
      }
      /// <summary>
      /// Lists structures managed by the enterprise.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Home.Enterprise.Sdm.V1.ListStructuresResponse> ListStructuresAsync(global::Google.Home.Enterprise.Sdm.V1.ListStructuresRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListStructuresAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists structures managed by the enterprise.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Home.Enterprise.Sdm.V1.ListStructuresResponse> ListStructuresAsync(global::Google.Home.Enterprise.Sdm.V1.ListStructuresRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListStructures, null, options, request);
      }
      /// <summary>
      /// Gets a room managed by the enterprise.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Home.Enterprise.Sdm.V1.Room GetRoom(global::Google.Home.Enterprise.Sdm.V1.GetRoomRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRoom(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a room managed by the enterprise.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Home.Enterprise.Sdm.V1.Room GetRoom(global::Google.Home.Enterprise.Sdm.V1.GetRoomRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetRoom, null, options, request);
      }
      /// <summary>
      /// Gets a room managed by the enterprise.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Home.Enterprise.Sdm.V1.Room> GetRoomAsync(global::Google.Home.Enterprise.Sdm.V1.GetRoomRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRoomAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a room managed by the enterprise.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Home.Enterprise.Sdm.V1.Room> GetRoomAsync(global::Google.Home.Enterprise.Sdm.V1.GetRoomRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetRoom, null, options, request);
      }
      /// <summary>
      /// Lists rooms managed by the enterprise.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Home.Enterprise.Sdm.V1.ListRoomsResponse ListRooms(global::Google.Home.Enterprise.Sdm.V1.ListRoomsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListRooms(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists rooms managed by the enterprise.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Home.Enterprise.Sdm.V1.ListRoomsResponse ListRooms(global::Google.Home.Enterprise.Sdm.V1.ListRoomsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListRooms, null, options, request);
      }
      /// <summary>
      /// Lists rooms managed by the enterprise.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Home.Enterprise.Sdm.V1.ListRoomsResponse> ListRoomsAsync(global::Google.Home.Enterprise.Sdm.V1.ListRoomsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListRoomsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists rooms managed by the enterprise.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Home.Enterprise.Sdm.V1.ListRoomsResponse> ListRoomsAsync(global::Google.Home.Enterprise.Sdm.V1.ListRoomsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListRooms, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override SmartDeviceManagementServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new SmartDeviceManagementServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(SmartDeviceManagementServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetDevice, serviceImpl.GetDevice)
          .AddMethod(__Method_ListDevices, serviceImpl.ListDevices)
          .AddMethod(__Method_ExecuteDeviceCommand, serviceImpl.ExecuteDeviceCommand)
          .AddMethod(__Method_GetStructure, serviceImpl.GetStructure)
          .AddMethod(__Method_ListStructures, serviceImpl.ListStructures)
          .AddMethod(__Method_GetRoom, serviceImpl.GetRoom)
          .AddMethod(__Method_ListRooms, serviceImpl.ListRooms).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, SmartDeviceManagementServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetDevice, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Home.Enterprise.Sdm.V1.GetDeviceRequest, global::Google.Home.Enterprise.Sdm.V1.Device>(serviceImpl.GetDevice));
      serviceBinder.AddMethod(__Method_ListDevices, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Home.Enterprise.Sdm.V1.ListDevicesRequest, global::Google.Home.Enterprise.Sdm.V1.ListDevicesResponse>(serviceImpl.ListDevices));
      serviceBinder.AddMethod(__Method_ExecuteDeviceCommand, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Home.Enterprise.Sdm.V1.ExecuteDeviceCommandRequest, global::Google.Home.Enterprise.Sdm.V1.ExecuteDeviceCommandResponse>(serviceImpl.ExecuteDeviceCommand));
      serviceBinder.AddMethod(__Method_GetStructure, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Home.Enterprise.Sdm.V1.GetStructureRequest, global::Google.Home.Enterprise.Sdm.V1.Structure>(serviceImpl.GetStructure));
      serviceBinder.AddMethod(__Method_ListStructures, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Home.Enterprise.Sdm.V1.ListStructuresRequest, global::Google.Home.Enterprise.Sdm.V1.ListStructuresResponse>(serviceImpl.ListStructures));
      serviceBinder.AddMethod(__Method_GetRoom, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Home.Enterprise.Sdm.V1.GetRoomRequest, global::Google.Home.Enterprise.Sdm.V1.Room>(serviceImpl.GetRoom));
      serviceBinder.AddMethod(__Method_ListRooms, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Home.Enterprise.Sdm.V1.ListRoomsRequest, global::Google.Home.Enterprise.Sdm.V1.ListRoomsResponse>(serviceImpl.ListRooms));
    }

  }
}
#endregion
